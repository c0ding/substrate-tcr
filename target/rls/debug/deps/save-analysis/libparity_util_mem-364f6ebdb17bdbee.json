{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parity_util_mem","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=364f6ebdb17bdbee","-C","extra-filename=-364f6ebdb17bdbee","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","cfg_if=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libcfg_if-5c04399ee0677d58.rmeta","--extern","malloc_size_of_derive=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libmalloc_size_of_derive-1c21038fe5be36f1.so","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libparity_util_mem-364f6ebdb17bdbee.rmeta"},"prelude":{"crate_id":{"name":"parity_util_mem","disambiguator":[623263640782730164,12198296021055704401]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[14028691320640889427,597678702170297599]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","num":16,"id":{"name":"malloc_size_of_derive","disambiguator":[1527427739584677375,16672571339636792590]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":711,"byte_end":2911,"line_start":17,"line_end":103,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":2589,"byte_end":2590,"line_start":84,"line_end":84,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":2617,"byte_end":2632,"line_start":86,"line_end":86,"column_start":3,"column_end":18},"alias_span":null,"name":"MallocSizeOfOps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":2635,"byte_end":2647,"line_start":87,"line_end":87,"column_start":2,"column_end":14},"alias_span":null,"name":"MallocSizeOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":2672,"byte_end":2687,"line_start":89,"line_end":89,"column_start":21,"column_end":36},"alias_span":null,"name":"MallocSizeOfExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":711,"byte_end":2911,"line_start":17,"line_end":103,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":32},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195}],"decl_id":null,"docs":" Crate for parity memory management related utilities.\n It includes global allocator choice, heap measurement and\n memory erasure.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocators","qualname":"::allocators","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29}],"decl_id":null,"docs":" default allocator management\n Features are:\n - windows:\n\t - no features: default implementation from servo `heapsize` crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: default windows allocator is used instead\n - arch x86:\n\t - no features: use default alloc\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n - arch x86/macos:\n\t - no features: use default alloc, requires using `estimate_size`\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n - arch wasm32:\n\t - no features: default to `estimate_size`\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: compile error\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":6588,"byte_end":6607,"line_start":123,"line_end":123,"column_start":8,"column_end":27},"name":"new_malloc_size_ops","qualname":"::allocators::new_malloc_size_ops","value":"fn () -> MallocSizeOfOps","parent":null,"children":[],"decl_id":null,"docs":" Get a new instance of a MallocSizeOfOps\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":6963,"byte_end":6978,"line_start":135,"line_end":135,"column_start":11,"column_end":26},"name":"MallocSizeOfExt","qualname":"::allocators::MallocSizeOfExt","value":"MallocSizeOfExt: MallocSizeOf","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" Extension methods for `MallocSizeOf` trait, do not implement\n directly.\n It allows getting heapsize without exposing `MallocSizeOfOps` \n (a single default `MallocSizeOfOps` is used for each call).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":7070,"byte_end":7084,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"malloc_size_of","qualname":"::allocators::MallocSizeOfExt::malloc_size_of","value":"fn (&self) -> usize","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Method to launch a heapsize measurement with a \n fresh state.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":11050,"byte_end":11065,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"MallocSizeOfOps","qualname":"::malloc_size::MallocSizeOfOps","value":"MallocSizeOfOps {  }","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Operations used when measuring heap usage of data structures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":11762,"byte_end":11765,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<MallocSizeOfOps>::new","value":"fn (size_of: VoidPtrToSizeFn, malloc_enclosing_size_of: Option<VoidPtrToSizeFn>, have_seen_ptr: Option<Box<VoidPtrToBoolFnMut>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":12966,"byte_end":12980,"line_start":125,"line_end":125,"column_start":19,"column_end":33},"name":"malloc_size_of","qualname":"<MallocSizeOfOps>::malloc_size_of","value":"fn <T> (&self, ptr: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `size_of_op` on `ptr`, first checking that the allocation isn't\n empty, because some types (such as `Vec`) utilize empty allocations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":13228,"byte_end":13256,"line_start":134,"line_end":134,"column_start":12,"column_end":40},"name":"has_malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::has_malloc_enclosing_size_of","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is an `enclosing_size_of_op` available?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":13448,"byte_end":13472,"line_start":140,"line_end":140,"column_start":19,"column_end":43},"name":"malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::malloc_enclosing_size_of","value":"fn <T> (&self, ptr: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `enclosing_size_of_op`, which must be available, on `ptr`, which\n must not be empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":13686,"byte_end":13699,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"have_seen_ptr","qualname":"<MallocSizeOfOps>::have_seen_ptr","value":"fn <T> (&mut self, ptr: *const T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Call `have_seen_ptr_op` on `ptr`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":14059,"byte_end":14071,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"MallocSizeOf","qualname":"::malloc_size::MallocSizeOf","value":"MallocSizeOf","parent":null,"children":[{"krate":0,"index":60}],"decl_id":null,"docs":" Trait for measuring the \"deep\" heap usage of a data structure. This is the\n most commonly-used of the traits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":14213,"byte_end":14220,"line_start":160,"line_end":160,"column_start":8,"column_end":15},"name":"size_of","qualname":"::malloc_size::MallocSizeOf::size_of","value":"fn (&self, ops: &mut MallocSizeOfOps) -> usize","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Measure the heap usage of all descendant heap-allocated structures, but\n not the space taken up by the value itself.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":7240,"byte_end":7241,"line_start":144,"line_end":144,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":7321,"byte_end":7324,"line_start":147,"line_end":147,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":11733,"byte_end":11748,"line_start":97,"line_end":97,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":16428,"byte_end":16431,"line_start":217,"line_end":217,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":16593,"byte_end":16596,"line_start":223,"line_end":223,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17214,"byte_end":17217,"line_start":240,"line_end":240,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17357,"byte_end":17363,"line_start":246,"line_end":246,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17720,"byte_end":17723,"line_start":261,"line_end":261,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":18788,"byte_end":18794,"line_start":306,"line_end":306,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19038,"byte_end":19044,"line_start":316,"line_end":316,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19294,"byte_end":19298,"line_start":325,"line_end":325,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19455,"byte_end":19462,"line_start":331,"line_end":331,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19656,"byte_end":19659,"line_start":338,"line_end":338,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":20180,"byte_end":20183,"line_start":360,"line_end":360,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":20445,"byte_end":20453,"line_start":370,"line_end":370,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":21056,"byte_end":21064,"line_start":387,"line_end":387,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":21353,"byte_end":21360,"line_start":398,"line_end":398,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":22161,"byte_end":22168,"line_start":420,"line_end":420,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":22516,"byte_end":22523,"line_start":435,"line_end":435,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23091,"byte_end":23098,"line_start":453,"line_end":453,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23481,"byte_end":23489,"line_start":469,"line_end":469,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23925,"byte_end":23933,"line_start":484,"line_end":484,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":24306,"byte_end":24317,"line_start":500,"line_end":500,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":24888,"byte_end":24891,"line_start":519,"line_end":519,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":25119,"byte_end":25122,"line_start":526,"line_end":526,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":25430,"byte_end":25433,"line_start":537,"line_end":537,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":26094,"byte_end":26099,"line_start":554,"line_end":554,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":27603,"byte_end":27613,"line_start":602,"line_end":602,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":27729,"byte_end":27739,"line_start":610,"line_end":610,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/lib.rs","byte_start":1853,"byte_end":1863,"line_start":60,"line_end":60,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":14}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":6980,"byte_end":6992,"line_start":135,"line_end":135,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":59},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":7240,"byte_end":7241,"line_start":144,"line_end":144,"column_start":43,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/allocators.rs","byte_start":7321,"byte_end":7324,"line_start":147,"line_end":147,"column_start":51,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":2374},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":11733,"byte_end":11748,"line_start":97,"line_end":97,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":16428,"byte_end":16431,"line_start":217,"line_end":217,"column_start":41,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":16593,"byte_end":16596,"line_start":223,"line_end":223,"column_start":33,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":3718},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17214,"byte_end":17217,"line_start":240,"line_end":240,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":2374},"to":{"krate":0,"index":65}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17357,"byte_end":17363,"line_start":246,"line_end":246,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":4279},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":17720,"byte_end":17723,"line_start":261,"line_end":261,"column_start":49,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":18788,"byte_end":18794,"line_start":306,"line_end":306,"column_start":40,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":28500},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19038,"byte_end":19044,"line_start":316,"line_end":316,"column_start":57,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":28591},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19294,"byte_end":19298,"line_start":325,"line_end":325,"column_start":58,"column_end":62},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":2679},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19455,"byte_end":19462,"line_start":331,"line_end":331,"column_start":51,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":2736},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":19656,"byte_end":19659,"line_start":338,"line_end":338,"column_start":61,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":3051},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":20180,"byte_end":20183,"line_start":360,"line_end":360,"column_start":40,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":3718},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":20445,"byte_end":20453,"line_start":370,"line_end":370,"column_start":51,"column_end":59},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":2015},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":21056,"byte_end":21064,"line_start":387,"line_end":387,"column_start":58,"column_end":66},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":2015},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":21353,"byte_end":21360,"line_start":398,"line_end":398,"column_start":54,"column_end":61},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":6138},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":22161,"byte_end":22168,"line_start":420,"line_end":420,"column_start":47,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6138},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":22516,"byte_end":22523,"line_start":435,"line_end":435,"column_start":57,"column_end":64},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":6112},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23091,"byte_end":23098,"line_start":453,"line_end":453,"column_start":50,"column_end":57},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":6112},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23481,"byte_end":23489,"line_start":469,"line_end":469,"column_start":54,"column_end":62},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":947},"to":{"krate":0,"index":61}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":23925,"byte_end":23933,"line_start":484,"line_end":484,"column_start":47,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":947},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":24306,"byte_end":24317,"line_start":500,"line_end":500,"column_start":39,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":1551},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":24888,"byte_end":24891,"line_start":519,"line_end":519,"column_start":53,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":2374},"to":{"krate":0,"index":63}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":25119,"byte_end":25122,"line_start":526,"line_end":526,"column_start":44,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":2374},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":25430,"byte_end":25433,"line_start":537,"line_end":537,"column_start":51,"column_end":54},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":2374},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":26094,"byte_end":26099,"line_start":554,"line_end":554,"column_start":51,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":4902},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":27603,"byte_end":27613,"line_start":602,"line_end":602,"column_start":33,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.2.0/src/malloc_size.rs","byte_start":27729,"byte_end":27739,"line_start":610,"line_end":610,"column_start":36,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1715}}]}