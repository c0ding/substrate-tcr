{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasmi","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=0d7f19e18af878f2","-C","extra-filename=-0d7f19e18af878f2","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","libc=/home/gautam/code/substrate-tcr/target/rls/debug/deps/liblibc-ace8178eee7d07ea.rmeta","--extern","memory_units=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libmemory_units-43fd725b90edcffe.rmeta","--extern","num_rational=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libnum_rational-0526c3303e80ff57.rmeta","--extern","num_traits=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libnum_traits-be4146b98ad0bdd5.rmeta","--extern","parity_wasm=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libparity_wasm-48bea3e53097da31.rmeta","--extern","wasmi_validation=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libwasmi_validation-6da75ef2f3f1d3e9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libwasmi-0d7f19e18af878f2.rmeta"},"prelude":{"crate_id":{"name":"wasmi","disambiguator":[15966995593235499942,7878036474932362104]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":15,"id":{"name":"memory_units","disambiguator":[7625663440378967158,594771948268627360]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":16,"id":{"name":"parity_wasm","disambiguator":[9617965270862574160,10565283609962779752]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":17,"id":{"name":"wasmi_validation","disambiguator":[6435936278729121784,11308251528303127252]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":18,"id":{"name":"num_rational","disambiguator":[14038515331545208537,13494274042754788558]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":19,"id":{"name":"num_bigint","disambiguator":[8665772517186533409,6162634742833349481]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":20,"id":{"name":"num_integer","disambiguator":[4719163724763472064,11132189398744689646]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","num":21,"id":{"name":"num_traits","disambiguator":[9704772506329014089,15141655376320292708]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","num":22,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":0,"byte_end":17476,"line_start":1,"line_end":564,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11866,"byte_end":11878,"line_start":403,"line_end":403,"column_start":22,"column_end":34},"alias_span":null,"name":"FuncInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11880,"byte_end":11894,"line_start":403,"line_end":403,"column_start":36,"column_end":50},"alias_span":null,"name":"FuncInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11896,"byte_end":11903,"line_start":403,"line_end":403,"column_start":52,"column_end":59},"alias_span":null,"name":"FuncRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11905,"byte_end":11919,"line_start":403,"line_end":403,"column_start":61,"column_end":75},"alias_span":null,"name":"ResumableError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11945,"byte_end":11959,"line_start":404,"line_end":404,"column_start":24,"column_end":38},"alias_span":null,"name":"GlobalInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11961,"byte_end":11970,"line_start":404,"line_end":404,"column_start":40,"column_end":49},"alias_span":null,"name":"GlobalRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11994,"byte_end":12003,"line_start":405,"line_end":405,"column_start":22,"column_end":31},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12005,"byte_end":12014,"line_start":405,"line_end":405,"column_start":33,"column_end":42},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12016,"byte_end":12028,"line_start":405,"line_end":405,"column_start":44,"column_end":56},"alias_span":null,"name":"NopExternals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12030,"byte_end":12041,"line_start":405,"line_end":405,"column_start":58,"column_end":69},"alias_span":null,"name":"RuntimeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12068,"byte_end":12082,"line_start":406,"line_end":406,"column_start":25,"column_end":39},"alias_span":null,"name":"ImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12084,"byte_end":12098,"line_start":406,"line_end":406,"column_start":41,"column_end":55},"alias_span":null,"name":"ImportsBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12100,"byte_end":12120,"line_start":406,"line_end":406,"column_start":57,"column_end":77},"alias_span":null,"name":"ModuleImportResolver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12146,"byte_end":12160,"line_start":407,"line_end":407,"column_start":24,"column_end":38},"alias_span":null,"name":"MemoryInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2195},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12162,"byte_end":12171,"line_start":407,"line_end":407,"column_start":40,"column_end":49},"alias_span":null,"name":"MemoryRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12173,"byte_end":12196,"line_start":407,"line_end":407,"column_start":51,"column_end":74},"alias_span":null,"name":"LINEAR_MEMORY_PAGE_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12222,"byte_end":12231,"line_start":408,"line_end":408,"column_start":24,"column_end":33},"alias_span":null,"name":"ExternVal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2209},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12233,"byte_end":12247,"line_start":408,"line_end":408,"column_start":35,"column_end":49},"alias_span":null,"name":"ModuleInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12249,"byte_end":12258,"line_start":408,"line_end":408,"column_start":51,"column_end":60},"alias_span":null,"name":"ModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12260,"byte_end":12279,"line_start":408,"line_end":408,"column_start":62,"column_end":81},"alias_span":null,"name":"NotStartedModuleRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12305,"byte_end":12318,"line_start":409,"line_end":409,"column_start":24,"column_end":37},"alias_span":null,"name":"StackRecycler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12320,"byte_end":12344,"line_start":409,"line_end":409,"column_start":39,"column_end":63},"alias_span":null,"name":"DEFAULT_CALL_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":659},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12346,"byte_end":12371,"line_start":409,"line_end":409,"column_start":65,"column_end":90},"alias_span":null,"name":"DEFAULT_VALUE_STACK_LIMIT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12396,"byte_end":12409,"line_start":410,"line_end":410,"column_start":23,"column_end":36},"alias_span":null,"name":"TableInstance","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2522},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12411,"byte_end":12419,"line_start":410,"line_end":410,"column_start":38,"column_end":46},"alias_span":null,"name":"TableRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12444,"byte_end":12460,"line_start":411,"line_end":411,"column_start":23,"column_end":39},"alias_span":null,"name":"GlobalDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12462,"byte_end":12478,"line_start":411,"line_end":411,"column_start":41,"column_end":57},"alias_span":null,"name":"MemoryDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12480,"byte_end":12489,"line_start":411,"line_end":411,"column_start":59,"column_end":68},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12491,"byte_end":12506,"line_start":411,"line_end":411,"column_start":70,"column_end":85},"alias_span":null,"name":"TableDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12508,"byte_end":12517,"line_start":411,"line_end":411,"column_start":87,"column_end":96},"alias_span":null,"name":"ValueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2559},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12542,"byte_end":12547,"line_start":412,"line_end":412,"column_start":23,"column_end":28},"alias_span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12551,"byte_end":12561,"line_start":412,"line_end":412,"column_start":32,"column_end":42},"name":"ValueError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12563,"byte_end":12579,"line_start":412,"line_end":412,"column_start":44,"column_end":60},"alias_span":null,"name":"FromRuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12581,"byte_end":12600,"line_start":412,"line_end":412,"column_start":62,"column_end":81},"alias_span":null,"name":"LittleEndianConvert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2564},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12602,"byte_end":12614,"line_start":412,"line_end":412,"column_start":83,"column_end":95},"alias_span":null,"name":"RuntimeValue","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9082,"byte_end":9083,"line_start":290,"line_end":290,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Pages","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":15,"index":20},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12759,"byte_end":12766,"line_start":417,"line_end":417,"column_start":34,"column_end":41},"alias_span":null,"name":"size_of","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":15,"index":26},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12768,"byte_end":12776,"line_start":417,"line_end":417,"column_start":43,"column_end":51},"alias_span":null,"name":"ByteSize","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":15,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12778,"byte_end":12783,"line_start":417,"line_end":417,"column_start":53,"column_end":58},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":15,"index":22},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12785,"byte_end":12794,"line_start":417,"line_end":417,"column_start":60,"column_end":69},"alias_span":null,"name":"RoundUpTo","value":"","parent":{"krate":0,"index":1217}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":0,"byte_end":17476,"line_start":1,"line_end":564,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":1239},{"krate":0,"index":1259},{"krate":0,"index":34},{"krate":0,"index":1261},{"krate":0,"index":1289},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":123},{"krate":0,"index":140},{"krate":0,"index":176},{"krate":0,"index":239},{"krate":0,"index":264},{"krate":0,"index":368},{"krate":0,"index":502},{"krate":0,"index":524},{"krate":0,"index":619},{"krate":0,"index":922},{"krate":0,"index":955},{"krate":0,"index":993},{"krate":0,"index":1173},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1186},{"krate":0,"index":1190},{"krate":0,"index":1194},{"krate":0,"index":1199},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1212},{"krate":0,"index":1217},{"krate":0,"index":1224},{"krate":0,"index":1227}],"decl_id":null,"docs":" # wasmi","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":3459,"byte_end":3481,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4416,"byte_end":4420,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"Trap","qualname":"::Trap","value":"Trap {  }","parent":null,"children":[{"krate":0,"index":1236}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4494,"byte_end":4497,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Trap>::new","value":"fn (kind: TrapKind) -> Trap","parent":null,"children":[],"decl_id":null,"docs":" Create new trap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4599,"byte_end":4603,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"kind","qualname":"<Trap>::kind","value":"fn (&self) -> &TrapKind","parent":null,"children":[],"decl_id":null,"docs":" Returns kind of this trap.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":5291,"byte_end":5302,"line_start":180,"line_end":180,"column_start":5,"column_end":16},"name":"Unreachable","qualname":"::TrapKind::Unreachable","value":"TrapKind::Unreachable","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Wasm code executed `unreachable` opcode.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1242},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":5575,"byte_end":5598,"line_start":187,"line_end":187,"column_start":5,"column_end":28},"name":"MemoryAccessOutOfBounds","qualname":"::TrapKind::MemoryAccessOutOfBounds","value":"TrapKind::MemoryAccessOutOfBounds","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to load or store at the address which\n lies outside of bounds of the memory.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1244},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":5973,"byte_end":5995,"line_start":197,"line_end":197,"column_start":5,"column_end":27},"name":"TableAccessOutOfBounds","qualname":"::TrapKind::TableAccessOutOfBounds","value":"TrapKind::TableAccessOutOfBounds","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to access table element at index which\n lies outside of bounds.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1246},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":6156,"byte_end":6173,"line_start":202,"line_end":202,"column_start":5,"column_end":22},"name":"ElemUninitialized","qualname":"::TrapKind::ElemUninitialized","value":"TrapKind::ElemUninitialized","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to access table element which is uninitialized (i.e. `None`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":6322,"byte_end":6336,"line_start":208,"line_end":208,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::TrapKind::DivisionByZero","value":"TrapKind::DivisionByZero","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to divide by zero.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1250},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":6741,"byte_end":6763,"line_start":217,"line_end":217,"column_start":5,"column_end":27},"name":"InvalidConversionToInt","qualname":"::TrapKind::InvalidConversionToInt","value":"TrapKind::InvalidConversionToInt","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to make a conversion to an int failed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1252},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":6943,"byte_end":6956,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"StackOverflow","qualname":"::TrapKind::StackOverflow","value":"TrapKind::StackOverflow","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Stack overflow.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":7515,"byte_end":7534,"line_start":236,"line_end":236,"column_start":5,"column_end":24},"name":"UnexpectedSignature","qualname":"::TrapKind::UnexpectedSignature","value":"TrapKind::UnexpectedSignature","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Attempt to invoke a function with mismatching signature.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1256},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":7706,"byte_end":7710,"line_start":243,"line_end":243,"column_start":5,"column_end":9},"name":"Host","qualname":"::TrapKind::Host","value":"TrapKind::Host(Box<dyn host::HostError>)","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" Error specified by the host.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":5082,"byte_end":5090,"line_start":175,"line_end":175,"column_start":10,"column_end":18},"name":"TrapKind","qualname":"::TrapKind","value":"TrapKind::{Unreachable, MemoryAccessOutOfBounds, TableAccessOutOfBounds, ElemUninitialized, DivisionByZero, InvalidConversionToInt, StackOverflow, UnexpectedSignature, Host}","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256}],"decl_id":null,"docs":" Error type which can be thrown by wasm code or by host environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":7820,"byte_end":7827,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"is_host","qualname":"<TrapKind>::is_host","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this trap is specified by the host.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8083,"byte_end":8093,"line_start":260,"line_end":260,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Module validation error. Might occur only at load time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8232,"byte_end":8245,"line_start":263,"line_end":263,"column_start":5,"column_end":18},"name":"Instantiation","qualname":"::Error::Instantiation","value":"Error::Instantiation(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Error while instantiating a module. Might occur when provided\n with incorrect exports (i.e. linkage failure).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8289,"byte_end":8297,"line_start":265,"line_end":265,"column_start":5,"column_end":13},"name":"Function","qualname":"::Error::Function","value":"Error::Function(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Function-level error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8338,"byte_end":8343,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Table","qualname":"::Error::Table","value":"Error::Table(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Table-level error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8385,"byte_end":8391,"line_start":269,"line_end":269,"column_start":5,"column_end":11},"name":"Memory","qualname":"::Error::Memory","value":"Error::Memory(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Memory-level error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8433,"byte_end":8439,"line_start":271,"line_end":271,"column_start":5,"column_end":11},"name":"Global","qualname":"::Error::Global","value":"Error::Global(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Global-level error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1280},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8480,"byte_end":8485,"line_start":273,"line_end":273,"column_start":5,"column_end":10},"name":"Value","qualname":"::Error::Value","value":"Error::Value(String)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Value-level error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8513,"byte_end":8517,"line_start":275,"line_end":275,"column_start":5,"column_end":9},"name":"Trap","qualname":"::Error::Trap","value":"Error::Trap(Trap)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Trap.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1286},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8560,"byte_end":8564,"line_start":277,"line_end":277,"column_start":5,"column_end":9},"name":"Host","qualname":"::Error::Host","value":"Error::Host(Box<dyn host::HostError>)","parent":{"krate":0,"index":1261},"children":[],"decl_id":null,"docs":" Custom embedder error.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1261},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8007,"byte_end":8012,"line_start":258,"line_end":258,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{Validation, Instantiation, Function, Table, Memory, Global, Value, Trap, Host}","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286}],"decl_id":null,"docs":" Internal interpreter error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9013,"byte_end":9026,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"as_host_error","qualname":"<Error>::as_host_error","value":"fn (&self) -> Option<&dyn host::HostError>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`HostError`] if this `Error` represents some host error.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":17996,"byte_end":18003,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"FuncRef","qualname":"::func::FuncRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a function (See [`FuncInstance`] for details).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":18791,"byte_end":18803,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"FuncInstance","qualname":"::func::FuncInstance","value":"","parent":null,"children":[],"decl_id":null,"docs":" Runtime representation of a function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":20131,"byte_end":20141,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"alloc_host","qualname":"<FuncInstance>::alloc_host","value":"fn (signature: Signature, host_func_index: usize) -> FuncRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a function instance for a host function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":20565,"byte_end":20574,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"signature","qualname":"<FuncInstance>::signature","value":"fn (&self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns [signature] of this function instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":21771,"byte_end":21777,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"invoke","qualname":"<FuncInstance>::invoke","value":"fn <E> (func: &FuncRef, args: &[RuntimeValue], externals: &mut E) -> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":22564,"byte_end":22581,"line_start":161,"line_end":161,"column_start":12,"column_end":29},"name":"invoke_with_stack","qualname":"<FuncInstance>::invoke_with_stack","value":"fn <E> (func: &FuncRef, args: &[RuntimeValue], externals: &mut E, stack_recycler: &mut StackRecycler) -> Result<Option<RuntimeValue>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke this function using recycled stacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":24102,"byte_end":24118,"line_start":196,"line_end":196,"column_start":12,"column_end":28},"name":"invoke_resumable","qualname":"<FuncInstance>::invoke_resumable","value":"fn <'args> (func: &FuncRef, args: &'args [RuntimeValue]) -> Result<FuncInvocation<'args>, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a\n Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then\n continue the execution.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25049,"byte_end":25053,"line_start":226,"line_end":226,"column_start":5,"column_end":9},"name":"Trap","qualname":"::func::ResumableError::Trap","value":"ResumableError::Trap(Trap)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" Trap happened.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25637,"byte_end":25649,"line_start":237,"line_end":237,"column_start":5,"column_end":17},"name":"NotResumable","qualname":"::func::ResumableError::NotResumable","value":"ResumableError::NotResumable","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" The invocation is not resumable.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1314},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25854,"byte_end":25868,"line_start":243,"line_end":243,"column_start":5,"column_end":19},"name":"AlreadyStarted","qualname":"::func::ResumableError::AlreadyStarted","value":"ResumableError::AlreadyStarted","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":" The invocation has already been started.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1308},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25005,"byte_end":25019,"line_start":224,"line_end":224,"column_start":10,"column_end":24},"name":"ResumableError","qualname":"::func::ResumableError","value":"ResumableError::{Trap, NotResumable, AlreadyStarted}","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1314}],"decl_id":null,"docs":" A resumable invocation error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":26095,"byte_end":26109,"line_start":253,"line_end":253,"column_start":12,"column_end":26},"name":"FuncInvocation","qualname":"::func::FuncInvocation","value":"FuncInvocation {  }","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":26436,"byte_end":26448,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_resumable","qualname":"<FuncInvocation>::is_resumable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this invocation is currently resumable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":26765,"byte_end":26785,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"resumable_value_type","qualname":"<FuncInvocation>::resumable_value_type","value":"fn (&self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" If the invocation is resumable, the expected return value type to be feed back in.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":27181,"byte_end":27196,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"name":"start_execution","qualname":"<FuncInvocation>::start_execution","value":"fn <'externals, E> (&mut self, externals: &'externals mut E) -> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Start the invocation execution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":28595,"byte_end":28611,"line_start":320,"line_end":320,"column_start":12,"column_end":28},"name":"resume_execution","qualname":"<FuncInvocation>::resume_execution","value":"fn <'externals, E> (&mut self, return_val: Option<RuntimeValue>, externals: &'externals mut E) -> Result<Option<RuntimeValue>, ResumableError>","parent":null,"children":[],"decl_id":null,"docs":" Resume an execution if a previous trap of Host kind happened.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":29967,"byte_end":29976,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"GlobalRef","qualname":"::global::GlobalRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a global variable (See [`GlobalInstance`] for details).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":30732,"byte_end":30746,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"GlobalInstance","qualname":"::global::GlobalInstance","value":"GlobalInstance {  }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" Runtime representation of a global variable (or `global` for short).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":31004,"byte_end":31009,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"alloc","qualname":"<GlobalInstance>::alloc","value":"fn (val: RuntimeValue, mutable: bool) -> GlobalRef","parent":null,"children":[],"decl_id":null,"docs":" Allocate a global variable instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":31377,"byte_end":31380,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"set","qualname":"<GlobalInstance>::set","value":"fn (&self, val: RuntimeValue) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Change the value of this global variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":31836,"byte_end":31839,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"get","qualname":"<GlobalInstance>::get","value":"fn (&self) -> RuntimeValue","parent":null,"children":[],"decl_id":null,"docs":" Get the value of this global variable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":32035,"byte_end":32045,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalInstance>::is_mutable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if this global variable is mutable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":32154,"byte_end":32164,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalInstance>::value_type","value":"fn (&self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns value type of this global variable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32606,"byte_end":32617,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"RuntimeArgs","qualname":"::host::RuntimeArgs","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around slice of [`RuntimeValue`] for using it\n as an argument list conveniently.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":33082,"byte_end":33093,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"nth_checked","qualname":"<RuntimeArgs>::nth_checked","value":"fn <T> (&self, idx: usize) -> Result<T, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":33549,"byte_end":33566,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"nth_value_checked","qualname":"<RuntimeArgs>::nth_value_checked","value":"fn (&self, idx: usize) -> Result<RuntimeValue, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Extract argument as a [`RuntimeValue`] by index `idx`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":33898,"byte_end":33901,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"nth","qualname":"<RuntimeArgs>::nth","value":"fn <T> (&self, idx: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract argument by index `idx`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":34168,"byte_end":34171,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"len","qualname":"<RuntimeArgs>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of arguments\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35168,"byte_end":35177,"line_start":110,"line_end":110,"column_start":11,"column_end":20},"name":"HostError","qualname":"::host::HostError","value":"HostError: 'static + ::core::fmt::Display + ::core::fmt::Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" Trait that allows the host to return custom error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35273,"byte_end":35296,"line_start":112,"line_end":112,"column_start":8,"column_end":31},"name":"__private_get_type_id__","qualname":"::host::HostError::__private_get_type_id__","value":"fn (&self) -> TypeId","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35464,"byte_end":35476,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<HostError>::downcast_ref","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to downcast this `HostError` to a concrete type by reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35809,"byte_end":35821,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"downcast_mut","qualname":"<HostError>::downcast_mut","value":"fn <T> (&mut self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to downcast this `HostError` to a concrete type by mutable\n reference.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":38386,"byte_end":38395,"line_start":215,"line_end":215,"column_start":11,"column_end":20},"name":"Externals","qualname":"::host::Externals","value":"Externals","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" Trait that allows to implement host functions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":38469,"byte_end":38481,"line_start":217,"line_end":217,"column_start":8,"column_end":20},"name":"invoke_index","qualname":"::host::Externals::invoke_index","value":"fn (&mut self, index: usize, args: RuntimeArgs) -> Result<Option<RuntimeValue>, Trap>","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Perform invoke of a host function by specified `index`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":38792,"byte_end":38804,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"NopExternals","qualname":"::host::NopExternals","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of [`Externals`] that just traps on [`invoke_index`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":40294,"byte_end":40308,"line_start":22,"line_end":22,"column_start":11,"column_end":25},"name":"ImportResolver","qualname":"::imports::ImportResolver","value":"ImportResolver","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" Resolver of a module's dependencies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":40526,"byte_end":40538,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ImportResolver::resolve_func","value":"fn (&self, _module_name: &str, field_name: &str, _signature: &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":40868,"byte_end":40882,"line_start":38,"line_end":38,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ImportResolver::resolve_global","value":"fn (&self, module_name: &str, field_name: &str, descriptor: &GlobalDescriptor) -> Result<GlobalRef, Error>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":41503,"byte_end":41517,"line_start":52,"line_end":52,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ImportResolver::resolve_memory","value":"fn (&self, module_name: &str, field_name: &str, descriptor: &MemoryDescriptor) -> Result<MemoryRef, Error>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":42132,"byte_end":42145,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ImportResolver::resolve_table","value":"fn (&self, module_name: &str, field_name: &str, descriptor: &TableDescriptor) -> Result<TableRef, Error>","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43385,"byte_end":43399,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"ImportsBuilder","qualname":"::imports::ImportsBuilder","value":"ImportsBuilder {  }","parent":null,"children":[{"krate":0,"index":199}],"decl_id":null,"docs":" Convenience builder of [`ImportResolver`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43651,"byte_end":43654,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportsBuilder>::new","value":"fn () -> ImportsBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `ImportsBuilder`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43812,"byte_end":43825,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"with_resolver","qualname":"<ImportsBuilder>::with_resolver","value":"fn <N> (mut self, name: N, resolver: &'a dyn ModuleImportResolver) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":44108,"byte_end":44121,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"push_resolver","qualname":"<ImportsBuilder>::push_resolver","value":"fn <N> (&mut self, name: N, resolver: &'a dyn ModuleImportResolver) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register an resolver by a name.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":46001,"byte_end":46021,"line_start":195,"line_end":195,"column_start":11,"column_end":31},"name":"ModuleImportResolver","qualname":"::imports::ModuleImportResolver","value":"ModuleImportResolver","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" Version of [`ImportResolver`] specialized for a single module.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":46223,"byte_end":46235,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"resolve_func","qualname":"::imports::ModuleImportResolver::resolve_func","value":"fn (&self, field_name: &str, _signature: &Signature) -> Result<FuncRef, Error>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Resolve a function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":46644,"byte_end":46658,"line_start":213,"line_end":213,"column_start":8,"column_end":22},"name":"resolve_global","qualname":"::imports::ModuleImportResolver::resolve_global","value":"fn (&self, field_name: &str, _global_type: &GlobalDescriptor) -> Result<GlobalRef, Error>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Resolve a global variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":47100,"byte_end":47114,"line_start":229,"line_end":229,"column_start":8,"column_end":22},"name":"resolve_memory","qualname":"::imports::ModuleImportResolver::resolve_memory","value":"fn (&self, field_name: &str, _memory_type: &MemoryDescriptor) -> Result<MemoryRef, Error>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Resolve a memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":47552,"byte_end":47565,"line_start":245,"line_end":245,"column_start":8,"column_end":21},"name":"resolve_table","qualname":"::imports::ModuleImportResolver::resolve_table","value":"fn (&self, field_name: &str, _table_type: &TableDescriptor) -> Result<TableRef, Error>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Resolve a table.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":311},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":75398,"byte_end":75421,"line_start":28,"line_end":28,"column_start":11,"column_end":34},"name":"LINEAR_MEMORY_PAGE_SIZE","qualname":"::memory::LINEAR_MEMORY_PAGE_SIZE","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Size of a page of [linear memory][`MemoryInstance`] - 64KiB.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":75663,"byte_end":75672,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"MemoryRef","qualname":"::memory::MemoryRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a memory (See [`MemoryInstance`] for details).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":76541,"byte_end":76555,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"MemoryInstance","qualname":"::memory::MemoryInstance","value":"MemoryInstance {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" Runtime representation of a linear memory (or `memory` for short).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":78395,"byte_end":78400,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"alloc","qualname":"<MemoryInstance>::alloc","value":"fn (initial: Pages, maximum: Option<Pages>) -> Result<MemoryRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a memory instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":80079,"byte_end":80086,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryInstance>::initial","value":"fn (&self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns number of pages this `MemoryInstance` was created with.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":80341,"byte_end":80348,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryInstance>::maximum","value":"fn (&self) -> Option<Pages>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum amount of pages this `MemoryInstance` can grow to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":80976,"byte_end":80988,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"current_size","qualname":"<MemoryInstance>::current_size","value":"fn (&self) -> Pages","parent":null,"children":[],"decl_id":null,"docs":" Returns current linear memory size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":81128,"byte_end":81137,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"get_value","qualname":"<MemoryInstance>::get_value","value":"fn <T> (&self, offset: u32) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get value from memory at given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":81747,"byte_end":81750,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"get","qualname":"<MemoryInstance>::get","value":"fn (&self, offset: u32, size: usize) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from memory at given offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":82188,"byte_end":82196,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"get_into","qualname":"<MemoryInstance>::get_into","value":"fn (&self, offset: u32, target: &mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data from given offset in the memory into `target` slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":82553,"byte_end":82556,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"set","qualname":"<MemoryInstance>::set","value":"fn (&self, offset: u32, value: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy data in the memory at given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":82930,"byte_end":82939,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"set_value","qualname":"<MemoryInstance>::set_value","value":"fn <T> (&self, offset: u32, value: T) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy value in the memory at given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":83549,"byte_end":83553,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"grow","qualname":"<MemoryInstance>::grow","value":"fn (&self, additional: Pages) -> Result<Pages, Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the linear memory by given number of pages.\n Returns previous memory size if succeeds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":87025,"byte_end":87029,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"copy","qualname":"<MemoryInstance>::copy","value":"fn (&self, src_offset: usize, dst_offset: usize, len: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":87913,"byte_end":87932,"line_start":412,"line_end":412,"column_start":12,"column_end":31},"name":"copy_nonoverlapping","qualname":"<MemoryInstance>::copy_nonoverlapping","value":"fn (&self, src_offset: usize, dst_offset: usize, len: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy contents of one memory region to another (non-overlapping version).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":88882,"byte_end":88890,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"transfer","qualname":"<MemoryInstance>::transfer","value":"fn (src: &MemoryRef, src_offset: usize, dst: &MemoryRef, dst_offset: usize, len: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Copy memory between two (possibly distinct) memory instances.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":90141,"byte_end":90146,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"clear","qualname":"<MemoryInstance>::clear","value":"fn (&self, offset: usize, new_val: u8, len: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory region with the specified value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":90622,"byte_end":90626,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"zero","qualname":"<MemoryInstance>::zero","value":"fn (&self, offset: usize, len: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the specified memory region with zeroes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":90882,"byte_end":90887,"line_start":503,"line_end":503,"column_start":12,"column_end":17},"name":"erase","qualname":"<MemoryInstance>::erase","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set every byte in the entire linear memory to 0, preserving its size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":91359,"byte_end":91377,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"with_direct_access","qualname":"<MemoryInstance>::with_direct_access","value":"fn <R, F> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct access to the underlying memory buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":91857,"byte_end":91879,"line_start":533,"line_end":533,"column_start":12,"column_end":34},"name":"with_direct_access_mut","qualname":"<MemoryInstance>::with_direct_access_mut","value":"fn <R, F> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Provides direct mutable access to the underlying memory buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":106609,"byte_end":106618,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"ModuleRef","qualname":"::module::ModuleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a [`ModuleInstance`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107015,"byte_end":107019,"line_start":56,"line_end":56,"column_start":5,"column_end":9},"name":"Func","qualname":"::module::ExternVal::Func","value":"ExternVal::Func(FuncRef)","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" [Function][`FuncInstance`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107129,"byte_end":107134,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Table","qualname":"::module::ExternVal::Table","value":"ExternVal::Table(TableRef)","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" [Table][`TableInstance`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107249,"byte_end":107255,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Memory","qualname":"::module::ExternVal::Memory","value":"ExternVal::Memory(MemoryRef)","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" [Memory][`MemoryInstance`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107408,"byte_end":107414,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"Global","qualname":"::module::ExternVal::Global","value":"ExternVal::Global(GlobalRef)","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" [Global][`GlobalInstance`].","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":418},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":106904,"byte_end":106913,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"ExternVal","qualname":"::module::ExternVal","value":"ExternVal::{Func, Table, Memory, Global}","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428}],"decl_id":null,"docs":" An external value is the runtime representation of an entity\n that can be imported or exported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":108400,"byte_end":108407,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"as_func","qualname":"<ExternVal>::as_func","value":"fn (&self) -> Option<&FuncRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying function reference if this `ExternVal` contains\n a function, or `None` if it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":108684,"byte_end":108692,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"as_table","qualname":"<ExternVal>::as_table","value":"fn (&self) -> Option<&TableRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying table reference if this `ExternVal` contains\n a table, or `None` if it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":108975,"byte_end":108984,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"as_memory","qualname":"<ExternVal>::as_memory","value":"fn (&self) -> Option<&MemoryRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying memory reference if this `ExternVal` contains\n a memory, or `None` if it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":109280,"byte_end":109289,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"as_global","qualname":"<ExternVal>::as_global","value":"fn (&self) -> Option<&GlobalRef>","parent":null,"children":[],"decl_id":null,"docs":" Get underlying global variable reference if this `ExternVal` contains\n a global, or `None` if it is some other kind.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2209},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":110409,"byte_end":110423,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"ModuleInstance","qualname":"::module::ModuleInstance","value":"ModuleInstance {  }","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"decl_id":null,"docs":" A module instance is the runtime representation of a [module][`Module`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":112387,"byte_end":112394,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"globals","qualname":"<ModuleInstance>::globals","value":"fn <'a> (&self) -> Ref<Vec<GlobalRef>>","parent":null,"children":[],"decl_id":null,"docs":" Access all globals. This is a non-standard API so it's unlikely to be\n portable to other engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":120472,"byte_end":120487,"line_start":411,"line_end":411,"column_start":12,"column_end":27},"name":"with_externvals","qualname":"<ModuleInstance>::with_externvals","value":"fn <'a, 'i, I> (loaded_module: &'a Module, extern_vals: I) -> Result<NotStartedModuleRef<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a module with given [external values][ExternVal] as imports.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":125668,"byte_end":125671,"line_start":538,"line_end":538,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleInstance>::new","value":"fn <'m, I> (loaded_module: &'m Module, imports: &I) -> Result<NotStartedModuleRef<'m>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a [module][`Module`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":129501,"byte_end":129514,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"invoke_export","qualname":"<ModuleInstance>::invoke_export","value":"fn <E> (&self, func_name: &str, args: &[RuntimeValue], externals: &mut E) -> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":130034,"byte_end":130058,"line_start":649,"line_end":649,"column_start":12,"column_end":36},"name":"invoke_export_with_stack","qualname":"<ModuleInstance>::invoke_export_with_stack","value":"fn <E> (&self, func_name: &str, args: &[RuntimeValue], externals: &mut E, stack_recycler: &mut StackRecycler) -> Result<Option<RuntimeValue>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Invoke exported function by a name using recycled stacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":131088,"byte_end":131102,"line_start":679,"line_end":679,"column_start":12,"column_end":26},"name":"export_by_name","qualname":"<ModuleInstance>::export_by_name","value":"fn (&self, name: &str) -> Option<ExternVal>","parent":null,"children":[],"decl_id":null,"docs":" Find export by a name.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":132259,"byte_end":132278,"line_start":702,"line_end":702,"column_start":12,"column_end":31},"name":"NotStartedModuleRef","qualname":"::module::NotStartedModuleRef","value":"NotStartedModuleRef {  }","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" Mostly instantiated [`ModuleRef`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":132807,"byte_end":132827,"line_start":717,"line_end":717,"column_start":12,"column_end":32},"name":"not_started_instance","qualname":"<NotStartedModuleRef>::not_started_instance","value":"fn (&self) -> &ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns not fully initialized instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":133054,"byte_end":133063,"line_start":726,"line_end":726,"column_start":12,"column_end":21},"name":"run_start","qualname":"<NotStartedModuleRef>::run_start","value":"fn <E> (self, state: &mut E) -> Result<ModuleRef, Trap>","parent":null,"children":[],"decl_id":null,"docs":" Executes `start` function (if any) and returns fully instantiated module.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":133688,"byte_end":133703,"line_start":742,"line_end":742,"column_start":12,"column_end":27},"name":"assert_no_start","qualname":"<NotStartedModuleRef>::assert_no_start","value":"fn (self) -> ModuleRef","parent":null,"children":[],"decl_id":null,"docs":" Returns fully instantiated module without running `start` function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":134039,"byte_end":134048,"line_start":752,"line_end":752,"column_start":12,"column_end":21},"name":"has_start","qualname":"<NotStartedModuleRef>::has_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the module has a `start` function.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":502},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nan_preserving_float","qualname":"::nan_preserving_float","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":2243},{"krate":0,"index":2248},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2253},{"krate":0,"index":2257},{"krate":0,"index":2261},{"krate":0,"index":2265},{"krate":0,"index":2218},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2294},{"krate":0,"index":2299},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2304},{"krate":0,"index":2308},{"krate":0,"index":2312},{"krate":0,"index":2316},{"krate":0,"index":2269},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":137925,"byte_end":137948,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2243},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141029,"byte_end":141032,"line_start":118,"line_end":118,"column_start":8,"column_end":11},"name":"F32","qualname":"::nan_preserving_float::F32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2294},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141052,"byte_end":141055,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"F64","qualname":"::nan_preserving_float::F64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":659},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":196133,"byte_end":196158,"line_start":21,"line_end":21,"column_start":11,"column_end":36},"name":"DEFAULT_VALUE_STACK_LIMIT","qualname":"::runner::DEFAULT_VALUE_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes on the value stack.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":660},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":196240,"byte_end":196264,"line_start":24,"line_end":24,"column_start":11,"column_end":35},"name":"DEFAULT_CALL_STACK_LIMIT","qualname":"::runner::DEFAULT_CALL_STACK_LIMIT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of levels on the call stack.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":904},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":248821,"byte_end":248834,"line_start":1475,"line_end":1475,"column_start":12,"column_end":25},"name":"StackRecycler","qualname":"::runner::StackRecycler","value":"StackRecycler {  }","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"decl_id":null,"docs":" Used to recycle stacks instead of allocating them repeatedly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":249186,"byte_end":249197,"line_start":1486,"line_end":1486,"column_start":12,"column_end":23},"name":"with_limits","qualname":"<StackRecycler>::with_limits","value":"fn (value_stack_limit: usize, call_stack_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit stacks created by this recycler to\n - `value_stack_limit` bytes for values and\n - `call_stack_limit` levels for calls.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":249784,"byte_end":249789,"line_start":1503,"line_end":1503,"column_start":12,"column_end":17},"name":"clear","qualname":"<StackRecycler>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears any values left on the stack to avoid\n leaking them to future export invocations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2522},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":251793,"byte_end":251801,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"TableRef","qualname":"::table::TableRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reference to a table (See [`TableInstance`] for details).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":936},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":252522,"byte_end":252535,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"TableInstance","qualname":"::table::TableInstance","value":"TableInstance {  }","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" Runtime representation of a table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":253312,"byte_end":253317,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TableInstance>::alloc","value":"fn (initial_size: u32, maximum_size: Option<u32>) -> Result<TableRef, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a table instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":253948,"byte_end":253960,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"initial_size","qualname":"<TableInstance>::initial_size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns size this table was created with.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":254083,"byte_end":254095,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"maximum_size","qualname":"<TableInstance>::maximum_size","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size `TableInstance` can grow to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":254211,"byte_end":254223,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"current_size","qualname":"<TableInstance>::current_size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns current size of the table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":254483,"byte_end":254487,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"grow","qualname":"<TableInstance>::grow","value":"fn (&self, by: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Increases the size of the table by given number of elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":255310,"byte_end":255313,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"get","qualname":"<TableInstance>::get","value":"fn (&self, offset: u32) -> Result<Option<FuncRef>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the specific value in the table\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":255813,"byte_end":255816,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"set","qualname":"<TableInstance>::set","value":"fn (&self, offset: u32, value: Option<FuncRef>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the table element to the specified function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":256799,"byte_end":256808,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Signature","qualname":"::types::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531}],"decl_id":null,"docs":" Signature of a [function].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":257450,"byte_end":257453,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"fn <C> (params: C, return_type: Option<ValueType>) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Creates new signature with givens\n parameter types and optional return type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":257743,"byte_end":257749,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"params","qualname":"<Signature>::params","value":"fn (&self) -> &[ValueType]","parent":null,"children":[],"decl_id":null,"docs":" Returns parameter types of this signature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":257870,"byte_end":257881,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"return_type","qualname":"<Signature>::return_type","value":"fn (&self) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Returns return type of this signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2542},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258542,"byte_end":258545,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"I32","qualname":"::types::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" 32-bit signed or unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2544},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258594,"byte_end":258597,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"I64","qualname":"::types::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" 64-bit signed or unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258655,"byte_end":258658,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"F32","qualname":"::types::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258716,"byte_end":258719,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"F64","qualname":"::types::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2541},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258483,"byte_end":258492,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::types::ValueType","value":"ValueType::{I32, I64, F32, F64}","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548}],"decl_id":null,"docs":" Type of a value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":259532,"byte_end":259548,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"GlobalDescriptor","qualname":"::types::GlobalDescriptor","value":"GlobalDescriptor {  }","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"decl_id":null,"docs":" Description of a global variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":259990,"byte_end":260000,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"value_type","qualname":"<GlobalDescriptor>::value_type","value":"fn (&self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns [`ValueType`] of the requested global.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260119,"byte_end":260129,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"is_mutable","qualname":"<GlobalDescriptor>::is_mutable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the requested global mutable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260363,"byte_end":260378,"line_start":148,"line_end":148,"column_start":12,"column_end":27},"name":"TableDescriptor","qualname":"::types::TableDescriptor","value":"TableDescriptor {  }","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":" Description of a table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260739,"byte_end":260746,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"initial","qualname":"<TableDescriptor>::initial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size of the requested table.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260855,"byte_end":260862,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"maximum","qualname":"<TableDescriptor>::maximum","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size of the requested table.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":986},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":261120,"byte_end":261136,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MemoryDescriptor","qualname":"::types::MemoryDescriptor","value":"MemoryDescriptor {  }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"decl_id":null,"docs":" Description of a linear memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":261516,"byte_end":261523,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"initial","qualname":"<MemoryDescriptor>::initial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns initial size (in pages) of the requested memory.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":261644,"byte_end":261651,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"maximum","qualname":"<MemoryDescriptor>::maximum","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum size (in pages) of the requested memory.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":261956,"byte_end":261981,"line_start":10,"line_end":10,"column_start":5,"column_end":30},"name":"InvalidLittleEndianBuffer","qualname":"::value::Error::InvalidLittleEndianBuffer","value":"Error::InvalidLittleEndianBuffer","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" The buffer is too short for the type being deserialized\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2559},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":261880,"byte_end":261885,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::value::Error","value":"Error::{InvalidLittleEndianBuffer}","parent":null,"children":[{"krate":0,"index":2560}],"decl_id":null,"docs":" Error for `LittleEndianConvert`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2565},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":262513,"byte_end":262516,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"I32","qualname":"::value::RuntimeValue::I32","value":"RuntimeValue::I32(i32)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" Value of 32-bit signed or unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":262579,"byte_end":262582,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"I64","qualname":"::value::RuntimeValue::I64","value":"RuntimeValue::I64(i64)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" Value of 64-bit signed or unsigned integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2571},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":262654,"byte_end":262657,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"F32","qualname":"::value::RuntimeValue::F32","value":"RuntimeValue::F32(F32)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" Value of 32-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2574},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":262729,"byte_end":262732,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"F64","qualname":"::value::RuntimeValue::F64","value":"RuntimeValue::F64(F64)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" Value of 64-bit IEEE 754-2008 floating point number.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2564},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":262442,"byte_end":262454,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"RuntimeValue","qualname":"::value::RuntimeValue","value":"RuntimeValue::{I32, I64, F32, F64}","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2574}],"decl_id":null,"docs":" Runtime representation of a value.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1005},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":263161,"byte_end":263177,"line_start":41,"line_end":41,"column_start":11,"column_end":27},"name":"FromRuntimeValue","qualname":"::value::FromRuntimeValue","value":"FromRuntimeValue","parent":null,"children":[{"krate":0,"index":1006}],"decl_id":null,"docs":" Trait for creating value from a [`RuntimeValue`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":263465,"byte_end":263483,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"from_runtime_value","qualname":"::value::FromRuntimeValue::from_runtime_value","value":"fn (val: RuntimeValue) -> Option<Self>","parent":{"krate":0,"index":1005},"children":[],"decl_id":null,"docs":" Create a value of type `Self` from a given [`RuntimeValue`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1020},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":264371,"byte_end":264390,"line_start":79,"line_end":79,"column_start":11,"column_end":30},"name":"LittleEndianConvert","qualname":"::value::LittleEndianConvert","value":"LittleEndianConvert","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022}],"decl_id":null,"docs":" Convert from and to little endian.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":264464,"byte_end":264482,"line_start":84,"line_end":84,"column_start":8,"column_end":26},"name":"into_little_endian","qualname":"::value::LittleEndianConvert::into_little_endian","value":"fn (self, buffer: &mut [u8]) -> ()","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Convert to little endian buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":264559,"byte_end":264577,"line_start":86,"line_end":86,"column_start":8,"column_end":26},"name":"from_little_endian","qualname":"::value::LittleEndianConvert::from_little_endian","value":"fn (buffer: &[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Convert from little endian buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":266539,"byte_end":266546,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"default","qualname":"<RuntimeValue>::default","value":"fn (value_type: ValueType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new default value of given type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":266924,"byte_end":266934,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"decode_f32","qualname":"<RuntimeValue>::decode_f32","value":"fn (val: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u32 as f32.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":267081,"byte_end":267091,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"decode_f64","qualname":"<RuntimeValue>::decode_f64","value":"fn (val: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new value by interpreting passed u64 as f64.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":267219,"byte_end":267229,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"value_type","qualname":"<RuntimeValue>::value_type","value":"fn (&self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Get variable type for this value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":267770,"byte_end":267778,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"try_into","qualname":"<RuntimeValue>::try_into","value":"fn <T> (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `T` if this particular [`RuntimeValue`] contains\n appropriate type.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1217},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12668,"byte_end":12680,"line_start":415,"line_end":415,"column_start":9,"column_end":21},"name":"memory_units","qualname":"::memory_units","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" WebAssembly-specific sizes and units.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12863,"byte_end":12869,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" Deserialized module prepared for instantiation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":13951,"byte_end":13974,"line_start":459,"line_end":459,"column_start":12,"column_end":35},"name":"from_parity_wasm_module","qualname":"<Module>::from_parity_wasm_module","value":"fn (module: parity_wasm::elements::Module) -> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from `parity_wasm::elements::Module`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":16050,"byte_end":16069,"line_start":521,"line_end":521,"column_start":12,"column_end":31},"name":"deny_floating_point","qualname":"<Module>::deny_floating_point","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fail if the module contains any floating-point operations","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":16999,"byte_end":17010,"line_start":551,"line_end":551,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<Module>::from_buffer","value":"fn <B> (buffer: B) -> Result<Module, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create `Module` from a given buffer.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4451,"byte_end":4455,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4676,"byte_end":4680,"line_start":156,"line_end":156,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4840,"byte_end":4844,"line_start":163,"line_end":163,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":7746,"byte_end":7754,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8600,"byte_end":8605,"line_start":280,"line_end":280,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9381,"byte_end":9386,"line_start":301,"line_end":301,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9847,"byte_end":9852,"line_start":317,"line_end":317,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":10593,"byte_end":10598,"line_start":334,"line_end":334,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11064,"byte_end":11069,"line_start":350,"line_end":350,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11200,"byte_end":11204,"line_start":359,"line_end":359,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11349,"byte_end":11354,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11445,"byte_end":11449,"line_start":374,"line_end":374,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11550,"byte_end":11555,"line_start":380,"line_end":380,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":18052,"byte_end":18059,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":19109,"byte_end":19121,"line_start":59,"line_end":59,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":19724,"byte_end":19736,"line_start":74,"line_end":74,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25893,"byte_end":25907,"line_start":246,"line_end":246,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":26345,"byte_end":26359,"line_start":266,"line_end":266,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":30027,"byte_end":30036,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":30805,"byte_end":30819,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32682,"byte_end":32693,"line_start":12,"line_end":12,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32820,"byte_end":32831,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32913,"byte_end":32924,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":38826,"byte_end":38838,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43491,"byte_end":43505,"line_start":106,"line_end":106,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43577,"byte_end":43591,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":44442,"byte_end":44456,"line_start":146,"line_end":146,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":47833,"byte_end":47842,"line_start":257,"line_end":257,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":52659,"byte_end":52663,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":53665,"byte_end":53674,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":60929,"byte_end":60941,"line_start":543,"line_end":543,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":62302,"byte_end":62317,"line_start":586,"line_end":586,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":62427,"byte_end":62442,"line_start":593,"line_end":593,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":99459,"byte_end":99463,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":102618,"byte_end":102622,"line_start":96,"line_end":96,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":103363,"byte_end":103370,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":75723,"byte_end":75732,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":76793,"byte_end":76807,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":77203,"byte_end":77216,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":77528,"byte_end":77542,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":106680,"byte_end":106689,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107445,"byte_end":107454,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107856,"byte_end":107865,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":108250,"byte_end":108259,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":110677,"byte_end":110691,"line_start":168,"line_end":168,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":132353,"byte_end":132372,"line_start":707,"line_end":707,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141088,"byte_end":141091,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141279,"byte_end":141282,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":149943,"byte_end":149957,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":151036,"byte_end":151044,"line_start":69,"line_end":69,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":151872,"byte_end":151880,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":191376,"byte_end":191380,"line_start":1147,"line_end":1147,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/mod.rs","byte_start":143627,"byte_end":143642,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":197095,"byte_end":197115,"line_start":40,"line_end":40,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":198658,"byte_end":198678,"line_start":101,"line_end":101,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":198957,"byte_end":198977,"line_start":113,"line_end":113,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":200144,"byte_end":200160,"line_start":148,"line_end":148,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":200658,"byte_end":200669,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":706},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":847},{"krate":0,"index":854},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":243683,"byte_end":243698,"line_start":1264,"line_end":1264,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":245189,"byte_end":245204,"line_start":1314,"line_end":1314,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":246524,"byte_end":246534,"line_start":1368,"line_end":1368,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":248419,"byte_end":248428,"line_start":1456,"line_end":1456,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":249012,"byte_end":249025,"line_start":1482,"line_end":1482,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":916},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":251262,"byte_end":251275,"line_start":1551,"line_end":1551,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":251851,"byte_end":251859,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":252684,"byte_end":252697,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":252940,"byte_end":252953,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":256894,"byte_end":256903,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258729,"byte_end":258738,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":259605,"byte_end":259621,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260433,"byte_end":260448,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":261191,"byte_end":261207,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":266464,"byte_end":266476,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":267899,"byte_end":267911,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268011,"byte_end":268023,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268124,"byte_end":268136,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268230,"byte_end":268242,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268335,"byte_end":268347,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268447,"byte_end":268459,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268560,"byte_end":268572,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268683,"byte_end":268695,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268806,"byte_end":268818,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268912,"byte_end":268924,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":272732,"byte_end":272735,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":275987,"byte_end":275990,"line_start":450,"line_end":450,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":282632,"byte_end":282635,"line_start":711,"line_end":711,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":282938,"byte_end":282941,"line_start":721,"line_end":721,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12961,"byte_end":12967,"line_start":426,"line_end":426,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11739,"byte_end":11759,"line_start":393,"line_end":393,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":502}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4451,"byte_end":4455,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4676,"byte_end":4680,"line_start":156,"line_end":156,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":4840,"byte_end":4844,"line_start":163,"line_end":163,"column_start":23,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1235},"to":{"krate":1,"index":1559}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":7746,"byte_end":7754,"line_start":246,"line_end":246,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":8600,"byte_end":8605,"line_start":280,"line_end":280,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9381,"byte_end":9386,"line_start":301,"line_end":301,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":9847,"byte_end":9852,"line_start":317,"line_end":317,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":10593,"byte_end":10598,"line_start":334,"line_end":334,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1261},"to":{"krate":1,"index":1559}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11064,"byte_end":11069,"line_start":350,"line_end":350,"column_start":21,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11200,"byte_end":11204,"line_start":359,"line_end":359,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11349,"byte_end":11354,"line_start":368,"line_end":368,"column_start":21,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11445,"byte_end":11449,"line_start":374,"line_end":374,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":11550,"byte_end":11555,"line_start":380,"line_end":380,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":18052,"byte_end":18059,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":19109,"byte_end":19121,"line_start":59,"line_end":59,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":19724,"byte_end":19736,"line_start":74,"line_end":74,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":25893,"byte_end":25907,"line_start":246,"line_end":246,"column_start":21,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/func.rs","byte_start":26345,"byte_end":26359,"line_start":266,"line_end":266,"column_start":13,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":30027,"byte_end":30036,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/global.rs","byte_start":30805,"byte_end":30819,"line_start":40,"line_end":40,"column_start":6,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32682,"byte_end":32693,"line_start":12,"line_end":12,"column_start":39,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32820,"byte_end":32831,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":2197}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":32913,"byte_end":32924,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35202,"byte_end":35209,"line_start":110,"line_end":110,"column_start":45,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":7190},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35225,"byte_end":35230,"line_start":110,"line_end":110,"column_start":68,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":7185},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35233,"byte_end":35237,"line_start":110,"line_end":110,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1535},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":35240,"byte_end":35244,"line_start":110,"line_end":110,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/host.rs","byte_start":38826,"byte_end":38838,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":172},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43491,"byte_end":43505,"line_start":106,"line_end":106,"column_start":22,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":43577,"byte_end":43591,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":44442,"byte_end":44456,"line_start":146,"line_end":146,"column_start":29,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":192}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/imports.rs","byte_start":47833,"byte_end":47842,"line_start":257,"line_end":257,"column_start":31,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":52659,"byte_end":52663,"line_start":84,"line_end":84,"column_start":6,"column_end":10},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":53665,"byte_end":53674,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":60929,"byte_end":60941,"line_start":543,"line_end":543,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":62302,"byte_end":62317,"line_start":586,"line_end":586,"column_start":10,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/isa.rs","byte_start":62427,"byte_end":62442,"line_start":593,"line_end":593,"column_start":23,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":99459,"byte_end":99463,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":102618,"byte_end":102622,"line_start":96,"line_end":96,"column_start":15,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mmap_bytebuf.rs","byte_start":103363,"byte_end":103370,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":75723,"byte_end":75732,"line_start":39,"line_end":39,"column_start":29,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":76793,"byte_end":76807,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":315},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":77203,"byte_end":77216,"line_start":85,"line_end":85,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/memory/mod.rs","byte_start":77528,"byte_end":77542,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":106680,"byte_end":106689,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107445,"byte_end":107454,"line_start":73,"line_end":73,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":107856,"byte_end":107865,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":418},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":108250,"byte_end":108259,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":110677,"byte_end":110691,"line_start":168,"line_end":168,"column_start":6,"column_end":20},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/module.rs","byte_start":132353,"byte_end":132372,"line_start":707,"line_end":707,"column_start":10,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141088,"byte_end":141091,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2243},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/nan_preserving_float.rs","byte_start":141279,"byte_end":141282,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2294},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":149943,"byte_end":149957,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":151036,"byte_end":151044,"line_start":69,"line_end":69,"column_start":24,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":557},"to":{"krate":17,"index":194}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":151872,"byte_end":151880,"line_start":98,"line_end":98,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/compile.rs","byte_start":191376,"byte_end":191380,"line_start":1147,"line_end":1147,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/prepare/mod.rs","byte_start":143627,"byte_end":143642,"line_start":26,"line_end":26,"column_start":20,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":598},"to":{"krate":17,"index":188}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":197095,"byte_end":197115,"line_start":40,"line_end":40,"column_start":6,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":198658,"byte_end":198678,"line_start":101,"line_end":101,"column_start":21,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2443},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":198957,"byte_end":198977,"line_start":113,"line_end":113,"column_start":29,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2443},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":200144,"byte_end":200160,"line_start":148,"line_end":148,"column_start":6,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":200658,"byte_end":200669,"line_start":173,"line_end":173,"column_start":6,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":243683,"byte_end":243698,"line_start":1264,"line_end":1264,"column_start":6,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":245189,"byte_end":245204,"line_start":1314,"line_end":1314,"column_start":21,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":246524,"byte_end":246534,"line_start":1368,"line_end":1368,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":248419,"byte_end":248428,"line_start":1456,"line_end":1456,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":249012,"byte_end":249025,"line_start":1482,"line_end":1482,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/runner.rs","byte_start":251262,"byte_end":251275,"line_start":1551,"line_end":1551,"column_start":18,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":251851,"byte_end":251859,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2522},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":252684,"byte_end":252697,"line_start":46,"line_end":46,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":936},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/table.rs","byte_start":252940,"byte_end":252953,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":256894,"byte_end":256903,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":258729,"byte_end":258738,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":259605,"byte_end":259621,"line_start":121,"line_end":121,"column_start":6,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":260433,"byte_end":260448,"line_start":153,"line_end":153,"column_start":6,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/types.rs","byte_start":261191,"byte_end":261207,"line_start":183,"line_end":183,"column_start":6,"column_end":22},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":264979,"byte_end":264992,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1023},"to":{"krate":0,"index":1029}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":265582,"byte_end":265595,"line_start":118,"line_end":118,"column_start":21,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1023},"to":{"krate":0,"index":1037}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":266464,"byte_end":266476,"line_start":141,"line_end":141,"column_start":6,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":267899,"byte_end":267911,"line_start":184,"line_end":184,"column_start":19,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268011,"byte_end":268023,"line_start":190,"line_end":190,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268124,"byte_end":268136,"line_start":196,"line_end":196,"column_start":20,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268230,"byte_end":268242,"line_start":202,"line_end":202,"column_start":20,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268335,"byte_end":268347,"line_start":208,"line_end":208,"column_start":19,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268447,"byte_end":268459,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268560,"byte_end":268572,"line_start":220,"line_end":220,"column_start":20,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268683,"byte_end":268695,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268806,"byte_end":268818,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":268912,"byte_end":268924,"line_start":238,"line_end":238,"column_start":20,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":272732,"byte_end":272735,"line_start":362,"line_end":362,"column_start":24,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2294},"to":{"krate":0,"index":1007}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":275987,"byte_end":275990,"line_start":450,"line_end":450,"column_start":26,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2243},"to":{"krate":0,"index":1014}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":282632,"byte_end":282635,"line_start":711,"line_end":711,"column_start":30,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2243},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/value.rs","byte_start":282938,"byte_end":282941,"line_start":721,"line_end":721,"column_start":30,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2294},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmi-0.5.1/src/lib.rs","byte_start":12961,"byte_end":12967,"line_start":426,"line_end":426,"column_start":6,"column_end":12},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}}]}