{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","secp256k1","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=2004710e0e8e6c6c","-C","extra-filename=-2004710e0e8e6c6c","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","arrayref=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libarrayref-dcc778b1fcd8a026.rmeta","--extern","digest=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libdigest-b7afc00c00e5ca1b.rmeta","--extern","hmac_drbg=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libhmac_drbg-776ca28d6b1fed34.rmeta","--extern","rand=/home/gautam/code/substrate-tcr/target/rls/debug/deps/librand-5f921ab89e3cfa09.rmeta","--extern","sha2=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsha2-8cb32a194404827d.rmeta","--extern","typenum=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libtypenum-6a95f841168bdfe8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsecp256k1-2004710e0e8e6c6c.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[4373353764606793401,3568298457899735899]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":4,"id":{"name":"hmac_drbg","disambiguator":[5249962176563137296,11210606659423176944]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":5,"id":{"name":"hmac","disambiguator":[1018022002733417442,6909512454777682241]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":6,"id":{"name":"generic_array","disambiguator":[8203024666061026802,3026709728683109158]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":7,"id":{"name":"typenum","disambiguator":[12989350392175717619,11979469666288565117]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":8,"id":{"name":"nodrop","disambiguator":[3279339378067962261,4959362604489401242]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":9,"id":{"name":"digest","disambiguator":[10120683713828531496,2393952183190226457]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":10,"id":{"name":"crypto_mac","disambiguator":[5605679969870290152,18003742390736532342]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":11,"id":{"name":"constant_time_eq","disambiguator":[14996418733728097149,5874103049299244825]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":12,"id":{"name":"sha2","disambiguator":[5121817939162891794,5824564811862252952]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":13,"id":{"name":"byte_tools","disambiguator":[3732844683276169382,8867073611887605192]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":14,"id":{"name":"block_buffer","disambiguator":[13353826879503869703,7191059672923163542]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":15,"id":{"name":"fake_simd","disambiguator":[2803358426376781075,563183322539143633]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":16,"id":{"name":"rand","disambiguator":[234122407378738444,16829416483070547311]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":17,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":18,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":20,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":22,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":23,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":24,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":25,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":26,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":27,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","num":29,"id":{"name":"arrayref","disambiguator":[14116601321338732274,10294394777884855175]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":0,"byte_end":18305,"line_start":1,"line_end":612,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":639},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":846,"byte_end":851,"line_start":42,"line_end":42,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":916,"byte_end":921,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":943,"byte_end":949,"line_start":47,"line_end":47,"column_start":21,"column_end":27},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":951,"byte_end":959,"line_start":47,"line_end":47,"column_start":29,"column_end":37},"alias_span":null,"name":"Jacobian","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":961,"byte_end":974,"line_start":47,"line_end":47,"column_start":39,"column_end":52},"alias_span":null,"name":"AffineStorage","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":976,"byte_end":984,"line_start":47,"line_end":47,"column_start":54,"column_end":62},"alias_span":null,"name":"AFFINE_G","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":986,"byte_end":993,"line_start":47,"line_end":47,"column_start":64,"column_end":71},"alias_span":null,"name":"CURVE_B","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1016,"byte_end":1022,"line_start":48,"line_end":48,"column_start":21,"column_end":27},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1046,"byte_end":1059,"line_start":50,"line_end":50,"column_start":22,"column_end":35},"alias_span":null,"name":"ECMultContext","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1061,"byte_end":1077,"line_start":50,"line_end":50,"column_start":37,"column_end":53},"alias_span":null,"name":"ECMultGenContext","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1100,"byte_end":1114,"line_start":51,"line_end":51,"column_start":22,"column_end":36},"alias_span":null,"name":"ECMULT_CONTEXT","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1116,"byte_end":1134,"line_start":51,"line_end":51,"column_start":38,"column_end":56},"alias_span":null,"name":"ECMULT_GEN_CONTEXT","value":"","parent":{"krate":0,"index":407}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1783,"byte_end":1798,"line_start":70,"line_end":70,"column_start":21,"column_end":36},"alias_span":null,"name":"AFFINE_INFINITY","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1800,"byte_end":1817,"line_start":70,"line_end":70,"column_start":38,"column_end":55},"alias_span":null,"name":"JACOBIAN_INFINITY","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1839,"byte_end":1856,"line_start":71,"line_end":71,"column_start":21,"column_end":38},"alias_span":null,"name":"set_table_gej_var","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":148},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1858,"byte_end":1879,"line_start":71,"line_end":71,"column_start":40,"column_end":61},"alias_span":null,"name":"globalz_set_table_gej","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1903,"byte_end":1911,"line_start":72,"line_end":72,"column_start":22,"column_end":30},"alias_span":null,"name":"WINDOW_A","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1913,"byte_end":1921,"line_start":72,"line_end":72,"column_start":32,"column_end":40},"alias_span":null,"name":"WINDOW_G","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1923,"byte_end":1942,"line_start":72,"line_end":72,"column_start":42,"column_end":61},"alias_span":null,"name":"ECMULT_TABLE_SIZE_A","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1944,"byte_end":1963,"line_start":72,"line_end":72,"column_start":63,"column_end":82},"alias_span":null,"name":"ECMULT_TABLE_SIZE_G","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1986,"byte_end":2005,"line_start":73,"line_end":73,"column_start":22,"column_end":41},"alias_span":null,"name":"odd_multiples_table","value":"","parent":{"krate":0,"index":421}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2026,"byte_end":2040,"line_start":75,"line_end":75,"column_start":18,"column_end":32},"alias_span":null,"name":"SignatureArray","value":"","parent":{"krate":0,"index":421}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":0,"byte_end":18305,"line_start":1,"line_end":612,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":117},{"krate":0,"index":178},{"krate":0,"index":276},{"krate":0,"index":321},{"krate":0,"index":338},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":421},{"krate":0,"index":662},{"krate":0,"index":672},{"krate":0,"index":670},{"krate":0,"index":668},{"krate":0,"index":665},{"krate":0,"index":674},{"krate":0,"index":684},{"krate":0,"index":682},{"krate":0,"index":680},{"krate":0,"index":677},{"krate":0,"index":686},{"krate":0,"index":696},{"krate":0,"index":694},{"krate":0,"index":692},{"krate":0,"index":689},{"krate":0,"index":698},{"krate":0,"index":709},{"krate":0,"index":707},{"krate":0,"index":706},{"krate":0,"index":704},{"krate":0,"index":701},{"krate":0,"index":711},{"krate":0,"index":721},{"krate":0,"index":719},{"krate":0,"index":717},{"krate":0,"index":714},{"krate":0,"index":723},{"krate":0,"index":735},{"krate":0,"index":733},{"krate":0,"index":730},{"krate":0,"index":727},{"krate":0,"index":446},{"krate":0,"index":453},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":520},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541}],"decl_id":null,"docs":" Pure Rust implementation of the secp256k1 curve and fast ECDSA\n signatures. The secp256k1 curve is used excusively in Bitcoin and\n Ethereum alike cryptocurrencies.\n","sig":null,"attributes":[{"value":"deny(unused_import_braces, unused_imports, unused_comparisons,\n       unused_must_use, unused_variables, non_shorthand_field_patterns,\n       unreachable_code, unused_parens)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":175,"byte_end":363,"line_start":5,"line_end":8,"column_start":1,"column_end":42}},{"value":"no_std","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":365,"byte_end":375,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":19846,"byte_end":19851,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":" Field element for secp256k1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":19974,"byte_end":19977,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Field>::new","value":"fn (d7: u32, d6: u32, d5: u32, d4: u32, d3: u32, d2: u32, d1: u32, d0: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":20145,"byte_end":20153,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Field>::from_int","value":"fn (a: u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":21351,"byte_end":21360,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Field>::normalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":23210,"byte_end":23224,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<Field>::normalize_weak","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalize a field element: reduce it magnitude to 1,\n but don't fully normalize.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":24262,"byte_end":24275,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"normalize_var","qualname":"<Field>::normalize_var","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element, without constant-time guarantee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":26301,"byte_end":26319,"line_start":240,"line_end":240,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<Field>::normalizes_to_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":27703,"byte_end":27725,"line_start":277,"line_end":277,"column_start":12,"column_end":34},"name":"normalizes_to_zero_var","qualname":"<Field>::normalizes_to_zero_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":29247,"byte_end":29254,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Field>::set_int","value":"fn (&mut self, a: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to a small integer. Resulting field\n element is normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":29534,"byte_end":29541,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Field>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element is zero. Requires the input to\n be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":29889,"byte_end":29895,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Field>::is_odd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check the \"oddness\" of a field element. Requires the input to\n be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":30113,"byte_end":30118,"line_start":353,"line_end":353,"column_start":12,"column_end":17},"name":"clear","qualname":"<Field>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element equal to zero, initializing all fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":30404,"byte_end":30411,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Field>::set_b32","value":"fn (&mut self, a: &[u8; 32]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to 32-byte big endian value. If\n successful, the resulting field element is normalized.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":30381,"byte_end":30392,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":32052,"byte_end":32060,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Field>::fill_b32","value":"fn (&self, r: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":34050,"byte_end":34053,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"b32","qualname":"<Field>::b32","value":"fn (&self) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Convert a field element to a 32-byte big endian\n value. Requires the input to be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":34349,"byte_end":34361,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Field>::neg_in_place","value":"fn (&mut self, other: &Field, m: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to the additive inverse of\n another. Takes a maximum magnitude of the input as an\n argument. The magnitude of the output is one higher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":35185,"byte_end":35188,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"neg","qualname":"<Field>::neg","value":"fn (&self, m: u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":35451,"byte_end":35458,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"mul_int","qualname":"<Field>::mul_int","value":"fn (&mut self, a: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the passed field element with a small integer\n constant. Multiplies the magnitude by that small integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":35922,"byte_end":35929,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"cmp_var","qualname":"<Field>::cmp_var","value":"fn (&self, other: &Field) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two field elements. Requires both inputs to be\n normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":36456,"byte_end":36462,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"eq_var","qualname":"<Field>::eq_var","value":"fn (&self, other: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":72664,"byte_end":72676,"line_start":1151,"line_end":1151,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Field>::mul_in_place","value":"fn (&mut self, a: &Field, b: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the product of two others. Requires\n the inputs' magnitudes to be at most 8. The output magnitude\n is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":73198,"byte_end":73210,"line_start":1165,"line_end":1165,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Field>::sqr_in_place","value":"fn (&mut self, a: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the square of another. Requires the\n input's magnitude to be at most 8. The output magnitude is 1\n (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":73452,"byte_end":73455,"line_start":1174,"line_end":1174,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Field>::sqr","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":73930,"byte_end":73934,"line_start":1186,"line_end":1186,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Field>::sqrt","value":"fn (&self) -> (Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If a has a square root, it is computed in r and 1 is\n returned. If a does not have a square root, the root of its\n negation is computed and 0 is returned. The input's magnitude\n can be at most 8. The output magnitude is 1 (but not\n guaranteed to be normalized). The result in r will always be a\n square itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":75653,"byte_end":75656,"line_start":1266,"line_end":1266,"column_start":12,"column_end":15},"name":"inv","qualname":"<Field>::inv","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the (modular) inverse of\n another. Requires the input's magnitude to be at most 8. The\n output magnitude is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":77357,"byte_end":77364,"line_start":1349,"line_end":1349,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Field>::inv_var","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Potentially faster version of secp256k1_fe_inv, without\n constant-time guarantee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":77483,"byte_end":77494,"line_start":1354,"line_end":1354,"column_start":12,"column_end":23},"name":"is_quad_var","qualname":"<Field>::is_quad_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a field element is a quadratic residue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":77666,"byte_end":77670,"line_start":1361,"line_end":1361,"column_start":12,"column_end":16},"name":"cmov","qualname":"<Field>::cmov","value":"fn (&mut self, other: &Field, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80979,"byte_end":80991,"line_start":1486,"line_end":1486,"column_start":12,"column_end":24},"name":"FieldStorage","qualname":"::field::FieldStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact field element storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81144,"byte_end":81147,"line_start":1495,"line_end":1495,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldStorage>::new","value":"fn (d7: u32, d6: u32, d5: u32, d4: u32, d3: u32, d2: u32, d1: u32, d0: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81323,"byte_end":81327,"line_start":1501,"line_end":1501,"column_start":12,"column_end":16},"name":"cmov","qualname":"<FieldStorage>::cmov","value":"fn (&mut self, other: &FieldStorage, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84070,"byte_end":84076,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Affine","qualname":"::group::Affine","value":"Affine { x, y, infinity }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in affine coordinates.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84087,"byte_end":84088,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Affine::x","value":"field::Field","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84105,"byte_end":84106,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Affine::y","value":"field::Field","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84123,"byte_end":84131,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Affine::infinity","value":"bool","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84261,"byte_end":84269,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Jacobian","qualname":"::group::Jacobian","value":"Jacobian { x, y, z, infinity }","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in jacobian coordinates.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":579},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84280,"byte_end":84281,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Jacobian::x","value":"field::Field","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":580},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84298,"byte_end":84299,"line_start":46,"line_end":46,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Jacobian::y","value":"field::Field","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":581},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84316,"byte_end":84317,"line_start":47,"line_end":47,"column_start":9,"column_end":10},"name":"z","qualname":"::group::Jacobian::z","value":"field::Field","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":582},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84334,"byte_end":84342,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Jacobian::infinity","value":"bool","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84456,"byte_end":84469,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"AffineStorage","qualname":"::group::AffineStorage","value":"AffineStorage { x, y }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Affine coordinate group element compact storage.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":593},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84480,"byte_end":84481,"line_start":54,"line_end":54,"column_start":9,"column_end":10},"name":"x","qualname":"::group::AffineStorage::x","value":"field::FieldStorage","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":594},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84505,"byte_end":84506,"line_start":55,"line_end":55,"column_start":9,"column_end":10},"name":"y","qualname":"::group::AffineStorage::y","value":"field::FieldStorage","parent":{"krate":0,"index":592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":130},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85139,"byte_end":85154,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"AFFINE_INFINITY","qualname":"::group::AFFINE_INFINITY","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":131},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85299,"byte_end":85316,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"JACOBIAN_INFINITY","qualname":"::group::JACOBIAN_INFINITY","value":"Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":132},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85510,"byte_end":85518,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"AFFINE_G","qualname":"::group::AFFINE_G","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":133},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85829,"byte_end":85836,"line_start":112,"line_end":112,"column_start":11,"column_end":18},"name":"CURVE_B","qualname":"::group::CURVE_B","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85960,"byte_end":85966,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"set_xy","qualname":"<Affine>::set_xy","value":"fn (&mut self, x: &Field, y: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to the point with given X and Y\n coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":86350,"byte_end":86359,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_xquad","qualname":"<Affine>::set_xquad","value":"fn (&mut self, x: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate and a Y coordinate that is a quadratic residue\n modulo p. The return value is true iff a coordinate with the\n given X coordinate exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":86848,"byte_end":86858,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"set_xo_var","qualname":"<Affine>::set_xo_var","value":"fn (&mut self, x: &Field, odd: bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate, and given oddness for Y. Return value indicates\n whether the result is valid.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":87187,"byte_end":87198,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Affine>::is_infinity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":87325,"byte_end":87337,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"is_valid_var","qualname":"<Affine>::is_valid_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is valid (i.e., on the curve).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":87666,"byte_end":87678,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Affine>::neg_in_place","value":"fn (&mut self, other: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":87822,"byte_end":87825,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"neg","qualname":"<Affine>::neg","value":"fn (&self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":88041,"byte_end":88048,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"set_gej","qualname":"<Affine>::set_gej","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to another which is given in\n jacobian coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":88351,"byte_end":88359,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"from_gej","qualname":"<Affine>::from_gej","value":"fn (a: &Jacobian) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":88474,"byte_end":88485,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"set_gej_var","qualname":"<Affine>::set_gej_var","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":88851,"byte_end":88863,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"set_gej_zinv","qualname":"<Affine>::set_gej_zinv","value":"fn (&mut self, a: &Jacobian, zi: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":89146,"byte_end":89151,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"clear","qualname":"<Affine>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_ge to prevent leaking sensitive information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":89260,"byte_end":89277,"line_start":239,"line_end":239,"column_start":8,"column_end":25},"name":"set_table_gej_var","qualname":"::group::set_table_gej_var","value":"fn (r: &mut [Affine], a: &[Jacobian], zr: &[Field]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":89646,"byte_end":89667,"line_start":257,"line_end":257,"column_start":8,"column_end":29},"name":"globalz_set_table_gej","qualname":"::group::globalz_set_table_gej","value":"fn (r: &mut [Affine], globalz: &mut Field, a: &[Jacobian], zr: &[Field]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90323,"byte_end":90335,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"set_infinity","qualname":"<Jacobian>::set_infinity","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90571,"byte_end":90577,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"set_ge","qualname":"<Jacobian>::set_ge","value":"fn (&mut self, a: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to another which is given\n in affine coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90744,"byte_end":90751,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"from_ge","qualname":"<Jacobian>::from_ge","value":"fn (a: &Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90930,"byte_end":90938,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"eq_x_var","qualname":"<Jacobian>::eq_x_var","value":"fn (&self, x: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare the X coordinate of a group element (jacobian).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":91259,"byte_end":91271,"line_start":318,"line_end":318,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Jacobian>::neg_in_place","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the inverse of a (i.e., mirrored around the X\n axis).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":91508,"byte_end":91511,"line_start":327,"line_end":327,"column_start":12,"column_end":15},"name":"neg","qualname":"<Jacobian>::neg","value":"fn (&self) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":91702,"byte_end":91713,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Jacobian>::is_infinity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":91848,"byte_end":91862,"line_start":339,"line_end":339,"column_start":12,"column_end":26},"name":"has_quad_y_var","qualname":"<Jacobian>::has_quad_y_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element's y coordinate is a quadratic residue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":92202,"byte_end":92225,"line_start":351,"line_end":351,"column_start":12,"column_end":35},"name":"double_nonzero_in_place","qualname":"<Jacobian>::double_nonzero_in_place","value":"fn (&mut self, a: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0). a may\n not be zero. Constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":92511,"byte_end":92530,"line_start":358,"line_end":358,"column_start":12,"column_end":31},"name":"double_var_in_place","qualname":"<Jacobian>::double_var_in_place","value":"fn (&mut self, a: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":93440,"byte_end":93450,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"double_var","qualname":"<Jacobian>::double_var","value":"fn (&self, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":93742,"byte_end":93758,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"add_var_in_place","qualname":"<Jacobian>::add_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b. If rzr is non-NULL, r->z =\n a->z * *rzr (a cannot be infinity in that case).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":95261,"byte_end":95268,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"add_var","qualname":"<Jacobian>::add_var","value":"fn (&self, b: &Jacobian, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":95552,"byte_end":95567,"line_start":461,"line_end":461,"column_start":12,"column_end":27},"name":"add_ge_in_place","qualname":"<Jacobian>::add_ge_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates, and not infinity).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":97345,"byte_end":97351,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"add_ge","qualname":"<Jacobian>::add_ge","value":"fn (&self, b: &Affine) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":97853,"byte_end":97872,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"add_ge_var_in_place","qualname":"<Jacobian>::add_ge_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates). This is more efficient than\n secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge\n but without constant-time guarantee, and b is allowed to be\n infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be\n infinity in that case).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":99356,"byte_end":99366,"line_start":584,"line_end":584,"column_start":12,"column_end":22},"name":"add_ge_var","qualname":"<Jacobian>::add_ge_var","value":"fn (&self, b: &Affine, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":99652,"byte_end":99673,"line_start":592,"line_end":592,"column_start":12,"column_end":33},"name":"add_zinv_var_in_place","qualname":"<Jacobian>::add_zinv_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine, bzinv: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with the inverse of b's Z\n coordinate passed as bzinv).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101098,"byte_end":101110,"line_start":636,"line_end":636,"column_start":12,"column_end":24},"name":"add_zinv_var","qualname":"<Jacobian>::add_zinv_var","value":"fn (&mut self, b: &Affine, bzinv: &Field) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101368,"byte_end":101373,"line_start":644,"line_end":644,"column_start":12,"column_end":17},"name":"clear","qualname":"<Jacobian>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_gej to prevent leaking sensitive\n information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101593,"byte_end":101600,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Jacobian>::rescale","value":"fn (&mut self, s: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rescale a jacobian point by b which must be\n non-zero. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":102356,"byte_end":102360,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"cmov","qualname":"<AffineStorage>::cmov","value":"fn (&mut self, a: &AffineStorage, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103467,"byte_end":103473,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 256-bit scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103577,"byte_end":103582,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"clear","qualname":"<Scalar>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a scalar to prevent the leak of sensitive data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103687,"byte_end":103694,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Scalar>::set_int","value":"fn (&mut self, v: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar to an unsigned integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103827,"byte_end":103835,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Scalar>::from_int","value":"fn (v: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scalar from an unsigned integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":104055,"byte_end":104059,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"bits","qualname":"<Scalar>::bits","value":"fn (&self, offset: usize, count: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. All requested bits must belong to\n the same 32-bit limb.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":104312,"byte_end":104320,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"bits_var","qualname":"<Scalar>::bits_var","value":"fn (&self, offset: usize, count: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. Not constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":106803,"byte_end":106815,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"add_in_place","qualname":"<Scalar>::add_in_place","value":"fn (&mut self, a: &Scalar, b: &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add two scalars together (modulo the group order). Returns\n whether it overflowed.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":106780,"byte_end":106791,"line_start":112,"line_end":112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":108076,"byte_end":108084,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"cadd_bit","qualname":"<Scalar>::cadd_bit","value":"fn (&mut self, mut bit: usize, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Conditionally add a power of two to a scalar. The result is\n not allowed to overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":109608,"byte_end":109615,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Scalar>::set_b32","value":"fn (&mut self, b32: &[u8; 32]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar from a big endian byte array, return whether it overflowed.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":109585,"byte_end":109596,"line_start":164,"line_end":164,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":110724,"byte_end":110727,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"b32","qualname":"<Scalar>::b32","value":"fn (&self) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":110887,"byte_end":110895,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Scalar>::fill_b32","value":"fn (&self, bin: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":112105,"byte_end":112112,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":112326,"byte_end":112338,"line_start":204,"line_end":204,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Scalar>::neg_in_place","value":"fn (&mut self, a: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the complement of a scalar (modulo the group order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":113312,"byte_end":113315,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"neg","qualname":"<Scalar>::neg","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":113481,"byte_end":113487,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"is_one","qualname":"<Scalar>::is_one","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":113723,"byte_end":113730,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar is higher than the group order divided\n by 2.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":114769,"byte_end":114781,"line_start":257,"line_end":257,"column_start":12,"column_end":24},"name":"cond_neg_mut","qualname":"<Scalar>::cond_neg_mut","value":"fn (&mut self, flag: bool) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Conditionally negate a number, in constant time. Returns -1 if\n the number was negated, 1 otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":129847,"byte_end":129859,"line_start":684,"line_end":684,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Scalar>::mul_in_place","value":"fn (&mut self, a: &Scalar, b: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":130131,"byte_end":130138,"line_start":692,"line_end":692,"column_start":12,"column_end":19},"name":"shr_int","qualname":"<Scalar>::shr_int","value":"fn (&mut self, n: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Shift a scalar right by some amount strictly between 0 and 16,\n returning the low bits that were shifted off.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":130816,"byte_end":130828,"line_start":708,"line_end":708,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Scalar>::sqr_in_place","value":"fn (&mut self, a: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":130960,"byte_end":130963,"line_start":714,"line_end":714,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Scalar>::sqr","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":131086,"byte_end":131098,"line_start":720,"line_end":720,"column_start":12,"column_end":24},"name":"inv_in_place","qualname":"<Scalar>::inv_in_place","value":"fn (&mut self, x: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":133978,"byte_end":133981,"line_start":866,"line_end":866,"column_start":12,"column_end":15},"name":"inv","qualname":"<Scalar>::inv","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134104,"byte_end":134111,"line_start":872,"line_end":872,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Scalar>::inv_var","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134168,"byte_end":134175,"line_start":876,"line_end":876,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Scalar>::is_even","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":284},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":135971,"byte_end":135979,"line_start":5,"line_end":5,"column_start":11,"column_end":19},"name":"WINDOW_A","qualname":"::ecmult::WINDOW_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":285},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136002,"byte_end":136010,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"WINDOW_G","qualname":"::ecmult::WINDOW_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":286},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136034,"byte_end":136053,"line_start":7,"line_end":7,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_A","qualname":"::ecmult::ECMULT_TABLE_SIZE_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":287},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136094,"byte_end":136113,"line_start":8,"line_end":8,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_G","qualname":"::ecmult::ECMULT_TABLE_SIZE_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136249,"byte_end":136262,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"ECMultContext","qualname":"::ecmult::ECMultContext","value":"ECMultContext {  }","parent":null,"children":[{"krate":0,"index":290}],"decl_id":null,"docs":" Context for accelerating the computation of a*P + b*G.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136381,"byte_end":136397,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"ECMultGenContext","qualname":"::ecmult::ECMultGenContext","value":"ECMultGenContext {  }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":" Context for accelerating the computation of a*G.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":298},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136522,"byte_end":136536,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"ECMULT_CONTEXT","qualname":"::ecmult::ECMULT_CONTEXT","value":"ECMultContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMult context.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":299},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":136650,"byte_end":136668,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"ECMULT_GEN_CONTEXT","qualname":"::ecmult::ECMULT_GEN_CONTEXT","value":"ECMultGenContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMultGen context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":137343,"byte_end":137362,"line_start":41,"line_end":41,"column_start":8,"column_end":27},"name":"odd_multiples_table","qualname":"::ecmult::odd_multiples_table","value":"fn (prej: &mut [Jacobian], zr: &mut [Field], a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":143233,"byte_end":143239,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"ecmult","qualname":"<ECMultContext>::ecmult","value":"fn (&self, r: &mut Jacobian, a: &Jacobian, na: &Scalar, ng: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":144476,"byte_end":144488,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"ecmult_const","qualname":"<ECMultContext>::ecmult_const","value":"fn (&self, r: &mut Jacobian, a: &Affine, scalar: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":147012,"byte_end":147022,"line_start":342,"line_end":342,"column_start":12,"column_end":22},"name":"ecmult_gen","qualname":"<ECMultGenContext>::ecmult_gen","value":"fn (&self, r: &mut Jacobian, gn: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":148098,"byte_end":148108,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"verify_raw","qualname":"<ECMultContext>::verify_raw","value":"fn (&self, sigr: &Scalar, sigs: &Scalar, pubkey: &Affine, message: &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":149067,"byte_end":149078,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"recover_raw","qualname":"<ECMultContext>::recover_raw","value":"fn (&self, sigr: &Scalar, sigs: &Scalar, rec_id: u8, message: &Scalar) -> Result<Affine, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":150325,"byte_end":150333,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"sign_raw","qualname":"<ECMultGenContext>::sign_raw","value":"fn (&self, seckey: &Scalar, message: &Scalar, nonce: &Scalar) -> Result<(Scalar, Scalar, u8), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdh.rs","byte_start":151476,"byte_end":151484,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"ecdh_raw","qualname":"<ECMultContext>::ecdh_raw","value":"fn (&self, point: &Affine, scalar: &Scalar) -> Option<[u8; 32]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":640},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152269,"byte_end":152285,"line_start":3,"line_end":3,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::error::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":642},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152291,"byte_end":152307,"line_start":4,"line_end":4,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::error::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":644},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152313,"byte_end":152329,"line_start":5,"line_end":5,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::error::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152335,"byte_end":152352,"line_start":6,"line_end":6,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::error::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":648},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152358,"byte_end":152372,"line_start":7,"line_end":7,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::error::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":650},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152378,"byte_end":152396,"line_start":8,"line_end":8,"column_start":5,"column_end":23},"name":"InvalidInputLength","qualname":"::error::Error::InvalidInputLength","value":"Error::InvalidInputLength","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152402,"byte_end":152417,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"TweakOutOfRange","qualname":"::error::Error::TweakOutOfRange","value":"Error::TweakOutOfRange","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":639},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/error.rs","byte_start":152257,"byte_end":152262,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{InvalidSignature, InvalidPublicKey, InvalidSecretKey, InvalidRecoveryId, InvalidMessage, InvalidInputLength, TweakOutOfRange}","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152523,"byte_end":152537,"line_start":7,"line_end":7,"column_start":12,"column_end":26},"name":"SignatureArray","qualname":"::der::SignatureArray","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152599,"byte_end":152602,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<SignatureArray>::new","value":"fn (size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152693,"byte_end":152696,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"len","qualname":"<SignatureArray>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":407},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":889,"byte_end":894,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"curve","qualname":"::curve","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Curve related structs.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":421},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1208,"byte_end":1212,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"name":"util","qualname":"::util","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":439},{"krate":0,"index":445}],"decl_id":null,"docs":" Utilities to manipulate the secp256k1 curve parameters.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1229,"byte_end":1244,"line_start":56,"line_end":56,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_EVEN","qualname":"::util::TAG_PUBKEY_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":423},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1271,"byte_end":1285,"line_start":57,"line_end":57,"column_start":15,"column_end":29},"name":"TAG_PUBKEY_ODD","qualname":"::util::TAG_PUBKEY_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":424},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1312,"byte_end":1327,"line_start":58,"line_end":58,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_FULL","qualname":"::util::TAG_PUBKEY_FULL","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":425},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1354,"byte_end":1376,"line_start":59,"line_end":59,"column_start":15,"column_end":37},"name":"TAG_PUBKEY_HYBRID_EVEN","qualname":"::util::TAG_PUBKEY_HYBRID_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":426},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1403,"byte_end":1424,"line_start":60,"line_end":60,"column_start":15,"column_end":36},"name":"TAG_PUBKEY_HYBRID_ODD","qualname":"::util::TAG_PUBKEY_HYBRID_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":427},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1452,"byte_end":1464,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"name":"MESSAGE_SIZE","qualname":"::util::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":428},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1492,"byte_end":1507,"line_start":63,"line_end":63,"column_start":15,"column_end":30},"name":"SECRET_KEY_SIZE","qualname":"::util::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":429},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1535,"byte_end":1554,"line_start":64,"line_end":64,"column_start":15,"column_end":34},"name":"RAW_PUBLIC_KEY_SIZE","qualname":"::util::RAW_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":430},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1582,"byte_end":1602,"line_start":65,"line_end":65,"column_start":15,"column_end":35},"name":"FULL_PUBLIC_KEY_SIZE","qualname":"::util::FULL_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":431},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1630,"byte_end":1656,"line_start":66,"line_end":66,"column_start":15,"column_end":41},"name":"COMPRESSED_PUBLIC_KEY_SIZE","qualname":"::util::COMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":432},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1684,"byte_end":1698,"line_start":67,"line_end":67,"column_start":15,"column_end":29},"name":"SIGNATURE_SIZE","qualname":"::util::SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":433},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":1726,"byte_end":1748,"line_start":68,"line_end":68,"column_start":15,"column_end":37},"name":"DER_MAX_SIGNATURE_SIZE","qualname":"::util::DER_MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2132,"byte_end":2141,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Public key on a secp256k1 curve.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2248,"byte_end":2257,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret key (256-bit) on a secp256k1 curve.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2341,"byte_end":2350,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature { r, s }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"decl_id":null,"docs":" An ECDSA signature.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":687},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2361,"byte_end":2362,"line_start":87,"line_end":87,"column_start":9,"column_end":10},"name":"r","qualname":"::Signature::r","value":"scalar::Scalar","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":688},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2380,"byte_end":2381,"line_start":88,"line_end":88,"column_start":9,"column_end":10},"name":"s","qualname":"::Signature::s","value":"scalar::Scalar","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2502,"byte_end":2512,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Tag used for public key recovery from signatures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":711},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2616,"byte_end":2623,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hashed message input to an ECDSA signature.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2717,"byte_end":2729,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shared secret using ECDH.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2849,"byte_end":2859,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::PublicKeyFormat::Compressed","value":"PublicKeyFormat::Compressed","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" Compressed public key, 33 bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2907,"byte_end":2911,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Full","qualname":"::PublicKeyFormat::Full","value":"PublicKeyFormat::Full","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" Full length public key, 65 bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2951,"byte_end":2954,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"Raw","qualname":"::PublicKeyFormat::Raw","value":"PublicKeyFormat::Raw","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" Raw public key, 64 bytes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":446},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2786,"byte_end":2801,"line_start":101,"line_end":101,"column_start":10,"column_end":25},"name":"PublicKeyFormat","qualname":"::PublicKeyFormat","value":"PublicKeyFormat::{Compressed, Full, Raw}","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451}],"decl_id":null,"docs":" Format for public key parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2987,"byte_end":3002,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"fn (seckey: &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":3241,"byte_end":3252,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<PublicKey>::parse_slice","value":"fn (p: &[u8], format: Option<PublicKeyFormat>) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":4661,"byte_end":4666,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"parse","qualname":"<PublicKey>::parse","value":"fn (p: &[u8; util::FULL_PUBLIC_KEY_SIZE]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":5811,"byte_end":5827,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"parse_compressed","qualname":"<PublicKey>::parse_compressed","value":"fn (p: &[u8; util::COMPRESSED_PUBLIC_KEY_SIZE]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":6577,"byte_end":6586,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"fn (&self) -> [u8; util::FULL_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":7024,"byte_end":7044,"line_start":225,"line_end":225,"column_start":12,"column_end":32},"name":"serialize_compressed","qualname":"<PublicKey>::serialize_compressed","value":"fn (&self) -> [u8; util::COMPRESSED_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":7539,"byte_end":7555,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<PublicKey>::tweak_add_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":7942,"byte_end":7958,"line_start":259,"line_end":259,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<PublicKey>::tweak_mul_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8351,"byte_end":8358,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"fn (keys: &[PublicKey]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8826,"byte_end":8831,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"parse","qualname":"<SecretKey>::parse","value":"fn (p: &[u8; util::SECRET_KEY_SIZE]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":9104,"byte_end":9115,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<SecretKey>::parse_slice","value":"fn (p: &[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":9365,"byte_end":9371,"line_start":316,"line_end":316,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey>::random","value":"fn <R> (rng: &mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":9667,"byte_end":9676,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"serialize","qualname":"<SecretKey>::serialize","value":"fn (&self) -> [u8; util::SECRET_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":9756,"byte_end":9772,"line_start":332,"line_end":332,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<SecretKey>::tweak_add_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":9998,"byte_end":10014,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<SecretKey>::tweak_mul_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10219,"byte_end":10222,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"inv","qualname":"<SecretKey>::inv","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10858,"byte_end":10863,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"parse","qualname":"<Signature>::parse","value":"fn (p: &[u8; util::SIGNATURE_SIZE]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":11177,"byte_end":11188,"line_start":387,"line_end":387,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Signature>::parse_slice","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":11459,"byte_end":11468,"line_start":397,"line_end":397,"column_start":12,"column_end":21},"name":"parse_der","qualname":"<Signature>::parse_der","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":12276,"byte_end":12289,"line_start":421,"line_end":421,"column_start":12,"column_end":25},"name":"parse_der_lax","qualname":"<Signature>::parse_der_lax","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":13781,"byte_end":13792,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":13938,"byte_end":13947,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Signature>::serialize","value":"fn (&self) -> [u8; util::SIGNATURE_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":14157,"byte_end":14170,"line_start":465,"line_end":465,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"fn (&self) -> der::SignatureArray","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15430,"byte_end":15435,"line_start":507,"line_end":507,"column_start":12,"column_end":17},"name":"parse","qualname":"<Message>::parse","value":"fn (p: &[u8; util::MESSAGE_SIZE]) -> Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15628,"byte_end":15639,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Message>::parse_slice","value":"fn (p: &[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15904,"byte_end":15913,"line_start":526,"line_end":526,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Message>::serialize","value":"fn (&self) -> [u8; util::MESSAGE_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16010,"byte_end":16015,"line_start":532,"line_end":532,"column_start":12,"column_end":17},"name":"parse","qualname":"<RecoveryId>::parse","value":"fn (p: u8) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16190,"byte_end":16199,"line_start":540,"line_end":540,"column_start":12,"column_end":21},"name":"serialize","qualname":"<RecoveryId>::serialize","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16441,"byte_end":16444,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn (pubkey: &PublicKey, seckey: &SecretKey) -> Result<SharedSecret, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16893,"byte_end":16899,"line_start":575,"line_end":575,"column_start":8,"column_end":14},"name":"verify","qualname":"::verify","value":"fn (message: &Message, signature: &Signature, pubkey: &PublicKey) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check signature is a valid message signed by public key.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":17109,"byte_end":17116,"line_start":580,"line_end":580,"column_start":8,"column_end":15},"name":"recover","qualname":"::recover","value":"fn (message: &Message, signature: &Signature, recovery_id: &RecoveryId) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Recover public key from a signed message.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":17374,"byte_end":17378,"line_start":585,"line_end":585,"column_start":8,"column_end":12},"name":"sign","qualname":"::sign","value":"fn (message: &Message, seckey: &SecretKey) -> Result<(Signature, RecoveryId), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sign a message using the secret key.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":19955,"byte_end":19960,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":78526,"byte_end":78531,"line_start":1377,"line_end":1377,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":78699,"byte_end":78704,"line_start":1387,"line_end":1387,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79100,"byte_end":79105,"line_start":1405,"line_end":1405,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79637,"byte_end":79642,"line_start":1424,"line_end":1424,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79751,"byte_end":79756,"line_start":1430,"line_end":1430,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80177,"byte_end":80182,"line_start":1448,"line_end":1448,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80369,"byte_end":80374,"line_start":1456,"line_end":1456,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80482,"byte_end":80487,"line_start":1462,"line_end":1462,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80648,"byte_end":80653,"line_start":1470,"line_end":1470,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80672,"byte_end":80677,"line_start":1472,"line_end":1472,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80784,"byte_end":80789,"line_start":1478,"line_end":1478,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81025,"byte_end":81037,"line_start":1488,"line_end":1488,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81118,"byte_end":81130,"line_start":1494,"line_end":1494,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81916,"byte_end":81921,"line_start":1513,"line_end":1513,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":82649,"byte_end":82654,"line_start":1535,"line_end":1535,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84542,"byte_end":84548,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84728,"byte_end":84736,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84953,"byte_end":84966,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85853,"byte_end":85859,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90230,"byte_end":90238,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101814,"byte_end":101820,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101983,"byte_end":101989,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":102241,"byte_end":102254,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103495,"byte_end":103501,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":119779,"byte_end":119785,"line_start":394,"line_end":394,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134254,"byte_end":134260,"line_start":881,"line_end":881,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134348,"byte_end":134354,"line_start":887,"line_end":887,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134802,"byte_end":134808,"line_start":905,"line_end":905,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135006,"byte_end":135012,"line_start":913,"line_end":913,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135123,"byte_end":135129,"line_start":919,"line_end":919,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135561,"byte_end":135567,"line_start":937,"line_end":937,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135757,"byte_end":135763,"line_start":945,"line_end":945,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":143206,"byte_end":143219,"line_start":231,"line_end":231,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":146982,"byte_end":146998,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":148071,"byte_end":148084,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":150295,"byte_end":150311,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdh.rs","byte_start":151449,"byte_end":151462,"line_start":7,"line_end":7,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152571,"byte_end":152585,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152760,"byte_end":152774,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152865,"byte_end":152879,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":153012,"byte_end":153019,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2964,"byte_end":2973,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":475},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8732,"byte_end":8741,"line_start":290,"line_end":290,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8803,"byte_end":8812,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10298,"byte_end":10307,"line_start":355,"line_end":355,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10764,"byte_end":10773,"line_start":369,"line_end":369,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10835,"byte_end":10844,"line_start":375,"line_end":375,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15409,"byte_end":15416,"line_start":506,"line_end":506,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15986,"byte_end":15996,"line_start":531,"line_end":531,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16257,"byte_end":16267,"line_start":545,"line_end":545,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16339,"byte_end":16349,"line_start":551,"line_end":551,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16415,"byte_end":16427,"line_start":557,"line_end":557,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16753,"byte_end":16765,"line_start":568,"line_end":568,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":19955,"byte_end":19960,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":78526,"byte_end":78531,"line_start":1377,"line_end":1377,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":78699,"byte_end":78704,"line_start":1387,"line_end":1387,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1596}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79100,"byte_end":79105,"line_start":1405,"line_end":1405,"column_start":35,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79637,"byte_end":79642,"line_start":1424,"line_end":1424,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":79751,"byte_end":79756,"line_start":1430,"line_end":1430,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80177,"byte_end":80182,"line_start":1448,"line_end":1448,"column_start":35,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80369,"byte_end":80374,"line_start":1456,"line_end":1456,"column_start":27,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80482,"byte_end":80487,"line_start":1462,"line_end":1462,"column_start":20,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80648,"byte_end":80653,"line_start":1470,"line_end":1470,"column_start":13,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80672,"byte_end":80677,"line_start":1472,"line_end":1472,"column_start":14,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2066}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":80784,"byte_end":80789,"line_start":1478,"line_end":1478,"column_start":21,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81025,"byte_end":81037,"line_start":1488,"line_end":1488,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81118,"byte_end":81130,"line_start":1494,"line_end":1494,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":81916,"byte_end":81921,"line_start":1513,"line_end":1513,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/field.rs","byte_start":82649,"byte_end":82654,"line_start":1535,"line_end":1535,"column_start":29,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":542},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84542,"byte_end":84548,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84728,"byte_end":84736,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":84953,"byte_end":84966,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":592},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":85853,"byte_end":85859,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":90230,"byte_end":90238,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101814,"byte_end":101820,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":101983,"byte_end":101989,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":565},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/group.rs","byte_start":102241,"byte_end":102254,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":103495,"byte_end":103501,"line_start":31,"line_end":31,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":119779,"byte_end":119785,"line_start":394,"line_end":394,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134254,"byte_end":134260,"line_start":881,"line_end":881,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134348,"byte_end":134354,"line_start":887,"line_end":887,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1596}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":134802,"byte_end":134808,"line_start":905,"line_end":905,"column_start":36,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135006,"byte_end":135012,"line_start":913,"line_end":913,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135123,"byte_end":135129,"line_start":919,"line_end":919,"column_start":22,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135561,"byte_end":135567,"line_start":937,"line_end":937,"column_start":36,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/scalar.rs","byte_start":135757,"byte_end":135763,"line_start":945,"line_end":945,"column_start":28,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":143206,"byte_end":143219,"line_start":231,"line_end":231,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecmult/mod.rs","byte_start":146982,"byte_end":146998,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":148071,"byte_end":148084,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdsa.rs","byte_start":150295,"byte_end":150311,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/ecdh.rs","byte_start":151449,"byte_end":151462,"line_start":7,"line_end":7,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152571,"byte_end":152585,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152760,"byte_end":152774,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":2197}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":152865,"byte_end":152879,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":360},"to":{"krate":1,"index":2200}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/der.rs","byte_start":153012,"byte_end":153019,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":2964,"byte_end":2973,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8732,"byte_end":8741,"line_start":290,"line_end":290,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":662},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":8803,"byte_end":8812,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10298,"byte_end":10307,"line_start":355,"line_end":355,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":674},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10764,"byte_end":10773,"line_start":369,"line_end":369,"column_start":23,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":674},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":10835,"byte_end":10844,"line_start":375,"line_end":375,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15409,"byte_end":15416,"line_start":506,"line_end":506,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":15986,"byte_end":15996,"line_start":531,"line_end":531,"column_start":6,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16257,"byte_end":16267,"line_start":545,"line_end":545,"column_start":19,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16339,"byte_end":16349,"line_start":551,"line_end":551,"column_start":20,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":698},"to":{"krate":1,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16415,"byte_end":16427,"line_start":557,"line_end":557,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.2.2/src/lib.rs","byte_start":16753,"byte_end":16765,"line_start":568,"line_end":568,"column_start":22,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":723},"to":{"krate":1,"index":2197}}]}