{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","take_mut","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=0f4e952a84535309","-C","extra-filename=-0f4e952a84535309","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libtake_mut-0f4e952a84535309.rmeta"},"prelude":{"crate_id":{"name":"take_mut","disambiguator":[13174838604860710307,2443892070037453813]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","byte_start":0,"byte_end":4487,"line_start":1,"line_end":147,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","byte_start":0,"byte_end":4487,"line_start":1,"line_end":147,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":65},{"krate":0,"index":71}],"decl_id":null,"docs":" This crate provides several functions for handling `&mut T` including `take()`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scoped","qualname":"::scoped","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":58}],"decl_id":null,"docs":" This module provides a scoped API, allowing for taking an arbitrary number of `&mut T` into `T` within one closure.\n The references are all required to outlive the closure.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":5440,"byte_end":5462,"line_start":30,"line_end":30,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":5688,"byte_end":5693,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Scope","qualname":"::scoped::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" Represents a scope within which, it is possible to take a `T` from a `&mut T` as long as the `&mut T` outlives the scope.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":6058,"byte_end":6073,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"take_or_recover","qualname":"<Scope>::take_or_recover","value":"fn <'c, 'm, T, F> (&'c self, mut_ref: &'m mut T, recovery: F) -> (T, Hole<'c, 'm, T, F>)","parent":null,"children":[],"decl_id":null,"docs":" Takes a `(T, Hole<'c, 'm, T, F>)` from an `&'m mut T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":6876,"byte_end":6880,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"take","qualname":"<Scope>::take","value":"fn <'c, 'm, T> (&'c self, mut_ref: &'m mut T) -> (T, Hole<'c, 'm, T, fn() -> T>)","parent":null,"children":[],"decl_id":null,"docs":" Takes a `(T, Hole<'c, 'm, T, F>)` from an `&'m mut T`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":7281,"byte_end":7286,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"scope","qualname":"::scoped::scope","value":"fn <'s, F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Main function to create a `Scope`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8085,"byte_end":8089,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Hole","qualname":"::scoped::Hole","value":"Hole {  }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A `Hole<'c, 'm, T, F>` represents an unfilled `&'m mut T` which must be filled before the end of the `Scope` with lifetime `'c` and recovery closure `F`.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8061,"byte_end":8072,"line_start":105,"line_end":105,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8346,"byte_end":8350,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"fill","qualname":"<Hole>::fill","value":"fn (self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the Hole.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","byte_start":1276,"byte_end":1280,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"take","qualname":"::take","value":"fn <T, F> (mut_ref: &mut T, closure: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Allows use of a value pointed to by `&mut T` as though it was owned, as long as a `T` is made available afterwards.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","byte_start":2675,"byte_end":2690,"line_start":81,"line_end":81,"column_start":8,"column_end":23},"name":"take_or_recover","qualname":"::take_or_recover","value":"fn <T, F, R> (mut_ref: &mut T, recover: R, closure: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Allows use of a value pointed to by `&mut T` as though it was owned, as long as a `T` is made available afterwards.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":5790,"byte_end":5795,"line_start":44,"line_end":44,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8288,"byte_end":8292,"line_start":113,"line_end":113,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8674,"byte_end":8678,"line_start":128,"line_end":128,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/lib.rs","byte_start":706,"byte_end":712,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":13}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":5790,"byte_end":5795,"line_start":44,"line_end":44,"column_start":10,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8288,"byte_end":8292,"line_start":113,"line_end":113,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/take_mut-0.2.2/src/scoped.rs","byte_start":8674,"byte_end":8678,"line_start":128,"line_end":128,"column_start":48,"column_end":52},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":2,"index":1726}}]}