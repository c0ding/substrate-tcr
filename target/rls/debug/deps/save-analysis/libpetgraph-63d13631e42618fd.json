{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","petgraph","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=63d13631e42618fd","-C","extra-filename=-63d13631e42618fd","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","fixedbitset=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libfixedbitset-18ce443e231b9e1d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libpetgraph-63d13631e42618fd.rmeta"},"prelude":{"crate_id":{"name":"petgraph","disambiguator":[2393433451867669635,12960066512083978295]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":15,"id":{"name":"fixedbitset","disambiguator":[10273918601766859847,10416106522292187616]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1029,"byte_end":1034,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2990},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1057,"byte_end":1065,"line_start":36,"line_end":36,"column_start":21,"column_end":29},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1067,"byte_end":1075,"line_start":36,"line_end":36,"column_start":31,"column_end":39},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":36}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Reversed","parent":{"krate":0,"index":36}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DfsEvent, depth_first_search","parent":{"krate":0,"index":36}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DfsPostOrder, Dfs, Bfs, Walker","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":1921},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76079,"byte_end":76092,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"alias_span":null,"name":"is_isomorphic","value":"","parent":{"krate":0,"index":701}},{"kind":"Use","ref_id":{"krate":0,"index":1926},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76098,"byte_end":76120,"line_start":44,"line_end":44,"column_start":5,"column_end":27},"alias_span":null,"name":"is_isomorphic_matching","value":"","parent":{"krate":0,"index":701}},{"kind":"Use","ref_id":{"krate":0,"index":1560},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76150,"byte_end":76158,"line_start":46,"line_end":46,"column_start":26,"column_end":34},"alias_span":null,"name":"dijkstra","value":"","parent":{"krate":0,"index":701}},{"kind":"Use","ref_id":{"krate":0,"index":1580},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76182,"byte_end":76187,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"alias_span":null,"name":"astar","value":"","parent":{"krate":0,"index":701}},{"kind":"Use","ref_id":{"krate":0,"index":886},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":187805,"byte_end":187814,"line_start":16,"line_end":16,"column_start":17,"column_end":26},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":1594}},{"kind":"Use","ref_id":{"krate":0,"index":885},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":187816,"byte_end":187825,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":1594}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234557,"byte_end":234562,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234568,"byte_end":234577,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234583,"byte_end":234592,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234598,"byte_end":234605,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234611,"byte_end":234618,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2185},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234911,"byte_end":234914,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"alias_span":null,"name":"Bfs","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2158},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234920,"byte_end":234923,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Dfs","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234929,"byte_end":234941,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"alias_span":null,"name":"DfsPostOrder","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2989},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234980,"byte_end":234989,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"alias_span":null,"name":"Direction","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":234995,"byte_end":235003,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2990},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":235009,"byte_end":235017,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":235023,"byte_end":235031,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"alias_span":null,"name":"Directed","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":235037,"byte_end":235047,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"Undirected","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":235092,"byte_end":235099,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"EdgeRef","value":"","parent":{"krate":0,"index":1982}},{"kind":"Use","ref_id":{"krate":0,"index":2711},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1747,"byte_end":1751,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"alias_span":null,"name":"Edge","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1761,"byte_end":1770,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1780,"byte_end":1791,"line_start":76,"line_end":76,"column_start":9,"column_end":20},"alias_span":null,"name":"EdgeIndices","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2745},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1801,"byte_end":1814,"line_start":77,"line_end":77,"column_start":9,"column_end":22},"alias_span":null,"name":"EdgeReference","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1369},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1824,"byte_end":1838,"line_start":78,"line_end":78,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeReferences","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1207},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1848,"byte_end":1862,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeWeightsMut","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1872,"byte_end":1877,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"alias_span":null,"name":"Edges","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1887,"byte_end":1896,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1455},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1906,"byte_end":1912,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"alias_span":null,"name":"Frozen","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1922,"byte_end":1927,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1937,"byte_end":1946,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"alias_span":null,"name":"Neighbors","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2700},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1956,"byte_end":1960,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1970,"byte_end":1979,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2725},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1989,"byte_end":2000,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"alias_span":null,"name":"NodeIndices","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1194},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2010,"byte_end":2024,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeWeightsMut","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2034,"byte_end":2048,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeReferences","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2058,"byte_end":2071,"line_start":90,"line_end":90,"column_start":9,"column_end":22},"alias_span":null,"name":"WalkNeighbors","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":886},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2101,"byte_end":2110,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2120,"byte_end":2130,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2140,"byte_end":2150,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":885},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2160,"byte_end":2169,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2179,"byte_end":2186,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2196,"byte_end":2203,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":2001}},{"kind":"Use","ref_id":{"krate":0,"index":2989},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3208,"byte_end":3217,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"alias_span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3221,"byte_end":3234,"line_start":144,"line_end":144,"column_start":22,"column_end":35},"name":"EdgeDirection","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":36},{"krate":0,"index":612},{"krate":0,"index":701},{"krate":0,"index":855},{"krate":0,"index":1460},{"krate":0,"index":1533},{"krate":0,"index":1545},{"krate":0,"index":1564},{"krate":0,"index":1594},{"krate":0,"index":1847},{"krate":0,"index":1878},{"krate":0,"index":1888},{"krate":0,"index":1957},{"krate":0,"index":1975},{"krate":0,"index":1982},{"krate":0,"index":2001},{"krate":0,"index":2027},{"krate":0,"index":2989},{"krate":0,"index":3009},{"krate":0,"index":3007},{"krate":0,"index":3005},{"krate":0,"index":3003},{"krate":0,"index":3001},{"krate":0,"index":2999},{"krate":0,"index":2996},{"krate":0,"index":3010},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3021},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2042},{"krate":0,"index":2047},{"krate":0,"index":2052},{"krate":0,"index":2058},{"krate":0,"index":2064}],"decl_id":null,"docs":" **petgraph** is a graph data structure library.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":46},{"krate":0,"index":83},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2225},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":203},{"krate":0,"index":211},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":219},{"krate":0,"index":227},{"krate":0,"index":2270},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2284},{"krate":0,"index":233},{"krate":0,"index":241},{"krate":0,"index":252},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2294},{"krate":0,"index":257},{"krate":0,"index":264},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2305},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2324},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":287},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2347},{"krate":0,"index":321},{"krate":0,"index":328},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2358},{"krate":0,"index":336},{"krate":0,"index":552}],"decl_id":null,"docs":" Graph traits and graph traversals.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1167,"byte_end":1179,"line_start":43,"line_end":43,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30047,"byte_end":30051,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Time","qualname":"::visit::dfsvisit::Time","value":"","parent":null,"children":[],"decl_id":null,"docs":" Strictly monotonically increasing event time for a depth first search.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2115},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30168,"byte_end":30176,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Discover","qualname":"::visit::dfsvisit::DfsEvent::Discover","value":"DfsEvent::Discover(N, Time)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30244,"byte_end":30252,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"TreeEdge","qualname":"::visit::dfsvisit::DfsEvent::TreeEdge","value":"DfsEvent::TreeEdge(N, N)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" An edge of the tree formed by the traversal.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30308,"byte_end":30316,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"BackEdge","qualname":"::visit::dfsvisit::DfsEvent::BackEdge","value":"DfsEvent::BackEdge(N, N)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" An edge to an already visited node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2127},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30502,"byte_end":30518,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"CrossForwardEdge","qualname":"::visit::dfsvisit::DfsEvent::CrossForwardEdge","value":"DfsEvent::CrossForwardEdge(N, N)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" A cross or forward edge.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30530,"byte_end":30536,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Finish","qualname":"::visit::dfsvisit::DfsEvent::Finish","value":"DfsEvent::Finish(N, Time)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2113},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30150,"byte_end":30158,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"DfsEvent","qualname":"::visit::dfsvisit::DfsEvent","value":"DfsEvent::{Discover, TreeEdge, BackEdge, CrossForwardEdge, Finish}","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":2119},{"krate":0,"index":2123},{"krate":0,"index":2127},{"krate":0,"index":2131}],"decl_id":null,"docs":" A depth first search (DFS) visitor event.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2145},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30883,"byte_end":30891,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Continue","qualname":"::visit::dfsvisit::Control::Continue","value":"Control::Continue","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30897,"byte_end":30902,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Break","qualname":"::visit::dfsvisit::Control::Break","value":"Control::Break(B)","parent":{"krate":0,"index":2143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2143},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30866,"byte_end":30873,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Control","qualname":"::visit::dfsvisit::Control","value":"Control::{Continue, Break}","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2147}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30942,"byte_end":30950,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"breaking","qualname":"<Control<B>>::breaking","value":"fn () -> Control<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31060,"byte_end":31071,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"break_value","qualname":"<Control<B>>::break_value","value":"fn (self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Get the value in `Control::Break(_)`, if present.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31319,"byte_end":31330,"line_start":60,"line_end":60,"column_start":11,"column_end":22},"name":"ControlFlow","qualname":"::visit::dfsvisit::ControlFlow","value":"ControlFlow","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31340,"byte_end":31350,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"continuing","qualname":"::visit::dfsvisit::ControlFlow::continuing","value":"fn () -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31369,"byte_end":31381,"line_start":62,"line_end":62,"column_start":8,"column_end":20},"name":"should_break","qualname":"::visit::dfsvisit::ControlFlow::should_break","value":"fn (&self) -> bool","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33780,"byte_end":33798,"line_start":148,"line_end":148,"column_start":8,"column_end":26},"name":"depth_first_search","qualname":"::visit::dfsvisit::depth_first_search","value":"fn <G, I, F, C> (graph: G, starts: I, mut visitor: F) -> C","parent":null,"children":[],"decl_id":null,"docs":" A recursive depth first search.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2158},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36542,"byte_end":36545,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Dfs","qualname":"::visit::traversal::Dfs","value":"Dfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162}],"decl_id":null,"docs":" Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in\n preorder (when they are first discovered).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36599,"byte_end":36604,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Dfs::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2162},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36658,"byte_end":36668,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Dfs::discovered","value":"VM","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36890,"byte_end":36893,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Dfs<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37139,"byte_end":37149,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Dfs<N, VM>>::from_parts","value":"fn (stack: Vec<N>, discovered: VM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dfs` from a vector and a visit map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37325,"byte_end":37330,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"reset","qualname":"<Dfs<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37584,"byte_end":37589,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"empty","qualname":"<Dfs<N, VM>>::empty","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs** using the graph's visitor map, and no stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37900,"byte_end":37907,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Dfs<N, VM>>::move_to","value":"fn (&mut self, start: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38130,"byte_end":38134,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"next","qualname":"<Dfs<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the dfs, or **None** if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38807,"byte_end":38819,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"DfsPostOrder","qualname":"::visit::traversal::DfsPostOrder","value":"DfsPostOrder { stack, discovered, finished }","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176}],"decl_id":null,"docs":" Visit nodes in a depth-first-search (DFS) emitting nodes in postorder\n (each node after all its descendants have been emitted).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2174},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38873,"byte_end":38878,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::DfsPostOrder::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2175},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38932,"byte_end":38942,"line_start":123,"line_end":123,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::DfsPostOrder::discovered","value":"VM","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38990,"byte_end":38998,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"finished","qualname":"::visit::traversal::DfsPostOrder::finished","value":"VM","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":" The map of finished nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39233,"byte_end":39236,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsPostOrder<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and put\n `start` in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39511,"byte_end":39516,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"empty","qualname":"<DfsPostOrder<N, VM>>::empty","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and no stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39796,"byte_end":39801,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"reset","qualname":"<DfsPostOrder<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40150,"byte_end":40157,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"move_to","qualname":"<DfsPostOrder<N, VM>>::move_to","value":"fn (&mut self, start: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered and finished map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40346,"byte_end":40350,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"next","qualname":"<DfsPostOrder<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the traversal, or `None` if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2185},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41985,"byte_end":41988,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"Bfs","qualname":"::visit::traversal::Bfs","value":"Bfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"decl_id":null,"docs":" A breadth first search (BFS) of a graph.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2188},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42042,"byte_end":42047,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Bfs::stack","value":"std::collections::VecDeque<N>","parent":{"krate":0,"index":2185},"children":[],"decl_id":null,"docs":" The queue of nodes to visit\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2189},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42106,"byte_end":42116,"line_start":228,"line_end":228,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Bfs::discovered","value":"VM","parent":{"krate":0,"index":2185},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42338,"byte_end":42341,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<Bfs<N, VM>>::new","value":"fn <G> (graph: G, start: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Bfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42773,"byte_end":42777,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"next","qualname":"<Bfs<N, VM>>::next","value":"fn <G> (&mut self, graph: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the bfs, or **None** if the traversal is done.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2194},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43452,"byte_end":43456,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"Topo","qualname":"::visit::traversal::Topo","value":"Topo {  }","parent":null,"children":[{"krate":0,"index":2197},{"krate":0,"index":2198}],"decl_id":null,"docs":" A topological order traversal for a graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43718,"byte_end":43721,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"new","qualname":"<Topo<N, VM>>::new","value":"fn <G> (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Topo`, using the graph's visitor map, and put all\n initial nodes in the to visit list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":44723,"byte_end":44728,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"reset","qualname":"<Topo<N, VM>>::reset","value":"fn <G> (&mut self, graph: G) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear visited state, and put all initial nodes in the to visit list.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45284,"byte_end":45288,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"next","qualname":"<Topo<N, VM>>::next","value":"fn <G> (&mut self, g: G) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the current topological order traversal, or\n `None` if the traversal is at the end.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46328,"byte_end":46334,"line_start":355,"line_end":355,"column_start":11,"column_end":17},"name":"Walker","qualname":"::visit::traversal::Walker","value":"Walker<Context>","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" A walker is a traversal state, but where part of the traversal\n information is supplied manually to each next call.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46355,"byte_end":46359,"line_start":356,"line_end":356,"column_start":10,"column_end":14},"name":"Item","qualname":"::visit::traversal::Walker::Item","value":"type Item;","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46401,"byte_end":46410,"line_start":358,"line_end":358,"column_start":8,"column_end":17},"name":"walk_next","qualname":"::visit::traversal::Walker::walk_next","value":"fn (&mut self, context: Context) -> Option<Self::Item>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Advance to the next item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46537,"byte_end":46541,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"iter","qualname":"::visit::traversal::Walker::iter","value":"fn (self, context: Context) -> WalkerIter<Self, Context>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Create an iterator out of the walker and given `context`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46844,"byte_end":46854,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"WalkerIter","qualname":"::visit::traversal::WalkerIter","value":"WalkerIter {  }","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207}],"decl_id":null,"docs":" A walker and its context wrapped into an iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46982,"byte_end":46989,"line_start":383,"line_end":383,"column_start":12,"column_end":19},"name":"context","qualname":"<WalkerIter<W, C>>::context","value":"fn (&self) -> C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47051,"byte_end":47060,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<WalkerIter<W, C>>::inner_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47115,"byte_end":47124,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WalkerIter<W, C>>::inner_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2217},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9130,"byte_end":9139,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"GraphBase","qualname":"::visit::GraphBase","value":"GraphBase","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"decl_id":null,"docs":" Base graph trait: defines the associated node identifier and\n edge identifier types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2218},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9319,"byte_end":9325,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::GraphBase::EdgeId","value":"type EdgeId: Copy + PartialEq;","parent":{"krate":0,"index":2217},"children":[],"decl_id":null,"docs":" edge identifier\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2219},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9378,"byte_end":9384,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::GraphBase::NodeId","value":"type NodeId: Copy + PartialEq;","parent":{"krate":0,"index":2217},"children":[],"decl_id":null,"docs":" node identifier\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9543,"byte_end":9551,"line_start":101,"line_end":101,"column_start":11,"column_end":19},"name":"GraphRef","qualname":"::visit::GraphRef","value":"GraphRef: Copy + GraphBase","parent":null,"children":[],"decl_id":null,"docs":" A copyable reference to a graph.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2231},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10624,"byte_end":10637,"line_start":141,"line_end":141,"column_start":11,"column_end":24},"name":"IntoNeighbors","qualname":"::visit::IntoNeighbors","value":"IntoNeighbors: GraphRef","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233}],"decl_id":null,"docs":" Access to the neighbors of each node","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2232},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10678,"byte_end":10687,"line_start":143,"line_end":143,"column_start":10,"column_end":19},"name":"Neighbors","qualname":"::visit::IntoNeighbors::Neighbors","value":"type Neighbors: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":2231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10800,"byte_end":10809,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"neighbors","qualname":"::visit::IntoNeighbors::neighbors","value":"fn (self: Self, a: Self::NodeId) -> Self::Neighbors","parent":{"krate":0,"index":2231},"children":[],"decl_id":null,"docs":" Return an iterator of the neighbors of node `a`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11290,"byte_end":11311,"line_start":161,"line_end":161,"column_start":11,"column_end":32},"name":"IntoNeighborsDirected","qualname":"::visit::IntoNeighborsDirected","value":"IntoNeighborsDirected: IntoNeighbors","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" Access to the neighbors of each node, through incoming or outgoing edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2241},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11357,"byte_end":11374,"line_start":163,"line_end":163,"column_start":10,"column_end":27},"name":"NeighborsDirected","qualname":"::visit::IntoNeighborsDirected::NeighborsDirected","value":"type NeighborsDirected: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11430,"byte_end":11448,"line_start":165,"line_end":165,"column_start":8,"column_end":26},"name":"neighbors_directed","qualname":"::visit::IntoNeighborsDirected::neighbors_directed","value":"fn (self, n: Self::NodeId, d: Direction) -> Self::NeighborsDirected","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2244},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13415,"byte_end":13424,"line_start":233,"line_end":233,"column_start":11,"column_end":20},"name":"IntoEdges","qualname":"::visit::IntoEdges","value":"IntoEdges: IntoEdgeReferences + IntoNeighbors","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246}],"decl_id":null,"docs":" Access to the edges of each node.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2245},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13491,"byte_end":13496,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Edges","qualname":"::visit::IntoEdges::Edges","value":"type Edges: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":2244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13553,"byte_end":13558,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"edges","qualname":"::visit::IntoEdges::edges","value":"fn (self, a: Self::NodeId) -> Self::Edges","parent":{"krate":0,"index":2244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2253},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14199,"byte_end":14216,"line_start":258,"line_end":258,"column_start":11,"column_end":28},"name":"IntoEdgesDirected","qualname":"::visit::IntoEdgesDirected","value":"IntoEdgesDirected: IntoEdges + IntoNeighborsDirected","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255}],"decl_id":null,"docs":" Access to all edges of each node, in the specified direction.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2254},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14282,"byte_end":14295,"line_start":260,"line_end":260,"column_start":10,"column_end":23},"name":"EdgesDirected","qualname":"::visit::IntoEdgesDirected::EdgesDirected","value":"type EdgesDirected: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":2253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14352,"byte_end":14366,"line_start":262,"line_end":262,"column_start":8,"column_end":22},"name":"edges_directed","qualname":"::visit::IntoEdgesDirected::edges_directed","value":"fn (self, a: Self::NodeId, dir: Direction) -> Self::EdgesDirected","parent":{"krate":0,"index":2253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2262},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14556,"byte_end":14575,"line_start":270,"line_end":270,"column_start":11,"column_end":30},"name":"IntoNodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers","value":"IntoNodeIdentifiers: GraphRef","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"decl_id":null,"docs":" Access to the sequence of the graph’s `NodeId`s.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2263},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14616,"byte_end":14631,"line_start":272,"line_end":272,"column_start":10,"column_end":25},"name":"NodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers::NodeIdentifiers","value":"type NodeIdentifiers: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14687,"byte_end":14703,"line_start":274,"line_end":274,"column_start":8,"column_end":24},"name":"node_identifiers","qualname":"::visit::IntoNodeIdentifiers::node_identifiers","value":"fn (self) -> Self::NodeIdentifiers","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2276},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15901,"byte_end":15905,"line_start":324,"line_end":324,"column_start":11,"column_end":15},"name":"Data","qualname":"::visit::Data","value":"Data: GraphBase","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278}],"decl_id":null,"docs":" Define associated data for nodes and edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2277},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15947,"byte_end":15957,"line_start":326,"line_end":326,"column_start":10,"column_end":20},"name":"NodeWeight","qualname":"::visit::Data::NodeWeight","value":"type NodeWeight;","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2278},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15968,"byte_end":15978,"line_start":327,"line_end":327,"column_start":10,"column_end":20},"name":"EdgeWeight","qualname":"::visit::Data::EdgeWeight","value":"type EdgeWeight;","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":233},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16176,"byte_end":16183,"line_start":337,"line_end":337,"column_start":11,"column_end":18},"name":"EdgeRef","qualname":"::visit::EdgeRef","value":"EdgeRef: Copy","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"decl_id":null,"docs":" An edge reference.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16202,"byte_end":16208,"line_start":338,"line_end":338,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::EdgeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":235},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16219,"byte_end":16225,"line_start":339,"line_end":339,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::EdgeRef::EdgeId","value":"type EdgeId;","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":236},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16236,"byte_end":16242,"line_start":340,"line_end":340,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::EdgeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16288,"byte_end":16294,"line_start":342,"line_end":342,"column_start":8,"column_end":14},"name":"source","qualname":"::visit::EdgeRef::source","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The source node of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16363,"byte_end":16369,"line_start":344,"line_end":344,"column_start":8,"column_end":14},"name":"target","qualname":"::visit::EdgeRef::target","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The target node of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16448,"byte_end":16454,"line_start":346,"line_end":346,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::EdgeRef::weight","value":"fn (&self) -> &Self::Weight","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" A reference to the weight of the edge.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16520,"byte_end":16522,"line_start":348,"line_end":348,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::EdgeRef::id","value":"fn (&self) -> Self::EdgeId","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The edge’s identifier.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":252},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16875,"byte_end":16882,"line_start":365,"line_end":365,"column_start":11,"column_end":18},"name":"NodeRef","qualname":"::visit::NodeRef","value":"NodeRef: Copy","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"decl_id":null,"docs":" A node reference.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":253},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16901,"byte_end":16907,"line_start":366,"line_end":366,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::NodeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16918,"byte_end":16924,"line_start":367,"line_end":367,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::NodeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16933,"byte_end":16935,"line_start":368,"line_end":368,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::NodeRef::id","value":"fn (&self) -> Self::NodeId","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16967,"byte_end":16973,"line_start":369,"line_end":369,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::NodeRef::weight","value":"fn (&self) -> &Self::Weight","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2290},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17080,"byte_end":17098,"line_start":374,"line_end":374,"column_start":11,"column_end":29},"name":"IntoNodeReferences","qualname":"::visit::IntoNodeReferences","value":"IntoNodeReferences: Data + IntoNodeIdentifiers","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293}],"decl_id":null,"docs":" Access to the sequence of the graph’s nodes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2291},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17157,"byte_end":17164,"line_start":376,"line_end":376,"column_start":10,"column_end":17},"name":"NodeRef","qualname":"::visit::IntoNodeReferences::NodeRef","value":"type NodeRef: NodeRef<NodeId=Self::NodeId, Weight=Self::NodeWeight>;","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2292},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17230,"byte_end":17244,"line_start":377,"line_end":377,"column_start":10,"column_end":24},"name":"NodeReferences","qualname":"::visit::IntoNodeReferences::NodeReferences","value":"type NodeReferences: Iterator<Item=Self::NodeRef>;","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17301,"byte_end":17316,"line_start":379,"line_end":379,"column_start":8,"column_end":23},"name":"node_references","qualname":"::visit::IntoNodeReferences::node_references","value":"fn (self) -> Self::NodeReferences","parent":{"krate":0,"index":2290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2301},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17907,"byte_end":17925,"line_start":409,"line_end":409,"column_start":11,"column_end":29},"name":"IntoEdgeReferences","qualname":"::visit::IntoEdgeReferences","value":"IntoEdgeReferences: Data + GraphRef","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"decl_id":null,"docs":" Access to the sequence of the graph’s edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2302},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17973,"byte_end":17980,"line_start":411,"line_end":411,"column_start":10,"column_end":17},"name":"EdgeRef","qualname":"::visit::IntoEdgeReferences::EdgeRef","value":"type EdgeRef: EdgeRef<NodeId=Self::NodeId, EdgeId=Self::EdgeId,\n                          Weight=Self::EdgeWeight>;","parent":{"krate":0,"index":2301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2303},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18093,"byte_end":18107,"line_start":413,"line_end":413,"column_start":10,"column_end":24},"name":"EdgeReferences","qualname":"::visit::IntoEdgeReferences::EdgeReferences","value":"type EdgeReferences: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":2301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18164,"byte_end":18179,"line_start":415,"line_end":415,"column_start":8,"column_end":23},"name":"edge_references","qualname":"::visit::IntoEdgeReferences::edge_references","value":"fn (self) -> Self::EdgeReferences","parent":{"krate":0,"index":2301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2312},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18524,"byte_end":18533,"line_start":432,"line_end":432,"column_start":11,"column_end":20},"name":"GraphProp","qualname":"::visit::GraphProp","value":"GraphProp: GraphBase","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314}],"decl_id":null,"docs":" Edge kind property (directed or undirected edges)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2313},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18612,"byte_end":18620,"line_start":435,"line_end":435,"column_start":10,"column_end":18},"name":"EdgeType","qualname":"::visit::GraphProp::EdgeType","value":"type EdgeType: EdgeType;","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":" The kind edges in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18664,"byte_end":18675,"line_start":438,"line_end":438,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::visit::GraphProp::is_directed","value":"fn (&self) -> bool","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2320},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19648,"byte_end":19661,"line_start":484,"line_end":484,"column_start":15,"column_end":28},"name":"NodeIndexable","qualname":"::visit::NodeIndexable","value":"NodeIndexable: GraphBase","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323}],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19825,"byte_end":19835,"line_start":488,"line_end":488,"column_start":12,"column_end":22},"name":"node_bound","qualname":"::visit::NodeIndexable::node_bound","value":"fn (self: &Self) -> usize","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":" Return an upper bound of the node indices in the graph\n (suitable for the size of a bitmap).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19915,"byte_end":19923,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"to_index","qualname":"::visit::NodeIndexable::to_index","value":"fn (self: &Self, a: Self::NodeId) -> usize","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":" Convert `a` to an integer index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20015,"byte_end":20025,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"from_index","qualname":"::visit::NodeIndexable::from_index","value":"fn (self: &Self, i: usize) -> Self::NodeId","parent":{"krate":0,"index":2320},"children":[],"decl_id":null,"docs":" Convert `i` to a node index\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2331},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20174,"byte_end":20183,"line_start":500,"line_end":500,"column_start":11,"column_end":20},"name":"NodeCount","qualname":"::visit::NodeCount","value":"NodeCount: GraphBase","parent":null,"children":[{"krate":0,"index":2332}],"decl_id":null,"docs":" A graph with a known node count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20223,"byte_end":20233,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"node_count","qualname":"::visit::NodeCount::node_count","value":"fn (self: &Self) -> usize","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2338},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20489,"byte_end":20509,"line_start":513,"line_end":513,"column_start":11,"column_end":31},"name":"NodeCompactIndexable","qualname":"::visit::NodeCompactIndexable","value":"NodeCompactIndexable: NodeIndexable + NodeCount","parent":null,"children":[],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices, in a range without holes.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":300},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21083,"byte_end":21091,"line_start":533,"line_end":533,"column_start":11,"column_end":19},"name":"VisitMap","qualname":"::visit::VisitMap","value":"VisitMap<N>","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A mapping for storing the visited status for NodeId `N`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21210,"byte_end":21215,"line_start":537,"line_end":537,"column_start":8,"column_end":13},"name":"visit","qualname":"::visit::VisitMap::visit","value":"fn (&mut self, a: N) -> bool","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Mark `a` as visited.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21302,"byte_end":21312,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"is_visited","qualname":"::visit::VisitMap::is_visited","value":"fn (&self, a: &N) -> bool","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Return whether `a` has been visited before.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2343},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22469,"byte_end":22478,"line_start":590,"line_end":590,"column_start":11,"column_end":20},"name":"Visitable","qualname":"::visit::Visitable","value":"Visitable: GraphBase","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346}],"decl_id":null,"docs":" A graph that can create a map that tracks the visited status of its nodes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2344},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22552,"byte_end":22555,"line_start":593,"line_end":593,"column_start":10,"column_end":13},"name":"Map","qualname":"::visit::Visitable::Map","value":"type Map: VisitMap<Self::NodeId>;","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" The associated map type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22639,"byte_end":22648,"line_start":596,"line_end":596,"column_start":8,"column_end":17},"name":"visit_map","qualname":"::visit::Visitable::visit_map","value":"fn (self: &Self) -> Self::Map","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Create a new visitor map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22757,"byte_end":22766,"line_start":598,"line_end":598,"column_start":8,"column_end":17},"name":"reset_map","qualname":"::visit::Visitable::reset_map","value":"fn (self: &Self, map: &mut Self::Map) -> ()","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Reset the visitor map (and resize to new size of graph if needed)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2354},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24832,"byte_end":24850,"line_start":681,"line_end":681,"column_start":11,"column_end":29},"name":"GetAdjacencyMatrix","qualname":"::visit::GetAdjacencyMatrix","value":"GetAdjacencyMatrix: GraphBase","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357}],"decl_id":null,"docs":" Create or access the adjacency matrix of a graph.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2355},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24937,"byte_end":24946,"line_start":684,"line_end":684,"column_start":10,"column_end":19},"name":"AdjMatrix","qualname":"::visit::GetAdjacencyMatrix::AdjMatrix","value":"type AdjMatrix;","parent":{"krate":0,"index":2354},"children":[],"decl_id":null,"docs":" The associated adjacency matrix type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25009,"byte_end":25025,"line_start":687,"line_end":687,"column_start":8,"column_end":24},"name":"adjacency_matrix","qualname":"::visit::GetAdjacencyMatrix::adjacency_matrix","value":"fn (self: &Self) -> Self::AdjMatrix","parent":{"krate":0,"index":2354},"children":[],"decl_id":null,"docs":" Create the adjacency matrix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25179,"byte_end":25190,"line_start":691,"line_end":691,"column_start":8,"column_end":19},"name":"is_adjacent","qualname":"::visit::GetAdjacencyMatrix::is_adjacent","value":"fn (self: &Self, matrix: &Self::AdjMatrix, a: Self::NodeId, b: Self::NodeId) -> bool","parent":{"krate":0,"index":2354},"children":[],"decl_id":null,"docs":" Return true if there is an edge from `a` to `b`, false otherwise.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48738,"byte_end":48748,"line_start":26,"line_end":26,"column_start":11,"column_end":21},"name":"FilterNode","qualname":"::visit::filter::FilterNode","value":"FilterNode<N>","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" A graph filter for nodes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48819,"byte_end":48831,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"include_node","qualname":"::visit::filter::FilterNode::include_node","value":"fn (&self, node: N) -> bool","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":" Return true to have the node be part of the graph\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49520,"byte_end":49532,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"NodeFiltered","qualname":"::visit::filter::NodeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" A node-filtering graph adaptor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49726,"byte_end":49733,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<NodeFiltered<G, F>>::from_fn","value":"fn (graph: G, filter: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `NodeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50393,"byte_end":50414,"line_start":92,"line_end":92,"column_start":12,"column_end":33},"name":"NodeFilteredNeighbors","qualname":"::visit::filter::NodeFilteredNeighbors","value":"NodeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52290,"byte_end":52307,"line_start":160,"line_end":160,"column_start":12,"column_end":29},"name":"NodeFilteredNodes","qualname":"::visit::filter::NodeFilteredNodes","value":"NodeFilteredNodes {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" A filtered node references iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53304,"byte_end":53330,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"NodeFilteredEdgeReferences","qualname":"::visit::filter::NodeFilteredEdgeReferences","value":"NodeFilteredEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":465},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54283,"byte_end":54300,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"NodeFilteredEdges","qualname":"::visit::filter::NodeFilteredEdges","value":"NodeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":488},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55598,"byte_end":55608,"line_start":288,"line_end":288,"column_start":11,"column_end":21},"name":"FilterEdge","qualname":"::visit::filter::FilterEdge","value":"FilterEdge<Edge>","parent":null,"children":[{"krate":0,"index":490}],"decl_id":null,"docs":" A graph filter for edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55682,"byte_end":55694,"line_start":290,"line_end":290,"column_start":8,"column_end":20},"name":"include_edge","qualname":"::visit::filter::FilterEdge::include_edge","value":"fn (&self, edge: Edge) -> bool","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Return true to have the edge be part of the graph\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2402},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56217,"byte_end":56229,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"EdgeFiltered","qualname":"::visit::filter::EdgeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-filtering graph adaptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56433,"byte_end":56440,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<EdgeFiltered<G, F>>::from_fn","value":"fn (graph: G, filter: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EdgeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57030,"byte_end":57051,"line_start":341,"line_end":341,"column_start":12,"column_end":33},"name":"EdgeFilteredNeighbors","qualname":"::visit::filter::EdgeFilteredNeighbors","value":"EdgeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58370,"byte_end":58387,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"EdgeFilteredEdges","qualname":"::visit::filter::EdgeFilteredEdges","value":"EdgeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2460},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59844,"byte_end":59852,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Reversed","qualname":"::visit::reversed::Reversed","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-reversing graph adaptor.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2476},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60905,"byte_end":60926,"line_start":74,"line_end":74,"column_start":12,"column_end":33},"name":"ReversedEdgeReference","qualname":"::visit::reversed::ReversedEdgeReference","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reversed edge reference\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61788,"byte_end":61810,"line_start":110,"line_end":110,"column_start":12,"column_end":34},"name":"ReversedEdgeReferences","qualname":"::visit::reversed::ReversedEdgeReferences","value":"ReversedEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":" A reversed edge references iterator.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":612},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":622},{"krate":0,"index":2514},{"krate":0,"index":2519},{"krate":0,"index":2524},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2537},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":636},{"krate":0,"index":643},{"krate":0,"index":650},{"krate":0,"index":658},{"krate":0,"index":2541},{"krate":0,"index":2563},{"krate":0,"index":2559},{"krate":0,"index":2554},{"krate":0,"index":2550},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":678},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":694}],"decl_id":null,"docs":" Graph traits for associated data and graph construction.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1195,"byte_end":1207,"line_start":45,"line_end":45,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":2511},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62926,"byte_end":62933,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"DataMap","qualname":"::data::DataMap","value":"DataMap: Data","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513}],"decl_id":null,"docs":" Access node and edge weights (associated data).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62968,"byte_end":62979,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"node_weight","qualname":"::data::DataMap::node_weight","value":"fn (self: &Self, id: Self::NodeId) -> Option<&Self::NodeWeight>","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63048,"byte_end":63059,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"edge_weight","qualname":"::data::DataMap::edge_weight","value":"fn (self: &Self, id: Self::EdgeId) -> Option<&Self::EdgeWeight>","parent":{"krate":0,"index":2511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63395,"byte_end":63405,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"DataMapMut","qualname":"::data::DataMapMut","value":"DataMapMut: DataMap","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531}],"decl_id":null,"docs":" Access node and edge weights mutably.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63443,"byte_end":63458,"line_start":41,"line_end":41,"column_start":8,"column_end":23},"name":"node_weight_mut","qualname":"::data::DataMapMut::node_weight_mut","value":"fn (self: &mut Self, id: Self::NodeId) -> Option<&mut Self::NodeWeight>","parent":{"krate":0,"index":2529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63535,"byte_end":63550,"line_start":42,"line_end":42,"column_start":8,"column_end":23},"name":"edge_weight_mut","qualname":"::data::DataMapMut::edge_weight_mut","value":"fn (self: &mut Self, id: Self::EdgeId) -> Option<&mut Self::EdgeWeight>","parent":{"krate":0,"index":2529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63820,"byte_end":63825,"line_start":50,"line_end":50,"column_start":11,"column_end":16},"name":"Build","qualname":"::data::Build","value":"Build: Data + NodeCount","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" A graph that can be extended with further nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63854,"byte_end":63862,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"add_node","qualname":"::data::Build::add_node","value":"fn (&mut self, weight: Self::NodeWeight) -> Self::NodeId","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64046,"byte_end":64054,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"add_edge","qualname":"::data::Build::add_edge","value":"fn (&mut self, a: Self::NodeId, b: Self::NodeId, weight: Self::EdgeWeight) -> Option<Self::EdgeId>","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Add a new edge. If parallel edges (duplicate) are not allowed and\n the edge already exists, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64350,"byte_end":64361,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"update_edge","qualname":"::data::Build::update_edge","value":"fn (&mut self, a: Self::NodeId, b: Self::NodeId, weight: Self::EdgeWeight) -> Self::EdgeId","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Add or update the edge from `a` to `b`. Return the id of the affected\n edge.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":627},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64552,"byte_end":64558,"line_start":69,"line_end":69,"column_start":11,"column_end":17},"name":"Create","qualname":"::data::Create","value":"Create: Build + Default","parent":null,"children":[{"krate":0,"index":628}],"decl_id":null,"docs":" A graph that can be created\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64586,"byte_end":64599,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::data::Create::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2544},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69383,"byte_end":69387,"line_start":246,"line_end":246,"column_start":5,"column_end":9},"name":"Node","qualname":"::data::Element::Node","value":"Element::Node { weight }","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" A graph node.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69442,"byte_end":69446,"line_start":250,"line_end":250,"column_start":5,"column_end":9},"name":"Edge","qualname":"::data::Element::Edge","value":"Element::Edge { source, target, weight }","parent":{"krate":0,"index":2541},"children":[],"decl_id":null,"docs":" A graph edge.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2541},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69341,"byte_end":69348,"line_start":244,"line_end":244,"column_start":10,"column_end":17},"name":"Element","qualname":"::data::Element","value":"Element::{Node, Edge}","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2546}],"decl_id":null,"docs":" A graph element.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":664},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69582,"byte_end":69594,"line_start":258,"line_end":258,"column_start":11,"column_end":23},"name":"FromElements","qualname":"::data::FromElements","value":"FromElements: Create","parent":null,"children":[{"krate":0,"index":665}],"decl_id":null,"docs":" Create a graph from an iterator of elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69613,"byte_end":69626,"line_start":259,"line_end":259,"column_start":8,"column_end":21},"name":"from_elements","qualname":"::data::FromElements::from_elements","value":"fn <I> (iterable: I) -> Self","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":678},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71954,"byte_end":71969,"line_start":341,"line_end":341,"column_start":11,"column_end":26},"name":"ElementIterator","qualname":"::data::ElementIterator","value":"ElementIterator<N, E>: Iterator<Item = Element<N, E>>","parent":null,"children":[{"krate":0,"index":681}],"decl_id":null,"docs":" Iterator adaptors for iterators of `Element`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72520,"byte_end":72535,"line_start":351,"line_end":351,"column_start":8,"column_end":23},"name":"filter_elements","qualname":"::data::ElementIterator::filter_elements","value":"fn <F> (self, f: F) -> FilterElements<Self, F>","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Create an iterator adaptor that filters graph elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73086,"byte_end":73100,"line_start":372,"line_end":372,"column_start":12,"column_end":26},"name":"FilterElements","qualname":"::data::FilterElements","value":"FilterElements {  }","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" An iterator that filters graph elements.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":701},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"algo","qualname":"::algo","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":791},{"krate":0,"index":2578},{"krate":0,"index":2586},{"krate":0,"index":2582},{"krate":0,"index":793},{"krate":0,"index":798},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":818},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":831},{"krate":0,"index":2610},{"krate":0,"index":2621},{"krate":0,"index":2618},{"krate":0,"index":2614},{"krate":0,"index":835},{"krate":0,"index":2624},{"krate":0,"index":2632},{"krate":0,"index":2630},{"krate":0,"index":2627},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":852}],"decl_id":null,"docs":" Graph algorithms.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dominators","qualname":"::algo::dominators","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":2567},{"krate":0,"index":2574},{"krate":0,"index":2571},{"krate":0,"index":713},{"krate":0,"index":719},{"krate":0,"index":724},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":742}],"decl_id":null,"docs":" Compute dominators of a control-flow graph.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2567},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95035,"byte_end":95045,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"Dominators","qualname":"::algo::dominators::Dominators","value":"Dominators {  }","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570}],"decl_id":null,"docs":" The dominance relation for some graph and root.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95264,"byte_end":95268,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"root","qualname":"<Dominators<N>>::root","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Get the root node used to construct these dominance relations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95488,"byte_end":95507,"line_start":41,"line_end":41,"column_start":12,"column_end":31},"name":"immediate_dominator","qualname":"<Dominators<N>>::immediate_dominator","value":"fn (&self, node: N) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Get the immediate dominator of the given node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95841,"byte_end":95858,"line_start":53,"line_end":53,"column_start":12,"column_end":29},"name":"strict_dominators","qualname":"<Dominators<N>>::strict_dominators","value":"fn (&self, node: N) -> Option<DominatorsIter<N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the given node's that strict dominators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96352,"byte_end":96362,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"dominators","qualname":"<Dominators<N>>::dominators","value":"fn (&self, node: N) -> Option<DominatorsIter<N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the given node's dominators (including the given\n node itself).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96678,"byte_end":96692,"line_start":82,"line_end":82,"column_start":12,"column_end":26},"name":"DominatorsIter","qualname":"::algo::dominators::DominatorsIter","value":"DominatorsIter {  }","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" Iterator for a node's dominators.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":730},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97718,"byte_end":97729,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"simple_fast","qualname":"::algo::dominators::simple_fast","value":"fn <G> (graph: G, root: G::NodeId) -> Dominators<G::NodeId>","parent":null,"children":[],"decl_id":null,"docs":" This is an implementation of the engineered [\"Simple, Fast Dominance\n Algorithm\"][0] discovered by Cooper et al.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76340,"byte_end":76360,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"connected_components","qualname":"::algo::connected_components","value":"fn <G> (g: G) -> usize","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return the number of connected components of the graph.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76934,"byte_end":76954,"line_start":72,"line_end":72,"column_start":8,"column_end":28},"name":"is_cyclic_undirected","qualname":"::algo::is_cyclic_undirected","value":"fn <G> (g: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input graph contains a cycle.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77918,"byte_end":77926,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"toposort","qualname":"::algo::toposort","value":"fn <G> (g: G, space: Option<&mut DfsSpace<G::NodeId, G::Map>>) -> Result<Vec<G::NodeId>, Cycle<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Perform a topological sort of a directed graph.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79838,"byte_end":79856,"line_start":158,"line_end":158,"column_start":8,"column_end":26},"name":"is_cyclic_directed","qualname":"::algo::is_cyclic_directed","value":"fn <G> (g: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input directed graph contains a cycle.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80324,"byte_end":80332,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"DfsSpace","qualname":"::algo::DfsSpace","value":"DfsSpace {  }","parent":null,"children":[{"krate":0,"index":2581}],"decl_id":null,"docs":" Workspace for a graph traversal.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80465,"byte_end":80468,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsSpace<N, VM>>::new","value":"fn <G> (g: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81513,"byte_end":81532,"line_start":224,"line_end":224,"column_start":8,"column_end":27},"name":"has_path_connecting","qualname":"::algo::has_path_connecting","value":"fn <G> (g: G, from: G::NodeId, to: G::NodeId, space: Option<&mut DfsSpace<G::NodeId, G::Map>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Check if there exists a path starting at `from` and reaching `to`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82017,"byte_end":82020,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"scc","qualname":"::algo::scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to `kosaraju_scc`.\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to kosaraju_scc\")","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81962,"byte_end":82009,"line_start":242,"line_end":242,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":811},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82685,"byte_end":82697,"line_start":260,"line_end":260,"column_start":8,"column_end":20},"name":"kosaraju_scc","qualname":"::algo::kosaraju_scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":813},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84331,"byte_end":84341,"line_start":311,"line_end":311,"column_start":8,"column_end":18},"name":"tarjan_scc","qualname":"::algo::tarjan_scc","value":"fn <G> (g: G) -> Vec<Vec<G::NodeId>>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Tarjan's algorithm][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":818},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":87071,"byte_end":87083,"line_start":405,"line_end":405,"column_start":8,"column_end":20},"name":"condensation","qualname":"::algo::condensation","value":"fn <N, E, Ty, Ix> (g: Graph<N, E, Ty, Ix>, make_acyclic: bool) -> Graph<Vec<N>, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Condense every strongly connected component into a single node and return the result.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":823},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88831,"byte_end":88848,"line_start":452,"line_end":452,"column_start":8,"column_end":25},"name":"min_spanning_tree","qualname":"::algo::min_spanning_tree","value":"fn <G> (g: G) -> MinSpanningTree<G>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute a *minimum spanning tree* of a graph.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89687,"byte_end":89702,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"MinSpanningTree","qualname":"::algo::MinSpanningTree","value":"MinSpanningTree {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" An iterator producing a minimum spanning forest of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91324,"byte_end":91329,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::algo::Cycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle was found in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91424,"byte_end":91431,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"node_id","qualname":"<Cycle<N>>::node_id","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Return a node id that participates in the cycle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91617,"byte_end":91630,"line_start":541,"line_end":541,"column_start":12,"column_end":25},"name":"NegativeCycle","qualname":"::algo::NegativeCycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle of negative weights was found in the graph.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92173,"byte_end":92185,"line_start":554,"line_end":554,"column_start":8,"column_end":20},"name":"bellman_ford","qualname":"::algo::bellman_ford","value":"fn <G> (g: G, source: G::NodeId) -> Result<(Vec<G::EdgeWeight>, Vec<Option<G::NodeId>>), NegativeCycle>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute shortest paths from node `source` to all other.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":843},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93752,"byte_end":93759,"line_start":604,"line_end":604,"column_start":11,"column_end":18},"name":"Measure","qualname":"::algo::Measure","value":"Measure: Debug + PartialOrd + Add<Self, Output = Self> + Default + Clone","parent":null,"children":[],"decl_id":null,"docs":" Associated data that can be used for measures (such as length).\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":846},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93966,"byte_end":93978,"line_start":612,"line_end":612,"column_start":11,"column_end":23},"name":"FloatMeasure","qualname":"::algo::FloatMeasure","value":"FloatMeasure: Measure + Copy","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"decl_id":null,"docs":" A floating-point measure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94005,"byte_end":94009,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"zero","qualname":"::algo::FloatMeasure::zero","value":"fn () -> Self","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94028,"byte_end":94036,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"infinite","qualname":"::algo::FloatMeasure::infinite","value":"fn () -> Self","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":885},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103668,"byte_end":103677,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"DefaultIx","qualname":"::graph_impl::DefaultIx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The default integer type for graph indices.\n `u32` is the default to reduce the size of the graph's data and improve\n performance in the common case.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":886},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103872,"byte_end":103881,"line_start":44,"line_end":44,"column_start":18,"column_end":27},"name":"IndexType","qualname":"::graph_impl::IndexType","value":"IndexType: Copy + Default + Hash + Ord + fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" Trait for the unsigned integer type used for node and edge indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103944,"byte_end":103947,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"new","qualname":"::graph_impl::IndexType::new","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103974,"byte_end":103979,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::IndexType::index","value":"fn (&self) -> usize","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":104004,"byte_end":104007,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"max","qualname":"::graph_impl::IndexType::max","value":"fn () -> Self","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105036,"byte_end":105045,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"NodeIndex","qualname":"::graph_impl::NodeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Node identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105127,"byte_end":105130,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<NodeIndex<Ix>>::new","value":"fn (x: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105106,"byte_end":105115,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105220,"byte_end":105225,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"index","qualname":"<NodeIndex<Ix>>::index","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105199,"byte_end":105208,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105302,"byte_end":105305,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"end","qualname":"<NodeIndex<Ix>>::end","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105281,"byte_end":105290,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105751,"byte_end":105761,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"node_index","qualname":"::graph_impl::node_index","value":"fn <Ix> (index: usize) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `NodeIndex::new`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105880,"byte_end":105890,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"edge_index","qualname":"::graph_impl::edge_index","value":"fn <Ix> (index: usize) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `EdgeIndex::new`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2667},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106066,"byte_end":106075,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"EdgeIndex","qualname":"::graph_impl::EdgeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Edge identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106157,"byte_end":106160,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<EdgeIndex<Ix>>::new","value":"fn (x: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106136,"byte_end":106145,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106250,"byte_end":106255,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"index","qualname":"<EdgeIndex<Ix>>::index","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106229,"byte_end":106238,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106444,"byte_end":106447,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"end","qualname":"<EdgeIndex<Ix>>::end","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" An invalid `EdgeIndex` used to denote absence of an edge, for example\n to end an adjacency list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106423,"byte_end":106432,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2700},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107268,"byte_end":107272,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"Node","qualname":"::graph_impl::Node","value":"Node { weight }","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704}],"decl_id":null,"docs":" The graph's node type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2703},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107332,"byte_end":107338,"line_start":189,"line_end":189,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Node::weight","value":"N","parent":{"krate":0,"index":2700},"children":[],"decl_id":null,"docs":" Associated node data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107725,"byte_end":107734,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Node<N, Ix>>::next_edge","value":"fn (&self, dir: Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2711},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107877,"byte_end":107881,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"Edge","qualname":"::graph_impl::Edge","value":"Edge { weight }","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2717}],"decl_id":null,"docs":" The graph's edge type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2714},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107941,"byte_end":107947,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Edge::weight","value":"E","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" Associated edge data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108420,"byte_end":108429,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Edge<E, Ix>>::next_edge","value":"fn (&self, dir: Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108563,"byte_end":108569,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"source","qualname":"<Edge<E, Ix>>::source","value":"fn (&self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the source node index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108677,"byte_end":108683,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"target","qualname":"<Edge<E, Ix>>::target","value":"fn (&self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the target node index.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":111846,"byte_end":111851,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"Graph","qualname":"::graph_impl::Graph","value":"Graph {  }","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":957},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112112,"byte_end":112119,"line_start":335,"line_end":335,"column_start":10,"column_end":17},"name":"DiGraph","qualname":"::graph_impl::DiGraph","value":"Graph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with directed edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":961},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112317,"byte_end":112324,"line_start":341,"line_end":341,"column_start":10,"column_end":17},"name":"UnGraph","qualname":"::graph_impl::UnGraph","value":"Graph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with undirected edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":114988,"byte_end":114991,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<Graph<N, E, Directed>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with directed edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115374,"byte_end":115388,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"new_undirected","qualname":"<Graph<N, E, Undirected>>::new_undirected","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with undirected edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115652,"byte_end":115665,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Graph<N, E, Ty, Ix>>::with_capacity","value":"fn (nodes: usize, edges: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with estimated capacity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115942,"byte_end":115952,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Graph<N, E, Ty, Ix>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":116110,"byte_end":116120,"line_start":469,"line_end":469,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Graph<N, E, Ty, Ix>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":116253,"byte_end":116264,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Graph<N, E, Ty, Ix>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":116232,"byte_end":116241,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":116624,"byte_end":116632,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Graph<N, E, Ty, Ix>>::add_node","value":"fn (&mut self, weight: N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":117139,"byte_end":117150,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<Graph<N, E, Ty, Ix>>::node_weight","value":"fn (&self, a: NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":117386,"byte_end":117401,"line_start":510,"line_end":510,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weight_mut","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":118075,"byte_end":118083,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Graph<N, E, Ty, Ix>>::add_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":119434,"byte_end":119445,"line_start":564,"line_end":564,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<Graph<N, E, Ty, Ix>>::update_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":119874,"byte_end":119885,"line_start":578,"line_end":578,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":120123,"byte_end":120138,"line_start":586,"line_end":586,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight_mut","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":120325,"byte_end":120339,"line_start":592,"line_end":592,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<Graph<N, E, Ty, Ix>>::edge_endpoints","value":"fn (&self, e: EdgeIndex<Ix>) -> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":121173,"byte_end":121184,"line_start":610,"line_end":610,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<Graph<N, E, Ty, Ix>>::remove_node","value":"fn (&mut self, a: NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":124489,"byte_end":124500,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<Graph<N, E, Ty, Ix>>::remove_edge","value":"fn (&mut self, e: EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":126276,"byte_end":126285,"line_start":742,"line_end":742,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<Graph<N, E, Ty, Ix>>::neighbors","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":127318,"byte_end":127336,"line_start":766,"line_end":766,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":128250,"byte_end":128270,"line_start":791,"line_end":791,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_undirected","value":"fn (&self, a: NodeIndex<Ix>) -> Neighbors<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":128878,"byte_end":128883,"line_start":810,"line_end":810,"column_start":12,"column_end":17},"name":"edges","qualname":"<Graph<N, E, Ty, Ix>>::edges","value":"fn (&self, a: NodeIndex<Ix>) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129367,"byte_end":129381,"line_start":822,"line_end":822,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<Graph<N, E, Ty, Ix>>::edges_directed","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130564,"byte_end":130577,"line_start":857,"line_end":857,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Graph<N, E, Ty, Ix>>::contains_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lookup if there is an edge from `a` to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130879,"byte_end":130888,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<Graph<N, E, Ty, Ix>>::find_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131967,"byte_end":131987,"line_start":897,"line_end":897,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<Graph<N, E, Ty, Ix>>::find_edge_undirected","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133242,"byte_end":133251,"line_start":932,"line_end":932,"column_start":12,"column_end":21},"name":"externals","qualname":"<Graph<N, E, Ty, Ix>>::externals","value":"fn (&self, dir: Direction) -> Externals<N, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over either the nodes without edges to them\n (`Incoming`) or from them (`Outgoing`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133467,"byte_end":133479,"line_start":938,"line_end":938,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<Graph<N, E, Ty, Ix>>::node_indices","value":"fn (&self) -> NodeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133767,"byte_end":133783,"line_start":946,"line_end":946,"column_start":12,"column_end":28},"name":"node_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weights_mut","value":"fn (&mut self) -> NodeWeightsMut<N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all node weights.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133962,"byte_end":133974,"line_start":952,"line_end":952,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<Graph<N, E, Ty, Ix>>::edge_indices","value":"fn (&self) -> EdgeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the edge indices of the graph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134212,"byte_end":134227,"line_start":959,"line_end":959,"column_start":12,"column_end":27},"name":"edge_references","qualname":"<Graph<N, E, Ty, Ix>>::edge_references","value":"fn (&self) -> EdgeReferences<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over all edges, in indexed order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134539,"byte_end":134555,"line_start":969,"line_end":969,"column_start":12,"column_end":28},"name":"edge_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weights_mut","value":"fn (&mut self) -> EdgeWeightsMut<E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all edge weights.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134831,"byte_end":134840,"line_start":978,"line_end":978,"column_start":12,"column_end":21},"name":"raw_nodes","qualname":"<Graph<N, E, Ty, Ix>>::raw_nodes","value":"fn (&self) -> &[Node<N, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal node array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134950,"byte_end":134959,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"raw_edges","qualname":"<Graph<N, E, Ty, Ix>>::raw_edges","value":"fn (&self) -> &[Edge<E, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal edge array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135100,"byte_end":135116,"line_start":990,"line_end":990,"column_start":12,"column_end":28},"name":"into_nodes_edges","qualname":"<Graph<N, E, Ty, Ix>>::into_nodes_edges","value":"fn (self) -> (Vec<Node<N, Ix>>, Vec<Edge<E, Ix>>)","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into a vector of Nodes and a vector of Edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135302,"byte_end":135312,"line_start":995,"line_end":995,"column_start":12,"column_end":22},"name":"first_edge","qualname":"<Graph<N, E, Ty, Ix>>::first_edge","value":"fn (&self, a: NodeIndex<Ix>, dir: Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135769,"byte_end":135778,"line_start":1009,"line_end":1009,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Graph<N, E, Ty, Ix>>::next_edge","value":"fn (&self, e: EdgeIndex<Ix>, dir: Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137276,"byte_end":137291,"line_start":1055,"line_end":1055,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Graph<N, E, Ty, Ix>>::index_twice_mut","value":"fn <T, U> (&mut self, i: T, j: U) -> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output)","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137956,"byte_end":137963,"line_start":1074,"line_end":1074,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Graph<N, E, Ty, Ix>>::reverse","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverse the direction of all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138345,"byte_end":138350,"line_start":1088,"line_end":1088,"column_start":12,"column_end":17},"name":"clear","qualname":"<Graph<N, E, Ty, Ix>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138463,"byte_end":138474,"line_start":1094,"line_end":1094,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Graph<N, E, Ty, Ix>>::clear_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138708,"byte_end":138716,"line_start":1102,"line_end":1102,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Graph<N, E, Ty, Ix>>::capacity","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":139045,"byte_end":139058,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"reserve_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_nodes","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more nodes to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":139377,"byte_end":139390,"line_start":1118,"line_end":1118,"column_start":12,"column_end":25},"name":"reserve_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_edges","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more edges to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":139792,"byte_end":139811,"line_start":1129,"line_end":1129,"column_start":12,"column_end":31},"name":"reserve_exact_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_nodes","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more nodes to be\n inserted in the graph. Does nothing if the capacity is already\n sufficient.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140219,"byte_end":140238,"line_start":1140,"line_end":1140,"column_start":12,"column_end":31},"name":"reserve_exact_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_edges","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more edges to be\n inserted in the graph.\n Does nothing if the capacity is already sufficient.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140420,"byte_end":140439,"line_start":1145,"line_end":1145,"column_start":12,"column_end":31},"name":"shrink_to_fit_nodes","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_nodes","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying nodes collection as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140592,"byte_end":140611,"line_start":1150,"line_end":1150,"column_start":12,"column_end":31},"name":"shrink_to_fit_edges","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying edges collection as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140742,"byte_end":140755,"line_start":1155,"line_end":1155,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the graph as much as possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141154,"byte_end":141166,"line_start":1167,"line_end":1167,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<Graph<N, E, Ty, Ix>>::retain_nodes","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141818,"byte_end":141830,"line_start":1186,"line_end":1186,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<Graph<N, E, Ty, Ix>>::retain_edges","value":"fn <F> (&mut self, mut visit: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142697,"byte_end":142707,"line_start":1216,"line_end":1216,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<Graph<N, E, Ty, Ix>>::from_edges","value":"fn <I> (iterable: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143321,"byte_end":143338,"line_start":1234,"line_end":1234,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<Graph<N, E, Ty, Ix>>::extend_with_edges","value":"fn <I> (&mut self, iterable: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144256,"byte_end":144259,"line_start":1261,"line_end":1261,"column_start":12,"column_end":15},"name":"map","qualname":"<Graph<N, E, Ty, Ix>>::map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> Graph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145597,"byte_end":145607,"line_start":1293,"line_end":1293,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Graph<N, E, Ty, Ix>>::filter_map","value":"fn <'a, F, G, N2, E2> (&'a self, mut node_map: F, mut edge_map: G) -> Graph<N2, E2, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146945,"byte_end":146959,"line_start":1323,"line_end":1323,"column_start":12,"column_end":26},"name":"into_edge_type","qualname":"<Graph<N, E, Ty, Ix>>::into_edge_type","value":"fn <NewTy> (self) -> Graph<N, E, NewTy, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into either undirected or directed. No edge adjustments\n are done, so you may want to go over the result to remove or add edges.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":148209,"byte_end":148218,"line_start":1361,"line_end":1361,"column_start":12,"column_end":21},"name":"Externals","qualname":"::graph_impl::Externals","value":"Externals {  }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" An iterator over either the nodes without edges to them or from them.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149457,"byte_end":149466,"line_start":1402,"line_end":1402,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151064,"byte_end":151070,"line_start":1457,"line_end":1457,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"fn (&self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152719,"byte_end":152724,"line_start":1525,"line_end":1525,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1175},{"krate":0,"index":1176}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155295,"byte_end":155309,"line_start":1612,"line_end":1612,"column_start":12,"column_end":26},"name":"NodeWeightsMut","qualname":"::graph_impl::NodeWeightsMut","value":"NodeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1198}],"decl_id":null,"docs":" Iterator yielding mutable access to all node weights.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1207},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155783,"byte_end":155797,"line_start":1631,"line_end":1631,"column_start":12,"column_end":26},"name":"EdgeWeightsMut","qualname":"::graph_impl::EdgeWeightsMut","value":"EdgeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1211}],"decl_id":null,"docs":" Iterator yielding mutable access to all edge weights.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1252},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157798,"byte_end":157808,"line_start":1709,"line_end":1709,"column_start":11,"column_end":21},"name":"GraphIndex","qualname":"::graph_impl::GraphIndex","value":"GraphIndex: Copy","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":" A  `GraphIndex` is a node or edge index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157844,"byte_end":157849,"line_start":1711,"line_end":1711,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::GraphIndex::index","value":"fn (&self) -> usize","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157893,"byte_end":157906,"line_start":1713,"line_end":1713,"column_start":8,"column_end":21},"name":"is_node_index","qualname":"::graph_impl::GraphIndex::is_node_index","value":"fn () -> bool","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1263},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159402,"byte_end":159415,"line_start":1765,"line_end":1765,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160072,"byte_end":160076,"line_start":1788,"line_end":1788,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160999,"byte_end":161008,"line_start":1813,"line_end":1813,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161156,"byte_end":161165,"line_start":1819,"line_end":1819,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"fn <N, E, Ty> (&mut self, g: &Graph<N, E, Ty, Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2725},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161386,"byte_end":161397,"line_start":1828,"line_end":1828,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2735},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162046,"byte_end":162057,"line_start":1855,"line_end":1855,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2745},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162685,"byte_end":162698,"line_start":1882,"line_end":1882,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2752}],"decl_id":null,"docs":" Reference to a `Graph` edge.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163605,"byte_end":163619,"line_start":1918,"line_end":1918,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1334}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164668,"byte_end":164674,"line_start":1959,"line_end":1959,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"fn (&self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165132,"byte_end":165146,"line_start":1977,"line_end":1977,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1373}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167278,"byte_end":167281,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Frozen>::new","value":"fn (gr: &'a mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Frozen` from a mutable reference to a graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":168156,"byte_end":168171,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Frozen>::index_twice_mut","value":"fn <T, U> (&mut self, i: T, j: U) -> (&mut <Graph<N, E, Ty, Ix> as Index<T>>::Output,\n &mut <Graph<N, E, Ty, Ix> as Index<U>>::Output)","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1455},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166688,"byte_end":166694,"line_start":2034,"line_end":2034,"column_start":12,"column_end":18},"name":"Frozen","qualname":"::graph_impl::Frozen","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Frozen` is a graph wrapper.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1460},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dot","qualname":"::dot","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":2846},{"krate":0,"index":2861},{"krate":0,"index":2858},{"krate":0,"index":2856},{"krate":0,"index":1482},{"krate":0,"index":1487},{"krate":0,"index":1491},{"krate":0,"index":1499},{"krate":0,"index":1505},{"krate":0,"index":1511},{"krate":0,"index":1515},{"krate":0,"index":1519},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1530}],"decl_id":null,"docs":" Simple graphviz dot file format output.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":170871,"byte_end":170874,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Dot","qualname":"::dot::Dot","value":"Dot {  }","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"decl_id":null,"docs":" `Dot` implements output to graphviz .dot format for a graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171192,"byte_end":171195,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Dot>::new","value":"fn (graph: G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with default configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171341,"byte_end":171352,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Dot>::with_config","value":"fn (graph: G, config: &'a [Config]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with custom configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2847},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171674,"byte_end":171688,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"NodeIndexLabel","qualname":"::dot::Config::NodeIndexLabel","value":"Config::NodeIndexLabel","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Use indices for node labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2849},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171731,"byte_end":171745,"line_start":80,"line_end":80,"column_start":5,"column_end":19},"name":"EdgeIndexLabel","qualname":"::dot::Config::EdgeIndexLabel","value":"Config::EdgeIndexLabel","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Use indices for edge labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171779,"byte_end":171790,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"EdgeNoLabel","qualname":"::dot::Config::EdgeNoLabel","value":"Config::EdgeNoLabel","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Use no edge labels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2853},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171815,"byte_end":171826,"line_start":84,"line_end":84,"column_start":5,"column_end":16},"name":"_Incomplete","qualname":"::dot::Config::_Incomplete","value":"Config::_Incomplete(())","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2846},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171624,"byte_end":171630,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Config","qualname":"::dot::Config","value":"Config::{NodeIndexLabel, EdgeIndexLabel, EdgeNoLabel, _Incomplete}","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853}],"decl_id":null,"docs":" `Dot` configuration.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1533},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unionfind","qualname":"::unionfind","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":2865},{"krate":0,"index":2872},{"krate":0,"index":2869},{"krate":0,"index":1535},{"krate":0,"index":1537}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2865},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":176261,"byte_end":176270,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"UnionFind","qualname":"::unionfind::UnionFind","value":"UnionFind {  }","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements\n indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":177045,"byte_end":177048,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<UnionFind<K>>::new","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UnionFind` of `n` disjoint sets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":177325,"byte_end":177329,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"find","qualname":"<UnionFind<K>>::find","value":"fn (&self, x: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":178021,"byte_end":178029,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<UnionFind<K>>::find_mut","value":"fn (&mut self, x: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":178776,"byte_end":178781,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"union","qualname":"<UnionFind<K>>::union","value":"fn (&mut self, x: K, y: K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unify the two sets containing `x` and `y`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":179657,"byte_end":179670,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"into_labeling","qualname":"<UnionFind<K>>::into_labeling","value":"fn (mut self) -> Vec<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector mapping each element to its representative.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1560},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":180839,"byte_end":180847,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"dijkstra","qualname":"::dijkstra::dijkstra","value":"fn <G, F, K> (graph: G, start: G::NodeId, goal: Option<G::NodeId>, mut edge_cost: F) -> HashMap<G::NodeId, K>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Dijkstra's shortest path algorithm.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1580},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":184242,"byte_end":184247,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"astar","qualname":"::astar::astar","value":"fn <G, F, H, K, IsGoal> (graph: G, start: G::NodeId, mut is_goal: IsGoal, mut edge_cost: F, mut estimate_cost: H) -> Option<(K, Vec<G::NodeId>)>","parent":null,"children":[],"decl_id":null,"docs":" [Generic] A* shortest path algorithm.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1594},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"csr","qualname":"::csr","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1611},{"krate":0,"index":1615},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":2875},{"krate":0,"index":2886},{"krate":0,"index":1632},{"krate":0,"index":1638},{"krate":0,"index":1644},{"krate":0,"index":2892},{"krate":0,"index":2896},{"krate":0,"index":2894},{"krate":0,"index":1652},{"krate":0,"index":1660},{"krate":0,"index":2898},{"krate":0,"index":2913},{"krate":0,"index":2907},{"krate":0,"index":2919},{"krate":0,"index":2929},{"krate":0,"index":1681},{"krate":0,"index":1687},{"krate":0,"index":1692},{"krate":0,"index":1698},{"krate":0,"index":1710},{"krate":0,"index":1718},{"krate":0,"index":1725},{"krate":0,"index":1734},{"krate":0,"index":1746},{"krate":0,"index":1753},{"krate":0,"index":1761},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1777},{"krate":0,"index":2935},{"krate":0,"index":2943},{"krate":0,"index":2939},{"krate":0,"index":1778},{"krate":0,"index":1784},{"krate":0,"index":1792},{"krate":0,"index":1800},{"krate":0,"index":1805},{"krate":0,"index":1812},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1827},{"krate":0,"index":1835},{"krate":0,"index":1841}],"decl_id":null,"docs":" Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1628},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":187940,"byte_end":187949,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"NodeIndex","qualname":"::csr::NodeIndex","value":"Ix","parent":null,"children":[],"decl_id":null,"docs":" Csr node index type, a plain integer.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1630},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":188023,"byte_end":188032,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"EdgeIndex","qualname":"::csr::EdgeIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Csr edge index type, a plain integer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":188766,"byte_end":188769,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Csr","qualname":"::csr::Csr","value":"Csr {  }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885}],"decl_id":null,"docs":" Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189811,"byte_end":189814,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Csr<N, E, Ty, Ix>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Csr`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":190652,"byte_end":190662,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"with_nodes","qualname":"<Csr<N, E, Ty, Ix>>::with_nodes","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2892},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":191055,"byte_end":191069,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"EdgesNotSorted","qualname":"::csr::EdgesNotSorted","value":"EdgesNotSorted {  }","parent":null,"children":[{"krate":0,"index":2893}],"decl_id":null,"docs":" Csr creation error: edges were not in sorted order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":191846,"byte_end":191863,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"from_sorted_edges","qualname":"<Csr<N, E, Directed, Ix>>::from_sorted_edges","value":"fn <Edge> (edges: &[Edge]) -> Result<Self, EdgesNotSorted>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Csr` from a sorted sequence of edges","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":194847,"byte_end":194857,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Csr<N, E, Ty, Ix>>::node_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":194921,"byte_end":194931,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Csr<N, E, Ty, Ix>>::edge_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":195085,"byte_end":195096,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Csr<N, E, Ty, Ix>>::is_directed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":195183,"byte_end":195194,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Csr<N, E, Ty, Ix>>::clear_edges","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":195509,"byte_end":195517,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Csr<N, E, Ty, Ix>>::add_node","value":"fn (&mut self, weight: N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new node with the given weight, returning the corresponding node index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":195941,"byte_end":195949,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Csr<N, E, Ty, Ix>>::add_edge","value":"fn (&mut self, a: NodeIndex<Ix>, b: NodeIndex<Ix>, weight: E) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge was added","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":197785,"byte_end":197798,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Csr<N, E, Ty, Ix>>::contains_edge","value":"fn (&self, a: NodeIndex<Ix>, b: NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(log |V|)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":198379,"byte_end":198389,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"out_degree","qualname":"<Csr<N, E, Ty, Ix>>::out_degree","value":"fn (&self, a: NodeIndex<Ix>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":198603,"byte_end":198618,"line_start":364,"line_end":364,"column_start":12,"column_end":27},"name":"neighbors_slice","qualname":"<Csr<N, E, Ty, Ix>>::neighbors_slice","value":"fn (&self, a: NodeIndex<Ix>) -> &[NodeIndex<Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":198809,"byte_end":198820,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"edges_slice","qualname":"<Csr<N, E, Ty, Ix>>::edges_slice","value":"fn (&self, a: NodeIndex<Ix>) -> &[E]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":199198,"byte_end":199203,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"edges","qualname":"<Csr<N, E, Ty, Ix>>::edges","value":"fn (&self, a: NodeIndex<Ix>) -> Edges<E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2898},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":199502,"byte_end":199507,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"Edges","qualname":"::csr::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2919},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":199720,"byte_end":199733,"line_start":402,"line_end":402,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::csr::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200333,"byte_end":200339,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"fn (&self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":202023,"byte_end":202037,"line_start":489,"line_end":489,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::csr::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2935},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":204109,"byte_end":204118,"line_start":566,"line_end":566,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::csr::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":2938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205960,"byte_end":205975,"line_start":639,"line_end":639,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::csr::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1921},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":221686,"byte_end":221699,"line_start":166,"line_end":166,"column_start":8,"column_end":21},"name":"is_isomorphic","qualname":"::isomorphism::is_isomorphic","value":"fn <N, E, Ty, Ix> (g0: &Graph<N, E, Ty, Ix>, g1: &Graph<N, E, Ty, Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1926},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":222392,"byte_end":222414,"line_start":185,"line_end":185,"column_start":8,"column_end":30},"name":"is_isomorphic_matching","qualname":"::isomorphism::is_isomorphic_matching","value":"fn <N, E, Ty, Ix, F, G> (g0: &Graph<N, E, Ty, Ix>, g1: &Graph<N, E, Ty, Ix>, mut node_match: F, mut edge_match: G) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1982},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1999}],"decl_id":null,"docs":" Commonly used items.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2001},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1705,"byte_end":1710,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"graph","qualname":"::graph","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":2002}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2690,"byte_end":2698,"line_start":119,"line_end":119,"column_start":5,"column_end":13},"name":"Outgoing","qualname":"::Direction::Outgoing","value":"Direction::Outgoing","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" An `Outgoing` edge is an outward edge *from* the current node.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2993},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2777,"byte_end":2785,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Incoming","qualname":"::Direction::Incoming","value":"Direction::Incoming","parent":{"krate":0,"index":2989},"children":[],"decl_id":null,"docs":" An `Incoming` edge is an inbound edge *to* the current node.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2989},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2603,"byte_end":2612,"line_start":117,"line_end":117,"column_start":10,"column_end":19},"name":"Direction","qualname":"::Direction","value":"Direction::{Outgoing, Incoming}","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2993}],"decl_id":null,"docs":" Edge direction.\n","sig":null,"attributes":[{"value":"repr(usize)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2579,"byte_end":2593,"line_start":116,"line_end":116,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2900,"byte_end":2908,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"opposite","qualname":"<Direction>::opposite","value":"fn (&self) -> Direction","parent":null,"children":[],"decl_id":null,"docs":" Return the opposite `Direction`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2879,"byte_end":2888,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3121,"byte_end":3126,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"index","qualname":"<Direction>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return `0` for `Outgoing` and `1` for `Incoming`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3100,"byte_end":3109,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":3012},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3307,"byte_end":3315,"line_start":148,"line_end":148,"column_start":10,"column_end":18},"name":"Directed","qualname":"::Directed","value":"Directed::{}","parent":null,"children":[],"decl_id":null,"docs":" Marker type for a directed graph.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3018},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3416,"byte_end":3426,"line_start":153,"line_end":153,"column_start":10,"column_end":20},"name":"Undirected","qualname":"::Undirected","value":"Undirected::{}","parent":null,"children":[],"decl_id":null,"docs":" Marker type for an undirected graph.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2032},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3539,"byte_end":3547,"line_start":157,"line_end":157,"column_start":11,"column_end":19},"name":"EdgeType","qualname":"::EdgeType","value":"EdgeType","parent":null,"children":[{"krate":0,"index":2033}],"decl_id":null,"docs":" A graph's edge type determines whether is has directed edges or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3557,"byte_end":3568,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::EdgeType::is_directed","value":"fn () -> bool","parent":{"krate":0,"index":2032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2038},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3927,"byte_end":3943,"line_start":176,"line_end":176,"column_start":11,"column_end":27},"name":"IntoWeightedEdge","qualname":"::IntoWeightedEdge","value":"IntoWeightedEdge<E>","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" Convert an element like `(i, j)` or `(i, j, w)` into\n a triple of source, target, edge weight.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2040},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3958,"byte_end":3964,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::IntoWeightedEdge::NodeId","value":"type NodeId;","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3973,"byte_end":3991,"line_start":178,"line_end":178,"column_start":8,"column_end":26},"name":"into_weighted_edge","qualname":"::IntoWeightedEdge::into_weighted_edge","value":"fn (self) -> (Self::NodeId, Self::NodeId, E)","parent":{"krate":0,"index":2038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105086,"byte_end":105095,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105476,"byte_end":105485,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105577,"byte_end":105586,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106116,"byte_end":106125,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106617,"byte_end":106626,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107453,"byte_end":107457,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107614,"byte_end":107618,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108125,"byte_end":108129,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108309,"byte_end":108313,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112489,"byte_end":112494,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112905,"byte_end":112910,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":114729,"byte_end":114734,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115111,"byte_end":115116,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115516,"byte_end":115521,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1087},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":148405,"byte_end":148414,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149658,"byte_end":149667,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150540,"byte_end":150549,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150736,"byte_end":150745,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151609,"byte_end":151623,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153247,"byte_end":153252,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154924,"byte_end":154929,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155433,"byte_end":155447,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155921,"byte_end":155935,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156353,"byte_end":156358,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156694,"byte_end":156699,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157028,"byte_end":157033,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157369,"byte_end":157374,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157614,"byte_end":157619,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157956,"byte_end":157965,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158135,"byte_end":158144,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159505,"byte_end":159518,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159713,"byte_end":159726,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161506,"byte_end":161517,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161780,"byte_end":161791,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161944,"byte_end":161955,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162166,"byte_end":162177,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162440,"byte_end":162451,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162604,"byte_end":162615,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162843,"byte_end":162856,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162959,"byte_end":162972,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163030,"byte_end":163043,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163749,"byte_end":163763,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164121,"byte_end":164135,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164370,"byte_end":164384,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164441,"byte_end":164454,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164738,"byte_end":164751,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165276,"byte_end":165290,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165759,"byte_end":165773,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166117,"byte_end":166131,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167184,"byte_end":167190,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167472,"byte_end":167478,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167577,"byte_end":167583,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167738,"byte_end":167744,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167881,"byte_end":167887,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171080,"byte_end":171083,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171968,"byte_end":171971,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":173809,"byte_end":173812,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":174145,"byte_end":174148,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":174588,"byte_end":174595,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":175185,"byte_end":175192,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":175539,"byte_end":175547,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":176941,"byte_end":176950,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":186694,"byte_end":186705,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189189,"byte_end":189192,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189364,"byte_end":189367,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189700,"byte_end":189703,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":191123,"byte_end":191126,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":194766,"byte_end":194769,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":199930,"byte_end":199943,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200049,"byte_end":200062,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200103,"byte_end":200116,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200407,"byte_end":200420,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200804,"byte_end":200809,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":201324,"byte_end":201327,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":202339,"byte_end":202353,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":203501,"byte_end":203504,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":203726,"byte_end":203729,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":204214,"byte_end":204223,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205117,"byte_end":205120,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205420,"byte_end":205423,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205536,"byte_end":205539,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205769,"byte_end":205772,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206065,"byte_end":206080,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206690,"byte_end":206693,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206866,"byte_end":206869,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":213323,"byte_end":213331,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":213670,"byte_end":213678,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":214485,"byte_end":214486,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":214523,"byte_end":214529,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":216472,"byte_end":216473,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":217522,"byte_end":217530,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":223208,"byte_end":223223,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":223378,"byte_end":223379,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":232174,"byte_end":232179,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1188,"byte_end":1193,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1216,"byte_end":1220,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":612}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1231,"byte_end":1235,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":701}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75495,"byte_end":75505,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":702}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1460}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1368,"byte_end":1377,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1533}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1594}},{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1596,"byte_end":1603,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1982}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2070},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2143},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":28591},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2143},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2158},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2171},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2185},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9554,"byte_end":9558,"line_start":101,"line_end":101,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":194}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9561,"byte_end":9570,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":194}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1455},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10640,"byte_end":10648,"line_start":141,"line_end":141,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":2231}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11314,"byte_end":11327,"line_start":161,"line_end":161,"column_start":35,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2231},"to":{"krate":0,"index":2240}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13427,"byte_end":13445,"line_start":233,"line_end":233,"column_start":23,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2301},"to":{"krate":0,"index":2244}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13448,"byte_end":13461,"line_start":233,"line_end":233,"column_start":44,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":2231},"to":{"krate":0,"index":2244}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14219,"byte_end":14228,"line_start":258,"line_end":258,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2244},"to":{"krate":0,"index":2253}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14231,"byte_end":14252,"line_start":258,"line_end":258,"column_start":43,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":2240},"to":{"krate":0,"index":2253}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14578,"byte_end":14586,"line_start":270,"line_end":270,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2331}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15908,"byte_end":15917,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2276}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16186,"byte_end":16190,"line_start":337,"line_end":337,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":233}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16885,"byte_end":16889,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17101,"byte_end":17105,"line_start":374,"line_end":374,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2276},"to":{"krate":0,"index":2290}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17108,"byte_end":17127,"line_start":374,"line_end":374,"column_start":39,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":2262},"to":{"krate":0,"index":2290}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17928,"byte_end":17932,"line_start":409,"line_end":409,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2276},"to":{"krate":0,"index":2301}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17935,"byte_end":17943,"line_start":409,"line_end":409,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":194},"to":{"krate":0,"index":2301}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18536,"byte_end":18545,"line_start":432,"line_end":432,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2312}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2312}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19664,"byte_end":19673,"line_start":484,"line_end":484,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2320}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20186,"byte_end":20195,"line_start":500,"line_end":500,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2331}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20512,"byte_end":20525,"line_start":513,"line_end":513,"column_start":34,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2320},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20528,"byte_end":20537,"line_start":513,"line_end":513,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":2331},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2320}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":15,"index":139},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"kind":{"Impl":{"id":24}},"from":{"krate":15,"index":139},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":15,"index":139},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6138},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22481,"byte_end":22490,"line_start":590,"line_end":590,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24853,"byte_end":24862,"line_start":681,"line_end":681,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2217},"to":{"krate":0,"index":2354}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":364},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":15,"index":139},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":6138},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2364},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2364},"to":{"krate":0,"index":2511}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":492},"to":{"krate":0,"index":488}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2402},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":536},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":194}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2231}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2240}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2476},"to":{"krate":0,"index":233}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2301}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62936,"byte_end":62940,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2276},"to":{"krate":0,"index":2511}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63408,"byte_end":63415,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":2511},"to":{"krate":0,"index":2529}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63828,"byte_end":63832,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":2276},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63835,"byte_end":63844,"line_start":50,"line_end":50,"column_start":26,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2331},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64561,"byte_end":64566,"line_start":69,"line_end":69,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":623},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64569,"byte_end":64576,"line_start":69,"line_end":69,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2276}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2511}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2529}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":627}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69597,"byte_end":69603,"line_start":258,"line_end":258,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":627},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":664}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71978,"byte_end":71986,"line_start":341,"line_end":341,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3496},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":825},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93762,"byte_end":93767,"line_start":604,"line_end":604,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":7185},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93770,"byte_end":93780,"line_start":604,"line_end":604,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2077},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93783,"byte_end":93786,"line_start":604,"line_end":604,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1596},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93808,"byte_end":93815,"line_start":604,"line_end":604,"column_start":67,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93818,"byte_end":93823,"line_start":604,"line_end":604,"column_start":77,"column_end":82},"kind":"SuperTrait","from":{"krate":2,"index":2164},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":845},"to":{"krate":0,"index":843}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93981,"byte_end":93988,"line_start":612,"line_end":612,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":843},"to":{"krate":0,"index":846}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93991,"byte_end":93995,"line_start":612,"line_end":612,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":846}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103884,"byte_end":103888,"line_start":44,"line_end":44,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":886}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103891,"byte_end":103898,"line_start":44,"line_end":44,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":886}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103901,"byte_end":103905,"line_start":44,"line_end":44,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":6827},"to":{"krate":0,"index":886}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103908,"byte_end":103911,"line_start":44,"line_end":44,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2066},"to":{"krate":0,"index":886}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":103919,"byte_end":103924,"line_start":44,"line_end":44,"column_start":65,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":7185},"to":{"krate":0,"index":886}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105086,"byte_end":105095,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105476,"byte_end":105485,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2634},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":105577,"byte_end":105586,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2634},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106116,"byte_end":106125,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":106617,"byte_end":106626,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2667},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107453,"byte_end":107457,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2700},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":107614,"byte_end":107618,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108125,"byte_end":108129,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":108309,"byte_end":108313,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112489,"byte_end":112494,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":112905,"byte_end":112910,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":114729,"byte_end":114734,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115111,"byte_end":115116,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":115516,"byte_end":115521,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":148405,"byte_end":148414,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149658,"byte_end":149667,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150540,"byte_end":150549,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150736,"byte_end":150745,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151609,"byte_end":151623,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153247,"byte_end":153252,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154924,"byte_end":154929,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155433,"byte_end":155447,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155921,"byte_end":155935,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1207},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156353,"byte_end":156358,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156694,"byte_end":156699,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157028,"byte_end":157033,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157369,"byte_end":157374,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157614,"byte_end":157619,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157811,"byte_end":157815,"line_start":1709,"line_end":1709,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157956,"byte_end":157965,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2634},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158135,"byte_end":158144,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2667},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159505,"byte_end":159518,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159713,"byte_end":159726,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161506,"byte_end":161517,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2725},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161780,"byte_end":161791,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2725},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161944,"byte_end":161955,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2725},"to":{"krate":2,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162166,"byte_end":162177,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2735},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162440,"byte_end":162451,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2735},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162604,"byte_end":162615,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2735},"to":{"krate":2,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162843,"byte_end":162856,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162959,"byte_end":162972,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163030,"byte_end":163043,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163749,"byte_end":163763,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164121,"byte_end":164135,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164370,"byte_end":164384,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164441,"byte_end":164454,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164738,"byte_end":164751,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2745},"to":{"krate":0,"index":233}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165276,"byte_end":165290,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165759,"byte_end":165773,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":3671}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166117,"byte_end":166131,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167184,"byte_end":167190,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167472,"byte_end":167478,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1455},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167577,"byte_end":167583,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1455},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167738,"byte_end":167744,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1455},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":167881,"byte_end":167887,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171080,"byte_end":171083,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":171968,"byte_end":171971,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":173809,"byte_end":173812,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":174145,"byte_end":174148,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":174588,"byte_end":174595,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1511},"to":{"krate":2,"index":7144}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":175185,"byte_end":175192,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":175539,"byte_end":175547,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":176941,"byte_end":176950,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":186694,"byte_end":186705,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189189,"byte_end":189192,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189364,"byte_end":189367,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":189700,"byte_end":189703,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":191123,"byte_end":191126,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":194766,"byte_end":194769,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":199930,"byte_end":199943,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2919},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200049,"byte_end":200062,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2919},"to":{"krate":2,"index":1543}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200103,"byte_end":200116,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200407,"byte_end":200420,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2919},"to":{"krate":0,"index":233}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":200804,"byte_end":200809,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":201324,"byte_end":201327,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2276}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":202339,"byte_end":202353,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1734},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":203501,"byte_end":203504,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":203726,"byte_end":203729,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":204214,"byte_end":204223,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2935},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205117,"byte_end":205120,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2320}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205420,"byte_end":205423,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205536,"byte_end":205539,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":205769,"byte_end":205772,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2875},"to":{"krate":2,"index":1784}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206065,"byte_end":206080,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206690,"byte_end":206693,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2331}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":206866,"byte_end":206869,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2875},"to":{"krate":0,"index":2312}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":213323,"byte_end":213331,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":213670,"byte_end":213678,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1861},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":214254,"byte_end":214262,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3496},"to":{"krate":0,"index":1868}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":214485,"byte_end":214486,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1871},"to":{"krate":0,"index":1868}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":214523,"byte_end":214529,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":215625,"byte_end":215633,"line_start":2,"line_end":2,"column_start":26,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3496},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":216472,"byte_end":216473,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":1879}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":217522,"byte_end":217530,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":223208,"byte_end":223223,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1937},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":223378,"byte_end":223379,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1945},"to":{"krate":0,"index":1933}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":232174,"byte_end":232179,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":949},"to":{"krate":0,"index":2354}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3012},"to":{"krate":0,"index":2032}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3018},"to":{"krate":0,"index":2032}}]}