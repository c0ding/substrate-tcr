{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","structopt","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=c94e62d9c05148e0","-C","extra-filename=-c94e62d9c05148e0","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","clap=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libclap-8a228b1c137f9140.rmeta","--extern","structopt_derive=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libstructopt_derive-c9de91d6b8133a34.so","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libstructopt-c94e62d9c05148e0.rmeta"},"prelude":{"crate_id":{"name":"structopt","disambiguator":[1316257776196331670,11410960300665164527]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":15,"id":{"name":"structopt_derive","disambiguator":[12992808018732597374,11688590549296177945]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":16,"id":{"name":"clap","disambiguator":[4977817315541983143,6901675466079910569]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":17,"id":{"name":"ansi_term","disambiguator":[9819913345682989873,10062576857704277626]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":18,"id":{"name":"atty","disambiguator":[14217871771669964672,4861988298973108031]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":20,"id":{"name":"bitflags","disambiguator":[9340664076222530294,51613304757616664]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":21,"id":{"name":"strsim","disambiguator":[15440428001706543585,13076899121476973682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":22,"id":{"name":"textwrap","disambiguator":[14884581818357548317,10270059613263812025]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":23,"id":{"name":"unicode_width","disambiguator":[13347773958005608665,15425215024446881574]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","num":24,"id":{"name":"vec_map","disambiguator":[2044960973838704500,1542659272014904579]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":370,"byte_end":26639,"line_start":9,"line_end":762,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25053,"byte_end":25054,"line_start":713,"line_end":713,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25112,"byte_end":25116,"line_start":718,"line_end":718,"column_start":9,"column_end":13},"alias_span":null,"name":"clap","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":370,"byte_end":26639,"line_start":9,"line_end":762,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" This crate defines the `StructOpt` trait and its custom derive.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":370,"byte_end":392,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25189,"byte_end":25198,"line_start":721,"line_end":721,"column_start":11,"column_end":20},"name":"StructOpt","qualname":"::StructOpt","value":"StructOpt","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" A struct that is converted from command line arguments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25255,"byte_end":25259,"line_start":723,"line_end":723,"column_start":8,"column_end":12},"name":"clap","qualname":"::StructOpt::clap","value":"fn <'a, 'b> () -> clap::App<'a, 'b>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Returns the corresponding `clap::App`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25430,"byte_end":25439,"line_start":727,"line_end":727,"column_start":8,"column_end":17},"name":"from_clap","qualname":"::StructOpt::from_clap","value":"fn (matches: &clap::ArgMatches<'_>) -> Self","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Creates the struct from `clap::ArgMatches`.  It cannot fail\n with a parameter generated by `clap` by construction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25620,"byte_end":25629,"line_start":731,"line_end":731,"column_start":8,"column_end":17},"name":"from_args","qualname":"::StructOpt::from_args","value":"fn () -> Self","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Gets the struct from the command line arguments.  Print the\n error message and quit the program in case of failure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":25891,"byte_end":25900,"line_start":740,"line_end":740,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::StructOpt::from_iter","value":"fn <I> (iter: I) -> Self","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.\n Print the error message and quit the program in case of failure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.3.3/src/lib.rs","byte_start":26401,"byte_end":26415,"line_start":754,"line_end":754,"column_start":8,"column_end":22},"name":"from_iter_safe","qualname":"::StructOpt::from_iter_safe","value":"fn <I> (iter: I) -> Result<Self, clap::Error>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}