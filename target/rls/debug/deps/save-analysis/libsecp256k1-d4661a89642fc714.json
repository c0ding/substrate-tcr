{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","secp256k1","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=d4661a89642fc714","-C","extra-filename=-d4661a89642fc714","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","arrayref=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libarrayref-dcc778b1fcd8a026.rmeta","--extern","digest=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libdigest-23f67715f96a4c54.rmeta","--extern","hmac_drbg=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libhmac_drbg-c8ec805a2fe94e74.rmeta","--extern","rand=/home/gautam/code/substrate-tcr/target/rls/debug/deps/librand-3c40189c68988c81.rmeta","--extern","sha2=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsha2-a749fc05378726e3.rmeta","--extern","subtle=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsubtle-d94892f2666982ce.rmeta","--extern","typenum=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libtypenum-6a95f841168bdfe8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsecp256k1-d4661a89642fc714.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[16767817957600293,14038927935450188385]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","num":15,"id":{"name":"subtle","disambiguator":[9959427836840421736,15689668423590451970]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":16,"id":{"name":"sha2","disambiguator":[2997455294521593121,7331961450729204861]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":17,"id":{"name":"block_buffer","disambiguator":[8019630972046669350,11026957765241237542]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":18,"id":{"name":"byteorder","disambiguator":[4550665113768483084,8114487136530570366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":19,"id":{"name":"block_padding","disambiguator":[17128047456134656798,7750736192512680458]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":20,"id":{"name":"byte_tools","disambiguator":[13284303416580267306,6672964497037622010]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":21,"id":{"name":"generic_array","disambiguator":[14550314689580146068,6678877153218097606]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":22,"id":{"name":"typenum","disambiguator":[12989350392175717619,11979469666288565117]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":23,"id":{"name":"fake_simd","disambiguator":[2803358426376781075,563183322539143633]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":24,"id":{"name":"opaque_debug","disambiguator":[4066210372712447704,12959402483192229152]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","num":25,"id":{"name":"digest","disambiguator":[10177543274840385639,2242018114672693210]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":26,"id":{"name":"hmac_drbg","disambiguator":[6224864754120238322,9360215309172805506]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":27,"id":{"name":"hmac","disambiguator":[13933871161285699913,9382355754254772759]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":28,"id":{"name":"crypto_mac","disambiguator":[17662922819611798760,610220481490235648]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":29,"id":{"name":"subtle","disambiguator":[7464567191336452347,17239592767782378322]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":30,"id":{"name":"arrayref","disambiguator":[14116601321338732274,10294394777884855175]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":31,"id":{"name":"rand","disambiguator":[7431626035600045770,17290284716738379003]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":32,"id":{"name":"rand_jitter","disambiguator":[6451646135398449223,6501684162120109188]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":33,"id":{"name":"rand_core","disambiguator":[5522200777290017131,14411151888041535748]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":34,"id":{"name":"rand_os","disambiguator":[7912927106295799984,276851132822879996]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":35,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":36,"id":{"name":"rand_isaac","disambiguator":[4880938628404110112,2018659310470220914]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":37,"id":{"name":"rand_core","disambiguator":[9444740340015584135,12250349579860208745]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":38,"id":{"name":"rand_chacha","disambiguator":[8025723348719059612,15263650628092894135]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":39,"id":{"name":"rand_hc","disambiguator":[7425780177675667112,13584547259450403268]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":40,"id":{"name":"rand_pcg","disambiguator":[14465884768278281200,9331134813183132506]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","num":41,"id":{"name":"rand_xorshift","disambiguator":[15986133743910448269,9205213345226530241]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":0,"byte_end":18896,"line_start":1,"line_end":636,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":812,"byte_end":817,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":889,"byte_end":894,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":923,"byte_end":929,"line_start":39,"line_end":39,"column_start":28,"column_end":34},"alias_span":null,"name":"Affine","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":931,"byte_end":939,"line_start":39,"line_end":39,"column_start":36,"column_end":44},"alias_span":null,"name":"Jacobian","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":941,"byte_end":954,"line_start":39,"line_end":39,"column_start":46,"column_end":59},"alias_span":null,"name":"AffineStorage","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":956,"byte_end":964,"line_start":39,"line_end":39,"column_start":61,"column_end":69},"alias_span":null,"name":"AFFINE_G","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":966,"byte_end":973,"line_start":39,"line_end":39,"column_start":71,"column_end":78},"alias_span":null,"name":"CURVE_B","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1003,"byte_end":1009,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1040,"byte_end":1053,"line_start":42,"line_end":42,"column_start":29,"column_end":42},"alias_span":null,"name":"ECMultContext","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1055,"byte_end":1071,"line_start":42,"line_end":42,"column_start":44,"column_end":60},"alias_span":null,"name":"ECMultGenContext","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1101,"byte_end":1115,"line_start":43,"line_end":43,"column_start":29,"column_end":43},"alias_span":null,"name":"ECMULT_CONTEXT","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1117,"byte_end":1135,"line_start":43,"line_end":43,"column_start":45,"column_end":63},"alias_span":null,"name":"ECMULT_GEN_CONTEXT","value":"","parent":{"krate":0,"index":406}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":62,"line_end":62,"column_start":28,"column_end":43},"alias_span":null,"name":"AFFINE_INFINITY","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1808,"byte_end":1825,"line_start":62,"line_end":62,"column_start":45,"column_end":62},"alias_span":null,"name":"JACOBIAN_INFINITY","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1854,"byte_end":1871,"line_start":63,"line_end":63,"column_start":28,"column_end":45},"alias_span":null,"name":"set_table_gej_var","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1873,"byte_end":1894,"line_start":63,"line_end":63,"column_start":47,"column_end":68},"alias_span":null,"name":"globalz_set_table_gej","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1925,"byte_end":1933,"line_start":64,"line_end":64,"column_start":29,"column_end":37},"alias_span":null,"name":"WINDOW_A","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1935,"byte_end":1943,"line_start":64,"line_end":64,"column_start":39,"column_end":47},"alias_span":null,"name":"WINDOW_G","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1945,"byte_end":1964,"line_start":64,"line_end":64,"column_start":49,"column_end":68},"alias_span":null,"name":"ECMULT_TABLE_SIZE_A","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1966,"byte_end":1985,"line_start":64,"line_end":64,"column_start":70,"column_end":89},"alias_span":null,"name":"ECMULT_TABLE_SIZE_G","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2015,"byte_end":2034,"line_start":65,"line_end":65,"column_start":29,"column_end":48},"alias_span":null,"name":"odd_multiples_table","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2062,"byte_end":2076,"line_start":67,"line_end":67,"column_start":25,"column_end":39},"alias_span":null,"name":"SignatureArray","value":"","parent":{"krate":0,"index":420}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":0,"byte_end":18896,"line_start":1,"line_end":636,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":110},{"krate":0,"index":171},{"krate":0,"index":272},{"krate":0,"index":317},{"krate":0,"index":334},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":420},{"krate":0,"index":667},{"krate":0,"index":677},{"krate":0,"index":675},{"krate":0,"index":673},{"krate":0,"index":670},{"krate":0,"index":679},{"krate":0,"index":689},{"krate":0,"index":687},{"krate":0,"index":685},{"krate":0,"index":682},{"krate":0,"index":691},{"krate":0,"index":701},{"krate":0,"index":699},{"krate":0,"index":697},{"krate":0,"index":694},{"krate":0,"index":703},{"krate":0,"index":714},{"krate":0,"index":712},{"krate":0,"index":711},{"krate":0,"index":709},{"krate":0,"index":706},{"krate":0,"index":716},{"krate":0,"index":726},{"krate":0,"index":724},{"krate":0,"index":722},{"krate":0,"index":719},{"krate":0,"index":728},{"krate":0,"index":740},{"krate":0,"index":738},{"krate":0,"index":735},{"krate":0,"index":732},{"krate":0,"index":445},{"krate":0,"index":452},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":521},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546}],"decl_id":null,"docs":" Pure Rust implementation of the secp256k1 curve and fast ECDSA\n signatures. The secp256k1 curve is used excusively in Bitcoin and\n Ethereum alike cryptocurrencies.\n","sig":null,"attributes":[{"value":"deny(unused_import_braces, unused_imports, unused_comparisons,\n       unused_must_use, unused_variables, non_shorthand_field_patterns,\n       unreachable_code, unused_parens)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":175,"byte_end":363,"line_start":5,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":20437,"byte_end":20442,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Field element for secp256k1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":20565,"byte_end":20568,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Field>::new","value":"fn (d7: u32, d6: u32, d5: u32, d4: u32, d3: u32, d2: u32, d1: u32, d0: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":20736,"byte_end":20744,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Field>::from_int","value":"fn (a: u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":21942,"byte_end":21951,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Field>::normalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":23801,"byte_end":23815,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<Field>::normalize_weak","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalize a field element: reduce it magnitude to 1,\n but don't fully normalize.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":24853,"byte_end":24866,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"normalize_var","qualname":"<Field>::normalize_var","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize a field element, without constant-time guarantee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":26892,"byte_end":26910,"line_start":240,"line_end":240,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<Field>::normalizes_to_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":28294,"byte_end":28316,"line_start":277,"line_end":277,"column_start":12,"column_end":34},"name":"normalizes_to_zero_var","qualname":"<Field>::normalizes_to_zero_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element represents zero i.e. would\n normalize to a zero value. The field implementation may\n optionally normalize the input, but this should not be relied\n upon.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":29838,"byte_end":29845,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Field>::set_int","value":"fn (&mut self, a: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to a small integer. Resulting field\n element is normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":30125,"byte_end":30132,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Field>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify whether a field element is zero. Requires the input to\n be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":30480,"byte_end":30486,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Field>::is_odd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check the \"oddness\" of a field element. Requires the input to\n be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":30704,"byte_end":30709,"line_start":353,"line_end":353,"column_start":12,"column_end":17},"name":"clear","qualname":"<Field>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element equal to zero, initializing all fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":30995,"byte_end":31002,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Field>::set_b32","value":"fn (&mut self, a: &[u8; 32]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to 32-byte big endian value. If\n successful, the resulting field element is normalized.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":30972,"byte_end":30983,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":32643,"byte_end":32651,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Field>::fill_b32","value":"fn (&self, r: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":34641,"byte_end":34644,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"b32","qualname":"<Field>::b32","value":"fn (&self) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Convert a field element to a 32-byte big endian\n value. Requires the input to be normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":34940,"byte_end":34952,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Field>::neg_in_place","value":"fn (&mut self, other: &Field, m: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a field element equal to the additive inverse of\n another. Takes a maximum magnitude of the input as an\n argument. The magnitude of the output is one higher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":35776,"byte_end":35779,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"neg","qualname":"<Field>::neg","value":"fn (&self, m: u32) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":36042,"byte_end":36049,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"mul_int","qualname":"<Field>::mul_int","value":"fn (&mut self, a: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the passed field element with a small integer\n constant. Multiplies the magnitude by that small integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":36513,"byte_end":36520,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"cmp_var","qualname":"<Field>::cmp_var","value":"fn (&self, other: &Field) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Compare two field elements. Requires both inputs to be\n normalized.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":37047,"byte_end":37053,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"eq_var","qualname":"<Field>::eq_var","value":"fn (&self, other: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":73255,"byte_end":73267,"line_start":1151,"line_end":1151,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Field>::mul_in_place","value":"fn (&mut self, a: &Field, b: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the product of two others. Requires\n the inputs' magnitudes to be at most 8. The output magnitude\n is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":73789,"byte_end":73801,"line_start":1165,"line_end":1165,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Field>::sqr_in_place","value":"fn (&mut self, a: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the square of another. Requires the\n input's magnitude to be at most 8. The output magnitude is 1\n (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":74043,"byte_end":74046,"line_start":1174,"line_end":1174,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Field>::sqr","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":74521,"byte_end":74525,"line_start":1186,"line_end":1186,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Field>::sqrt","value":"fn (&self) -> (Field, bool)","parent":null,"children":[],"decl_id":null,"docs":" If a has a square root, it is computed in r and 1 is\n returned. If a does not have a square root, the root of its\n negation is computed and 0 is returned. The input's magnitude\n can be at most 8. The output magnitude is 1 (but not\n guaranteed to be normalized). The result in r will always be a\n square itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":76244,"byte_end":76247,"line_start":1266,"line_end":1266,"column_start":12,"column_end":15},"name":"inv","qualname":"<Field>::inv","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Sets a field element to be the (modular) inverse of\n another. Requires the input's magnitude to be at most 8. The\n output magnitude is 1 (but not guaranteed to be normalized).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":77948,"byte_end":77955,"line_start":1349,"line_end":1349,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Field>::inv_var","value":"fn (&self) -> Field","parent":null,"children":[],"decl_id":null,"docs":" Potentially faster version of secp256k1_fe_inv, without\n constant-time guarantee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":78074,"byte_end":78085,"line_start":1354,"line_end":1354,"column_start":12,"column_end":23},"name":"is_quad_var","qualname":"<Field>::is_quad_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a field element is a quadratic residue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":78257,"byte_end":78261,"line_start":1361,"line_end":1361,"column_start":12,"column_end":16},"name":"cmov","qualname":"<Field>::cmov","value":"fn (&mut self, other: &Field, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81570,"byte_end":81582,"line_start":1486,"line_end":1486,"column_start":12,"column_end":24},"name":"FieldStorage","qualname":"::field::FieldStorage","value":"","parent":null,"children":[],"decl_id":null,"docs":" Compact field element storage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81735,"byte_end":81738,"line_start":1495,"line_end":1495,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldStorage>::new","value":"fn (d7: u32, d6: u32, d5: u32, d4: u32, d3: u32, d2: u32, d1: u32, d0: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81914,"byte_end":81918,"line_start":1501,"line_end":1501,"column_start":12,"column_end":16},"name":"cmov","qualname":"<FieldStorage>::cmov","value":"fn (&mut self, other: &FieldStorage, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":570},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84668,"byte_end":84674,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Affine","qualname":"::group::Affine","value":"Affine { x, y, infinity }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in affine coordinates.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84685,"byte_end":84686,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Affine::x","value":"field::Field","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":572},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84703,"byte_end":84704,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Affine::y","value":"field::Field","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":573},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84721,"byte_end":84729,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Affine::infinity","value":"bool","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84859,"byte_end":84867,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Jacobian","qualname":"::group::Jacobian","value":"Jacobian { x, y, z, infinity }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" A group element of the secp256k1 curve, in jacobian coordinates.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":584},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84878,"byte_end":84879,"line_start":45,"line_end":45,"column_start":9,"column_end":10},"name":"x","qualname":"::group::Jacobian::x","value":"field::Field","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":585},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84896,"byte_end":84897,"line_start":46,"line_end":46,"column_start":9,"column_end":10},"name":"y","qualname":"::group::Jacobian::y","value":"field::Field","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":586},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84914,"byte_end":84915,"line_start":47,"line_end":47,"column_start":9,"column_end":10},"name":"z","qualname":"::group::Jacobian::z","value":"field::Field","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":587},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":84932,"byte_end":84940,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"infinity","qualname":"::group::Jacobian::infinity","value":"bool","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85054,"byte_end":85067,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"AffineStorage","qualname":"::group::AffineStorage","value":"AffineStorage { x, y }","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"decl_id":null,"docs":" Affine coordinate group element compact storage.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":598},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85078,"byte_end":85079,"line_start":54,"line_end":54,"column_start":9,"column_end":10},"name":"x","qualname":"::group::AffineStorage::x","value":"field::FieldStorage","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":599},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85103,"byte_end":85104,"line_start":55,"line_end":55,"column_start":9,"column_end":10},"name":"y","qualname":"::group::AffineStorage::y","value":"field::FieldStorage","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":123},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85737,"byte_end":85752,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"AFFINE_INFINITY","qualname":"::group::AFFINE_INFINITY","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":124},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85897,"byte_end":85914,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"JACOBIAN_INFINITY","qualname":"::group::JACOBIAN_INFINITY","value":"Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":125},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86108,"byte_end":86116,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"AFFINE_G","qualname":"::group::AFFINE_G","value":"Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":126},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86427,"byte_end":86434,"line_start":112,"line_end":112,"column_start":11,"column_end":18},"name":"CURVE_B","qualname":"::group::CURVE_B","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86558,"byte_end":86564,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"set_xy","qualname":"<Affine>::set_xy","value":"fn (&mut self, x: &Field, y: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to the point with given X and Y\n coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86948,"byte_end":86957,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_xquad","qualname":"<Affine>::set_xquad","value":"fn (&mut self, x: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate and a Y coordinate that is a quadratic residue\n modulo p. The return value is true iff a coordinate with the\n given X coordinate exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":87446,"byte_end":87456,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"set_xo_var","qualname":"<Affine>::set_xo_var","value":"fn (&mut self, x: &Field, odd: bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (affine) equal to the point with the given\n X coordinate, and given oddness for Y. Return value indicates\n whether the result is valid.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":87785,"byte_end":87796,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Affine>::is_infinity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":87923,"byte_end":87935,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"is_valid_var","qualname":"<Affine>::is_valid_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is valid (i.e., on the curve).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":88264,"byte_end":88276,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Affine>::neg_in_place","value":"fn (&mut self, other: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":88420,"byte_end":88423,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"neg","qualname":"<Affine>::neg","value":"fn (&self) -> Affine","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":88639,"byte_end":88646,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"set_gej","qualname":"<Affine>::set_gej","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element equal to another which is given in\n jacobian coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":88949,"byte_end":88957,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"from_gej","qualname":"<Affine>::from_gej","value":"fn (a: &Jacobian) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":89072,"byte_end":89083,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"set_gej_var","qualname":"<Affine>::set_gej_var","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":89449,"byte_end":89461,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"set_gej_zinv","qualname":"<Affine>::set_gej_zinv","value":"fn (&mut self, a: &Jacobian, zi: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":89744,"byte_end":89749,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"clear","qualname":"<Affine>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_ge to prevent leaking sensitive information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":89858,"byte_end":89875,"line_start":239,"line_end":239,"column_start":8,"column_end":25},"name":"set_table_gej_var","qualname":"::group::set_table_gej_var","value":"fn (r: &mut [Affine], a: &[Jacobian], zr: &[Field]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":90244,"byte_end":90265,"line_start":257,"line_end":257,"column_start":8,"column_end":29},"name":"globalz_set_table_gej","qualname":"::group::globalz_set_table_gej","value":"fn (r: &mut [Affine], globalz: &mut Field, a: &[Jacobian], zr: &[Field]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":90921,"byte_end":90933,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"set_infinity","qualname":"<Jacobian>::set_infinity","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":91169,"byte_end":91175,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"set_ge","qualname":"<Jacobian>::set_ge","value":"fn (&mut self, a: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a group element (jacobian) equal to another which is given\n in affine coordinates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":91342,"byte_end":91349,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"from_ge","qualname":"<Jacobian>::from_ge","value":"fn (a: &Affine) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":91528,"byte_end":91536,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"eq_x_var","qualname":"<Jacobian>::eq_x_var","value":"fn (&self, x: &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare the X coordinate of a group element (jacobian).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":91857,"byte_end":91869,"line_start":318,"line_end":318,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Jacobian>::neg_in_place","value":"fn (&mut self, a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the inverse of a (i.e., mirrored around the X\n axis).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":92106,"byte_end":92109,"line_start":327,"line_end":327,"column_start":12,"column_end":15},"name":"neg","qualname":"<Jacobian>::neg","value":"fn (&self) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":92300,"byte_end":92311,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"is_infinity","qualname":"<Jacobian>::is_infinity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element is the point at infinity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":92446,"byte_end":92460,"line_start":339,"line_end":339,"column_start":12,"column_end":26},"name":"has_quad_y_var","qualname":"<Jacobian>::has_quad_y_var","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a group element's y coordinate is a quadratic residue.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":92800,"byte_end":92823,"line_start":351,"line_end":351,"column_start":12,"column_end":35},"name":"double_nonzero_in_place","qualname":"<Jacobian>::double_nonzero_in_place","value":"fn (&mut self, a: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0). a may\n not be zero. Constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":93109,"byte_end":93128,"line_start":358,"line_end":358,"column_start":12,"column_end":31},"name":"double_var_in_place","qualname":"<Jacobian>::double_var_in_place","value":"fn (&mut self, a: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the double of a. If rzr is not-NULL, r->z =\n a->z * *rzr (where infinity means an implicit z = 0).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":94038,"byte_end":94048,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"double_var","qualname":"<Jacobian>::double_var","value":"fn (&self, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":94340,"byte_end":94356,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"add_var_in_place","qualname":"<Jacobian>::add_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Jacobian, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b. If rzr is non-NULL, r->z =\n a->z * *rzr (a cannot be infinity in that case).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":95859,"byte_end":95866,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"add_var","qualname":"<Jacobian>::add_var","value":"fn (&self, b: &Jacobian, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":96150,"byte_end":96165,"line_start":461,"line_end":461,"column_start":12,"column_end":27},"name":"add_ge_in_place","qualname":"<Jacobian>::add_ge_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates, and not infinity).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":97943,"byte_end":97949,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"add_ge","qualname":"<Jacobian>::add_ge","value":"fn (&self, b: &Affine) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":98451,"byte_end":98470,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"add_ge_var_in_place","qualname":"<Jacobian>::add_ge_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine, rzr: Option<&mut Field>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with b given in affine\n coordinates). This is more efficient than\n secp256k1_gej_add_var. It is identical to secp256k1_gej_add_ge\n but without constant-time guarantee, and b is allowed to be\n infinity. If rzr is non-NULL, r->z = a->z * *rzr (a cannot be\n infinity in that case).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":99954,"byte_end":99964,"line_start":584,"line_end":584,"column_start":12,"column_end":22},"name":"add_ge_var","qualname":"<Jacobian>::add_ge_var","value":"fn (&self, b: &Affine, rzr: Option<&mut Field>) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":100250,"byte_end":100271,"line_start":592,"line_end":592,"column_start":12,"column_end":33},"name":"add_zinv_var_in_place","qualname":"<Jacobian>::add_zinv_var_in_place","value":"fn (&mut self, a: &Jacobian, b: &Affine, bzinv: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set r equal to the sum of a and b (with the inverse of b's Z\n coordinate passed as bzinv).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":101696,"byte_end":101708,"line_start":636,"line_end":636,"column_start":12,"column_end":24},"name":"add_zinv_var","qualname":"<Jacobian>::add_zinv_var","value":"fn (&mut self, b: &Affine, bzinv: &Field) -> Jacobian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":101966,"byte_end":101971,"line_start":644,"line_end":644,"column_start":12,"column_end":17},"name":"clear","qualname":"<Jacobian>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a secp256k1_gej to prevent leaking sensitive\n information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102191,"byte_end":102198,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Jacobian>::rescale","value":"fn (&mut self, s: &Field) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rescale a jacobian point by b which must be\n non-zero. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102954,"byte_end":102958,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"cmov","qualname":"<AffineStorage>::cmov","value":"fn (&mut self, a: &AffineStorage, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If flag is true, set *r equal to *a; otherwise leave\n it. Constant-time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":609},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104085,"byte_end":104091,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 256-bit scalar value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104274,"byte_end":104279,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"clear","qualname":"<Scalar>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a scalar to prevent the leak of sensitive data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104446,"byte_end":104453,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"set_int","qualname":"<Scalar>::set_int","value":"fn (&mut self, v: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar to an unsigned integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104586,"byte_end":104594,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"from_int","qualname":"<Scalar>::from_int","value":"fn (v: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scalar from an unsigned integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104814,"byte_end":104818,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"bits","qualname":"<Scalar>::bits","value":"fn (&self, offset: usize, count: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. All requested bits must belong to\n the same 32-bit limb.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":105071,"byte_end":105079,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"bits_var","qualname":"<Scalar>::bits_var","value":"fn (&self, offset: usize, count: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Access bits from a scalar. Not constant time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":107730,"byte_end":107742,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"add_in_place","qualname":"<Scalar>::add_in_place","value":"fn (&mut self, a: &Scalar, b: &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add two scalars together (modulo the group order). Returns\n whether it overflowed.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":107707,"byte_end":107718,"line_start":121,"line_end":121,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":109003,"byte_end":109011,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"cadd_bit","qualname":"<Scalar>::cadd_bit","value":"fn (&mut self, mut bit: usize, flag: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Conditionally add a power of two to a scalar. The result is\n not allowed to overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":110535,"byte_end":110542,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"set_b32","qualname":"<Scalar>::set_b32","value":"fn (&mut self, b32: &[u8; 32]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Set a scalar from a big endian byte array, return whether it overflowed.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":110512,"byte_end":110523,"line_start":173,"line_end":173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":111651,"byte_end":111654,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"b32","qualname":"<Scalar>::b32","value":"fn (&self) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":111814,"byte_end":111822,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"fill_b32","qualname":"<Scalar>::fill_b32","value":"fn (&self, bin: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convert a scalar to a byte array.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":113032,"byte_end":113039,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":113253,"byte_end":113265,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"neg_in_place","qualname":"<Scalar>::neg_in_place","value":"fn (&mut self, a: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the complement of a scalar (modulo the group order).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":114239,"byte_end":114242,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"neg","qualname":"<Scalar>::neg","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":114408,"byte_end":114414,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"is_one","qualname":"<Scalar>::is_one","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar equals one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":114650,"byte_end":114657,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether a scalar is higher than the group order divided\n by 2.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":115696,"byte_end":115708,"line_start":266,"line_end":266,"column_start":12,"column_end":24},"name":"cond_neg_mut","qualname":"<Scalar>::cond_neg_mut","value":"fn (&mut self, flag: bool) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Conditionally negate a number, in constant time. Returns -1 if\n the number was negated, 1 otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":130774,"byte_end":130786,"line_start":693,"line_end":693,"column_start":12,"column_end":24},"name":"mul_in_place","qualname":"<Scalar>::mul_in_place","value":"fn (&mut self, a: &Scalar, b: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":131058,"byte_end":131065,"line_start":701,"line_end":701,"column_start":12,"column_end":19},"name":"shr_int","qualname":"<Scalar>::shr_int","value":"fn (&mut self, n: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Shift a scalar right by some amount strictly between 0 and 16,\n returning the low bits that were shifted off.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":131743,"byte_end":131755,"line_start":717,"line_end":717,"column_start":12,"column_end":24},"name":"sqr_in_place","qualname":"<Scalar>::sqr_in_place","value":"fn (&mut self, a: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":131887,"byte_end":131890,"line_start":723,"line_end":723,"column_start":12,"column_end":15},"name":"sqr","qualname":"<Scalar>::sqr","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":132013,"byte_end":132025,"line_start":729,"line_end":729,"column_start":12,"column_end":24},"name":"inv_in_place","qualname":"<Scalar>::inv_in_place","value":"fn (&mut self, x: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":134905,"byte_end":134908,"line_start":875,"line_end":875,"column_start":12,"column_end":15},"name":"inv","qualname":"<Scalar>::inv","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135031,"byte_end":135038,"line_start":881,"line_end":881,"column_start":12,"column_end":19},"name":"inv_var","qualname":"<Scalar>::inv_var","value":"fn (&self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135095,"byte_end":135102,"line_start":885,"line_end":885,"column_start":12,"column_end":19},"name":"is_even","qualname":"<Scalar>::is_even","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":280},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":136919,"byte_end":136927,"line_start":5,"line_end":5,"column_start":11,"column_end":19},"name":"WINDOW_A","qualname":"::ecmult::WINDOW_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":281},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":136950,"byte_end":136958,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"WINDOW_G","qualname":"::ecmult::WINDOW_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":282},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":136982,"byte_end":137001,"line_start":7,"line_end":7,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_A","qualname":"::ecmult::ECMULT_TABLE_SIZE_A","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":283},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":137042,"byte_end":137061,"line_start":8,"line_end":8,"column_start":11,"column_end":30},"name":"ECMULT_TABLE_SIZE_G","qualname":"::ecmult::ECMULT_TABLE_SIZE_G","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":137197,"byte_end":137210,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"ECMultContext","qualname":"::ecmult::ECMultContext","value":"ECMultContext {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" Context for accelerating the computation of a*P + b*G.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":137329,"byte_end":137345,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"ECMultGenContext","qualname":"::ecmult::ECMultGenContext","value":"ECMultGenContext {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" Context for accelerating the computation of a*G.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":294},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":137470,"byte_end":137484,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"ECMULT_CONTEXT","qualname":"::ecmult::ECMULT_CONTEXT","value":"ECMultContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMult context.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":295},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":137598,"byte_end":137616,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"ECMULT_GEN_CONTEXT","qualname":"::ecmult::ECMULT_GEN_CONTEXT","value":"ECMultGenContext","parent":null,"children":[],"decl_id":null,"docs":" A static ECMultGen context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":138291,"byte_end":138310,"line_start":41,"line_end":41,"column_start":8,"column_end":27},"name":"odd_multiples_table","qualname":"::ecmult::odd_multiples_table","value":"fn (prej: &mut [Jacobian], zr: &mut [Field], a: &Jacobian) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":144181,"byte_end":144187,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"ecmult","qualname":"<ECMultContext>::ecmult","value":"fn (&self, r: &mut Jacobian, a: &Jacobian, na: &Scalar, ng: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":145424,"byte_end":145436,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"ecmult_const","qualname":"<ECMultContext>::ecmult_const","value":"fn (&self, r: &mut Jacobian, a: &Affine, scalar: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":147960,"byte_end":147970,"line_start":342,"line_end":342,"column_start":12,"column_end":22},"name":"ecmult_gen","qualname":"<ECMultGenContext>::ecmult_gen","value":"fn (&self, r: &mut Jacobian, gn: &Scalar) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":149081,"byte_end":149091,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"verify_raw","qualname":"<ECMultContext>::verify_raw","value":"fn (&self, sigr: &Scalar, sigs: &Scalar, pubkey: &Affine, message: &Scalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":150050,"byte_end":150061,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"recover_raw","qualname":"<ECMultContext>::recover_raw","value":"fn (&self, sigr: &Scalar, sigs: &Scalar, rec_id: u8, message: &Scalar) -> Result<Affine, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":151308,"byte_end":151316,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"sign_raw","qualname":"<ECMultGenContext>::sign_raw","value":"fn (&self, seckey: &Scalar, message: &Scalar, nonce: &Scalar) -> Result<(Scalar, Scalar, u8), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","byte_start":152481,"byte_end":152489,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"ecdh_raw","qualname":"<ECMultContext>::ecdh_raw","value":"fn (&self, point: &Affine, scalar: &Scalar) -> Option<[u8; 32]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":645},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153270,"byte_end":153286,"line_start":3,"line_end":3,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::error::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":647},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153292,"byte_end":153308,"line_start":4,"line_end":4,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::error::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153314,"byte_end":153330,"line_start":5,"line_end":5,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::error::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":651},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153336,"byte_end":153353,"line_start":6,"line_end":6,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::error::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153359,"byte_end":153373,"line_start":7,"line_end":7,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::error::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153379,"byte_end":153397,"line_start":8,"line_end":8,"column_start":5,"column_end":23},"name":"InvalidInputLength","qualname":"::error::Error::InvalidInputLength","value":"Error::InvalidInputLength","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":657},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153403,"byte_end":153418,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"TweakOutOfRange","qualname":"::error::Error::TweakOutOfRange","value":"Error::TweakOutOfRange","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":644},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/error.rs","byte_start":153258,"byte_end":153263,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{InvalidSignature, InvalidPublicKey, InvalidSecretKey, InvalidRecoveryId, InvalidMessage, InvalidInputLength, TweakOutOfRange}","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153538,"byte_end":153552,"line_start":7,"line_end":7,"column_start":12,"column_end":26},"name":"SignatureArray","qualname":"::der::SignatureArray","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153614,"byte_end":153617,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<SignatureArray>::new","value":"fn (size: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153708,"byte_end":153711,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"len","qualname":"<SignatureArray>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":406},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":855,"byte_end":860,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"curve","qualname":"::curve","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" Curve related structs.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":420},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1209,"byte_end":1213,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"util","qualname":"::util","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":438},{"krate":0,"index":444}],"decl_id":null,"docs":" Utilities to manipulate the secp256k1 curve parameters.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":421},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1230,"byte_end":1245,"line_start":48,"line_end":48,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_EVEN","qualname":"::util::TAG_PUBKEY_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1272,"byte_end":1286,"line_start":49,"line_end":49,"column_start":15,"column_end":29},"name":"TAG_PUBKEY_ODD","qualname":"::util::TAG_PUBKEY_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":423},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1313,"byte_end":1328,"line_start":50,"line_end":50,"column_start":15,"column_end":30},"name":"TAG_PUBKEY_FULL","qualname":"::util::TAG_PUBKEY_FULL","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":424},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1355,"byte_end":1377,"line_start":51,"line_end":51,"column_start":15,"column_end":37},"name":"TAG_PUBKEY_HYBRID_EVEN","qualname":"::util::TAG_PUBKEY_HYBRID_EVEN","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":425},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1404,"byte_end":1425,"line_start":52,"line_end":52,"column_start":15,"column_end":36},"name":"TAG_PUBKEY_HYBRID_ODD","qualname":"::util::TAG_PUBKEY_HYBRID_ODD","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":426},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1453,"byte_end":1465,"line_start":54,"line_end":54,"column_start":15,"column_end":27},"name":"MESSAGE_SIZE","qualname":"::util::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":427},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1493,"byte_end":1508,"line_start":55,"line_end":55,"column_start":15,"column_end":30},"name":"SECRET_KEY_SIZE","qualname":"::util::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":428},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1536,"byte_end":1555,"line_start":56,"line_end":56,"column_start":15,"column_end":34},"name":"RAW_PUBLIC_KEY_SIZE","qualname":"::util::RAW_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":429},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1583,"byte_end":1603,"line_start":57,"line_end":57,"column_start":15,"column_end":35},"name":"FULL_PUBLIC_KEY_SIZE","qualname":"::util::FULL_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":430},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1631,"byte_end":1657,"line_start":58,"line_end":58,"column_start":15,"column_end":41},"name":"COMPRESSED_PUBLIC_KEY_SIZE","qualname":"::util::COMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":431},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1685,"byte_end":1699,"line_start":59,"line_end":59,"column_start":15,"column_end":29},"name":"SIGNATURE_SIZE","qualname":"::util::SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":432},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":1727,"byte_end":1749,"line_start":60,"line_end":60,"column_start":15,"column_end":37},"name":"DER_MAX_SIGNATURE_SIZE","qualname":"::util::DER_MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2168,"byte_end":2177,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Public key on a secp256k1 curve.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2284,"byte_end":2293,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret key (256-bit) on a secp256k1 curve.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2377,"byte_end":2386,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature { r, s }","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" An ECDSA signature.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":692},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2397,"byte_end":2398,"line_start":79,"line_end":79,"column_start":9,"column_end":10},"name":"r","qualname":"::Signature::r","value":"scalar::Scalar","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2416,"byte_end":2417,"line_start":80,"line_end":80,"column_start":9,"column_end":10},"name":"s","qualname":"::Signature::s","value":"scalar::Scalar","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":703},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2538,"byte_end":2548,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Tag used for public key recovery from signatures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2652,"byte_end":2659,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hashed message input to an ECDSA signature.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2753,"byte_end":2765,"line_start":90,"line_end":90,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shared secret using ECDH.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":446},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2885,"byte_end":2895,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::PublicKeyFormat::Compressed","value":"PublicKeyFormat::Compressed","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Compressed public key, 33 bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":448},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2943,"byte_end":2947,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Full","qualname":"::PublicKeyFormat::Full","value":"PublicKeyFormat::Full","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Full length public key, 65 bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2987,"byte_end":2990,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"Raw","qualname":"::PublicKeyFormat::Raw","value":"PublicKeyFormat::Raw","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Raw public key, 64 bytes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":445},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":2822,"byte_end":2837,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"PublicKeyFormat","qualname":"::PublicKeyFormat","value":"PublicKeyFormat::{Compressed, Full, Raw}","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"decl_id":null,"docs":" Format for public key parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":3023,"byte_end":3038,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"fn (seckey: &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":3277,"byte_end":3288,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<PublicKey>::parse_slice","value":"fn (p: &[u8], format: Option<PublicKeyFormat>) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":4697,"byte_end":4702,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"parse","qualname":"<PublicKey>::parse","value":"fn (p: &[u8; util::FULL_PUBLIC_KEY_SIZE]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":5847,"byte_end":5863,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"parse_compressed","qualname":"<PublicKey>::parse_compressed","value":"fn (p: &[u8; util::COMPRESSED_PUBLIC_KEY_SIZE]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":6613,"byte_end":6622,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"fn (&self) -> [u8; util::FULL_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":7060,"byte_end":7080,"line_start":217,"line_end":217,"column_start":12,"column_end":32},"name":"serialize_compressed","qualname":"<PublicKey>::serialize_compressed","value":"fn (&self) -> [u8; util::COMPRESSED_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":7575,"byte_end":7591,"line_start":237,"line_end":237,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<PublicKey>::tweak_add_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":7978,"byte_end":7994,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<PublicKey>::tweak_mul_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8387,"byte_end":8394,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"fn (keys: &[PublicKey]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8862,"byte_end":8867,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"parse","qualname":"<SecretKey>::parse","value":"fn (p: &[u8; util::SECRET_KEY_SIZE]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":9140,"byte_end":9151,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<SecretKey>::parse_slice","value":"fn (p: &[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":9401,"byte_end":9407,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey>::random","value":"fn <R> (rng: &mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":9703,"byte_end":9712,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"serialize","qualname":"<SecretKey>::serialize","value":"fn (&self) -> [u8; util::SECRET_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":9792,"byte_end":9808,"line_start":324,"line_end":324,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<SecretKey>::tweak_add_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10034,"byte_end":10050,"line_start":333,"line_end":333,"column_start":12,"column_end":28},"name":"tweak_mul_assign","qualname":"<SecretKey>::tweak_mul_assign","value":"fn (&mut self, tweak: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10255,"byte_end":10258,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"inv","qualname":"<SecretKey>::inv","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10986,"byte_end":10991,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"parse","qualname":"<Signature>::parse","value":"fn (p: &[u8; util::SIGNATURE_SIZE]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":11305,"byte_end":11316,"line_start":385,"line_end":385,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Signature>::parse_slice","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":11587,"byte_end":11596,"line_start":395,"line_end":395,"column_start":12,"column_end":21},"name":"parse_der","qualname":"<Signature>::parse_der","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":12404,"byte_end":12417,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"parse_der_lax","qualname":"<Signature>::parse_der_lax","value":"fn (p: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":13909,"byte_end":13920,"line_start":448,"line_end":448,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":14066,"byte_end":14075,"line_start":456,"line_end":456,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Signature>::serialize","value":"fn (&self) -> [u8; util::SIGNATURE_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":14285,"byte_end":14298,"line_start":463,"line_end":463,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"fn (&self) -> der::SignatureArray","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":15558,"byte_end":15563,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"parse","qualname":"<Message>::parse","value":"fn (p: &[u8; util::MESSAGE_SIZE]) -> Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":15756,"byte_end":15767,"line_start":514,"line_end":514,"column_start":12,"column_end":23},"name":"parse_slice","qualname":"<Message>::parse_slice","value":"fn (p: &[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16032,"byte_end":16041,"line_start":524,"line_end":524,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Message>::serialize","value":"fn (&self) -> [u8; util::MESSAGE_SIZE]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16181,"byte_end":16186,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"parse","qualname":"<RecoveryId>::parse","value":"fn (p: u8) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse recovery ID starting with 0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16429,"byte_end":16438,"line_start":540,"line_end":540,"column_start":12,"column_end":21},"name":"parse_rpc","qualname":"<RecoveryId>::parse_rpc","value":"fn (p: u8) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse recovery ID as Ethereum RPC format, starting with 27.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16637,"byte_end":16646,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"serialize","qualname":"<RecoveryId>::serialize","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16888,"byte_end":16891,"line_start":566,"line_end":566,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn (pubkey: &PublicKey, seckey: &SecretKey) -> Result<SharedSecret, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17495,"byte_end":17501,"line_start":592,"line_end":592,"column_start":8,"column_end":14},"name":"verify","qualname":"::verify","value":"fn (message: &Message, signature: &Signature, pubkey: &PublicKey) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check signature is a valid message signed by public key.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17711,"byte_end":17718,"line_start":597,"line_end":597,"column_start":8,"column_end":15},"name":"recover","qualname":"::recover","value":"fn (message: &Message, signature: &Signature, recovery_id: &RecoveryId) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Recover public key from a signed message.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17976,"byte_end":17980,"line_start":602,"line_end":602,"column_start":8,"column_end":12},"name":"sign","qualname":"::sign","value":"fn (message: &Message, seckey: &SecretKey) -> (Signature, RecoveryId)","parent":null,"children":[],"decl_id":null,"docs":" Sign a message using the secret key.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":20546,"byte_end":20551,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79117,"byte_end":79122,"line_start":1377,"line_end":1377,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79290,"byte_end":79295,"line_start":1387,"line_end":1387,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79691,"byte_end":79696,"line_start":1405,"line_end":1405,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80228,"byte_end":80233,"line_start":1424,"line_end":1424,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80342,"byte_end":80347,"line_start":1430,"line_end":1430,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80768,"byte_end":80773,"line_start":1448,"line_end":1448,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80960,"byte_end":80965,"line_start":1456,"line_end":1456,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81073,"byte_end":81078,"line_start":1462,"line_end":1462,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81239,"byte_end":81244,"line_start":1470,"line_end":1470,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81263,"byte_end":81268,"line_start":1472,"line_end":1472,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81375,"byte_end":81380,"line_start":1478,"line_end":1478,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81616,"byte_end":81628,"line_start":1488,"line_end":1488,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81709,"byte_end":81721,"line_start":1494,"line_end":1494,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":82507,"byte_end":82512,"line_start":1513,"line_end":1513,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":83240,"byte_end":83245,"line_start":1535,"line_end":1535,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85140,"byte_end":85146,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85326,"byte_end":85334,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85551,"byte_end":85564,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86451,"byte_end":86457,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":90828,"byte_end":90836,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102412,"byte_end":102418,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102581,"byte_end":102587,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102839,"byte_end":102852,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104122,"byte_end":104128,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104192,"byte_end":104198,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":120706,"byte_end":120712,"line_start":403,"line_end":403,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135181,"byte_end":135187,"line_start":890,"line_end":890,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135275,"byte_end":135281,"line_start":896,"line_end":896,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135729,"byte_end":135735,"line_start":914,"line_end":914,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135933,"byte_end":135939,"line_start":922,"line_end":922,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136050,"byte_end":136056,"line_start":928,"line_end":928,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136488,"byte_end":136494,"line_start":946,"line_end":946,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136684,"byte_end":136690,"line_start":954,"line_end":954,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":144154,"byte_end":144167,"line_start":231,"line_end":231,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":147930,"byte_end":147946,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":149054,"byte_end":149067,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":151278,"byte_end":151294,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","byte_start":152454,"byte_end":152467,"line_start":8,"line_end":8,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153586,"byte_end":153600,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153775,"byte_end":153789,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153880,"byte_end":153894,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":154027,"byte_end":154034,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":3000,"byte_end":3009,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":465},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8768,"byte_end":8777,"line_start":282,"line_end":282,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8839,"byte_end":8848,"line_start":288,"line_end":288,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10334,"byte_end":10343,"line_start":347,"line_end":347,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10800,"byte_end":10809,"line_start":361,"line_end":361,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10888,"byte_end":10897,"line_start":367,"line_end":367,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10963,"byte_end":10972,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":15537,"byte_end":15544,"line_start":504,"line_end":504,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16114,"byte_end":16124,"line_start":529,"line_end":529,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16704,"byte_end":16714,"line_start":553,"line_end":553,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16786,"byte_end":16796,"line_start":559,"line_end":559,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16862,"byte_end":16874,"line_start":565,"line_end":565,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17201,"byte_end":17213,"line_start":577,"line_end":577,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17287,"byte_end":17299,"line_start":583,"line_end":583,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":20546,"byte_end":20551,"line_start":56,"line_end":56,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79117,"byte_end":79122,"line_start":1377,"line_end":1377,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79290,"byte_end":79295,"line_start":1387,"line_end":1387,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":79691,"byte_end":79696,"line_start":1405,"line_end":1405,"column_start":35,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80228,"byte_end":80233,"line_start":1424,"line_end":1424,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80342,"byte_end":80347,"line_start":1430,"line_end":1430,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80768,"byte_end":80773,"line_start":1448,"line_end":1448,"column_start":35,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":80960,"byte_end":80965,"line_start":1456,"line_end":1456,"column_start":27,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81073,"byte_end":81078,"line_start":1462,"line_end":1462,"column_start":20,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81239,"byte_end":81244,"line_start":1470,"line_end":1470,"column_start":13,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81263,"byte_end":81268,"line_start":1472,"line_end":1472,"column_start":14,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81375,"byte_end":81380,"line_start":1478,"line_end":1478,"column_start":21,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81616,"byte_end":81628,"line_start":1488,"line_end":1488,"column_start":18,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":81709,"byte_end":81721,"line_start":1494,"line_end":1494,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":82507,"byte_end":82512,"line_start":1513,"line_end":1513,"column_start":29,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/field.rs","byte_start":83240,"byte_end":83245,"line_start":1535,"line_end":1535,"column_start":29,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85140,"byte_end":85146,"line_start":58,"line_end":58,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85326,"byte_end":85334,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":85551,"byte_end":85564,"line_start":79,"line_end":79,"column_start":18,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":86451,"byte_end":86457,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":90828,"byte_end":90836,"line_start":282,"line_end":282,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102412,"byte_end":102418,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102581,"byte_end":102587,"line_start":672,"line_end":672,"column_start":30,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/group.rs","byte_start":102839,"byte_end":102852,"line_start":684,"line_end":684,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104122,"byte_end":104128,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":104192,"byte_end":104198,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":120706,"byte_end":120712,"line_start":403,"line_end":403,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135181,"byte_end":135187,"line_start":890,"line_end":890,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135275,"byte_end":135281,"line_start":896,"line_end":896,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135729,"byte_end":135735,"line_start":914,"line_end":914,"column_start":36,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":135933,"byte_end":135939,"line_start":922,"line_end":922,"column_start":28,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1629}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136050,"byte_end":136056,"line_start":928,"line_end":928,"column_start":22,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136488,"byte_end":136494,"line_start":946,"line_end":946,"column_start":36,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/scalar.rs","byte_start":136684,"byte_end":136690,"line_start":954,"line_end":954,"column_start":28,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":144154,"byte_end":144167,"line_start":231,"line_end":231,"column_start":6,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecmult/mod.rs","byte_start":147930,"byte_end":147946,"line_start":341,"line_end":341,"column_start":6,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":149054,"byte_end":149067,"line_start":16,"line_end":16,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdsa.rs","byte_start":151278,"byte_end":151294,"line_start":99,"line_end":99,"column_start":6,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/ecdh.rs","byte_start":152454,"byte_end":152467,"line_start":8,"line_end":8,"column_start":6,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153586,"byte_end":153600,"line_start":9,"line_end":9,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153775,"byte_end":153789,"line_start":19,"line_end":19,"column_start":22,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2197}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":153880,"byte_end":153894,"line_start":25,"line_end":25,"column_start":22,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2200}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/der.rs","byte_start":154027,"byte_end":154034,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":3000,"byte_end":3009,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8768,"byte_end":8777,"line_start":282,"line_end":282,"column_start":23,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":667},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":8839,"byte_end":8848,"line_start":288,"line_end":288,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10334,"byte_end":10343,"line_start":347,"line_end":347,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10800,"byte_end":10809,"line_start":361,"line_end":361,"column_start":23,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10888,"byte_end":10897,"line_start":367,"line_end":367,"column_start":15,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":10963,"byte_end":10972,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":15537,"byte_end":15544,"line_start":504,"line_end":504,"column_start":6,"column_end":13},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16114,"byte_end":16124,"line_start":529,"line_end":529,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16704,"byte_end":16714,"line_start":553,"line_end":553,"column_start":19,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":703},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16786,"byte_end":16796,"line_start":559,"line_end":559,"column_start":20,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":703},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":16862,"byte_end":16874,"line_start":565,"line_end":565,"column_start":6,"column_end":18},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17201,"byte_end":17213,"line_start":577,"line_end":577,"column_start":22,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":2197}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/libsecp256k1-0.3.2/src/lib.rs","byte_start":17287,"byte_end":17299,"line_start":583,"line_end":583,"column_start":15,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":1726}}]}