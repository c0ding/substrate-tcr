{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ipnet","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a3d1119af0c4fc04","-C","extra-filename=-a3d1119af0c4fc04","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libipnet-a3d1119af0c4fc04.rmeta"},"prelude":{"crate_id":{"name":"ipnet","disambiguator":[9451663121088655681,6122996969134721155]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":0,"byte_end":4213,"line_start":1,"line_end":95,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3920,"byte_end":3925,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"alias_span":null,"name":"IpAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3927,"byte_end":3932,"line_start":87,"line_end":87,"column_start":30,"column_end":35},"alias_span":null,"name":"IpSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3934,"byte_end":3942,"line_start":87,"line_end":87,"column_start":37,"column_end":45},"alias_span":null,"name":"IpBitAnd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3944,"byte_end":3951,"line_start":87,"line_end":87,"column_start":47,"column_end":54},"alias_span":null,"name":"IpBitOr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3953,"byte_end":3964,"line_start":87,"line_end":87,"column_start":56,"column_end":67},"alias_span":null,"name":"IpAddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3966,"byte_end":3979,"line_start":87,"line_end":87,"column_start":69,"column_end":82},"alias_span":null,"name":"Ipv4AddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":3981,"byte_end":3994,"line_start":87,"line_end":87,"column_start":84,"column_end":97},"alias_span":null,"name":"Ipv6AddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4019,"byte_end":4024,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"alias_span":null,"name":"IpNet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4026,"byte_end":4033,"line_start":88,"line_end":88,"column_start":30,"column_end":37},"alias_span":null,"name":"Ipv4Net","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4035,"byte_end":4042,"line_start":88,"line_end":88,"column_start":39,"column_end":46},"alias_span":null,"name":"Ipv6Net","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4044,"byte_end":4058,"line_start":88,"line_end":88,"column_start":48,"column_end":62},"alias_span":null,"name":"PrefixLenError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4060,"byte_end":4069,"line_start":88,"line_end":88,"column_start":64,"column_end":73},"alias_span":null,"name":"IpSubnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4071,"byte_end":4082,"line_start":88,"line_end":88,"column_start":75,"column_end":86},"alias_span":null,"name":"Ipv4Subnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4084,"byte_end":4095,"line_start":88,"line_end":88,"column_start":88,"column_end":99},"alias_span":null,"name":"Ipv6Subnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":4120,"byte_end":4134,"line_start":89,"line_end":89,"column_start":23,"column_end":37},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","byte_start":0,"byte_end":4213,"line_start":1,"line_end":95,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":83},{"krate":0,"index":229}],"decl_id":null,"docs":" Types for IPv4 and IPv6 network addresses.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":5718,"byte_end":5723,"line_start":41,"line_end":41,"column_start":11,"column_end":16},"name":"IpAdd","qualname":"::ipext::IpAdd","value":"IpAdd<RHS = Self>","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Provides a `saturating_add()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":5748,"byte_end":5754,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpAdd::Output","value":"type Output;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":5764,"byte_end":5778,"line_start":43,"line_end":43,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ipext::IpAdd::saturating_add","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":7181,"byte_end":7186,"line_start":81,"line_end":81,"column_start":11,"column_end":16},"name":"IpSub","qualname":"::ipext::IpSub","value":"IpSub<RHS = Self>","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" Provides a `saturating_sub()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":7211,"byte_end":7217,"line_start":82,"line_end":82,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpSub::Output","value":"type Output;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":7227,"byte_end":7241,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ipext::IpSub::saturating_sub","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8024,"byte_end":8032,"line_start":108,"line_end":108,"column_start":11,"column_end":19},"name":"IpBitAnd","qualname":"::ipext::IpBitAnd","value":"IpBitAnd<RHS = Self>","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Provides a `bitand()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8057,"byte_end":8063,"line_start":109,"line_end":109,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpBitAnd::Output","value":"type Output;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8073,"byte_end":8079,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"bitand","qualname":"::ipext::IpBitAnd::bitand","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8839,"byte_end":8846,"line_start":135,"line_end":135,"column_start":11,"column_end":18},"name":"IpBitOr","qualname":"::ipext::IpBitOr","value":"IpBitOr<RHS = Self>","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Provides a `bitor()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8871,"byte_end":8877,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpBitOr::Output","value":"type Output;","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":8887,"byte_end":8892,"line_start":137,"line_end":137,"column_start":8,"column_end":13},"name":"bitor","qualname":"::ipext::IpBitOr::bitor","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":12556,"byte_end":12558,"line_start":269,"line_end":269,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipext::IpAddrRange::V4","value":"IpAddrRange::V4(Ipv4AddrRange)","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":12580,"byte_end":12582,"line_start":270,"line_end":270,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipext::IpAddrRange::V6","value":"IpAddrRange::V6(Ipv6AddrRange)","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":366},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":12537,"byte_end":12548,"line_start":268,"line_end":268,"column_start":10,"column_end":21},"name":"IpAddrRange","qualname":"::ipext::IpAddrRange","value":"IpAddrRange::{V4, V6}","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":370}],"decl_id":null,"docs":" An `Iterator` over a range of IP addresses, either IPv4 or IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":13200,"byte_end":13213,"line_start":294,"line_end":294,"column_start":12,"column_end":25},"name":"Ipv4AddrRange","qualname":"::ipext::Ipv4AddrRange","value":"Ipv4AddrRange {  }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" An `Iterator` over a range of IPv4 addresses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":13851,"byte_end":13864,"line_start":320,"line_end":320,"column_start":12,"column_end":25},"name":"Ipv6AddrRange","qualname":"::ipext::Ipv6AddrRange","value":"Ipv6AddrRange {  }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" An `Iterator` over a range of IPv6 addresses.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14212,"byte_end":14215,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4AddrRange>::new","value":"fn (start: Ipv4Addr, end: Ipv4Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14390,"byte_end":14393,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6AddrRange>::new","value":"fn (start: Ipv6Addr, end: Ipv6Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":21343,"byte_end":21345,"line_start":43,"line_end":43,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipnet::IpNet::V4","value":"IpNet::V4(Ipv4Net)","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":21361,"byte_end":21363,"line_start":44,"line_end":44,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipnet::IpNet::V6","value":"IpNet::V6(Ipv6Net)","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":450},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":21330,"byte_end":21335,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"name":"IpNet","qualname":"::ipnet::IpNet","value":"IpNet::{V4, V6}","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":454}],"decl_id":null,"docs":" An IP network address, either IPv4 or IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":476},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":22162,"byte_end":22169,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"Ipv4Net","qualname":"::ipnet::Ipv4Net","value":"Ipv4Net {  }","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"decl_id":null,"docs":" An IPv4 network address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":22998,"byte_end":23005,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"Ipv6Net","qualname":"::ipnet::Ipv6Net","value":"Ipv6Net {  }","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" An IPv6 network address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23253,"byte_end":23267,"line_start":111,"line_end":111,"column_start":12,"column_end":26},"name":"PrefixLenError","qualname":"::ipnet::PrefixLenError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error which can be returned when the prefix length is invalid.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":24071,"byte_end":24076,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"trunc","qualname":"<IpNet>::trunc","value":"fn (&self) -> IpNet","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":24290,"byte_end":24294,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"addr","qualname":"<IpNet>::addr","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":24511,"byte_end":24521,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<IpNet>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":24740,"byte_end":24754,"line_start":168,"line_end":168,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<IpNet>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":25354,"byte_end":25361,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"netmask","qualname":"<IpNet>::netmask","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":25994,"byte_end":26002,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<IpNet>::hostmask","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":26638,"byte_end":26645,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"network","qualname":"<IpNet>::network","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":27315,"byte_end":27324,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<IpNet>::broadcast","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":28244,"byte_end":28252,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"supernet","qualname":"<IpNet>::supernet","value":"fn (&self) -> Option<IpNet>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `IpNet` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":29251,"byte_end":29261,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<IpNet>::is_sibling","value":"fn (&self, other: &IpNet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":30515,"byte_end":30520,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"name":"hosts","qualname":"<IpNet>::hosts","value":"fn (&self) -> IpAddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":32143,"byte_end":32150,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"subnets","qualname":"<IpNet>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<IpSubnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":33922,"byte_end":33930,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNet>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":34821,"byte_end":34830,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<IpNet>::aggregate","value":"fn (networks: &Vec<IpNet>) -> Vec<IpNet>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `IpNet`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36845,"byte_end":36848,"line_start":527,"line_end":527,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Net>::new","value":"fn (ip: Ipv4Addr, prefix_len: u8) -> Result<Ipv4Net, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv4 network address from an `Ipv4Addr` and prefix\n length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":37429,"byte_end":37434,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Ipv4Net>::trunc","value":"fn (&self) -> Ipv4Net","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":37570,"byte_end":37574,"line_start":552,"line_end":552,"column_start":12,"column_end":16},"name":"addr","qualname":"<Ipv4Net>::addr","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":37672,"byte_end":37682,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<Ipv4Net>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":37794,"byte_end":37808,"line_start":562,"line_end":562,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<Ipv4Net>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":38162,"byte_end":38169,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv4Net>::netmask","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":38677,"byte_end":38685,"line_start":596,"line_end":596,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<Ipv4Net>::hostmask","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":39201,"byte_end":39208,"line_start":615,"line_end":615,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv4Net>::network","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":39627,"byte_end":39636,"line_start":630,"line_end":630,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv4Net>::broadcast","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":40190,"byte_end":40198,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv4Net>::supernet","value":"fn (&self) -> Option<Ipv4Net>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Ipv4Net` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":40814,"byte_end":40824,"line_start":667,"line_end":667,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<Ipv4Net>::is_sibling","value":"fn (&self, other: &Ipv4Net) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":41905,"byte_end":41910,"line_start":697,"line_end":697,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv4Net>::hosts","value":"fn (&self) -> Ipv4AddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":43415,"byte_end":43422,"line_start":739,"line_end":739,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv4Net>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<Ipv4Subnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":44554,"byte_end":44562,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Net>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":45456,"byte_end":45465,"line_start":802,"line_end":802,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<Ipv4Net>::aggregate","value":"fn (networks: &Vec<Ipv4Net>) -> Vec<Ipv4Net>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `Ipv4Net`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":46757,"byte_end":46760,"line_start":843,"line_end":843,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Net>::new","value":"fn (ip: Ipv6Addr, prefix_len: u8) -> Result<Ipv6Net, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv6 network address from an `Ipv6Addr` and prefix\n length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":47337,"byte_end":47342,"line_start":863,"line_end":863,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Ipv6Net>::trunc","value":"fn (&self) -> Ipv6Net","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":47482,"byte_end":47486,"line_start":868,"line_end":868,"column_start":12,"column_end":16},"name":"addr","qualname":"<Ipv6Net>::addr","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":47584,"byte_end":47594,"line_start":873,"line_end":873,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<Ipv6Net>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":47710,"byte_end":47724,"line_start":878,"line_end":878,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<Ipv6Net>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":48071,"byte_end":48078,"line_start":893,"line_end":893,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv6Net>::netmask","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":48622,"byte_end":48630,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<Ipv6Net>::hostmask","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":49160,"byte_end":49167,"line_start":931,"line_end":931,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv6Net>::network","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":49764,"byte_end":49773,"line_start":949,"line_end":949,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv6Net>::broadcast","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the last address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":50359,"byte_end":50367,"line_start":968,"line_end":968,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv6Net>::supernet","value":"fn (&self) -> Option<Ipv6Net>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Ipv6Net` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":50987,"byte_end":50997,"line_start":987,"line_end":987,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<Ipv6Net>::is_sibling","value":"fn (&self, other: &Ipv6Net) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":51712,"byte_end":51717,"line_start":1009,"line_end":1009,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv6Net>::hosts","value":"fn (&self) -> Ipv6AddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":53004,"byte_end":53011,"line_start":1043,"line_end":1043,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv6Net>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<Ipv6Subnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":54120,"byte_end":54128,"line_start":1076,"line_end":1076,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Net>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":55036,"byte_end":55045,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<Ipv6Net>::aggregate","value":"fn (networks: &Vec<Ipv6Net>) -> Vec<Ipv6Net>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `Ipv6Net`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":56996,"byte_end":57004,"line_start":1165,"line_end":1165,"column_start":11,"column_end":19},"name":"Contains","qualname":"::ipnet::Contains","value":"Contains<T>","parent":null,"children":[{"krate":0,"index":189}],"decl_id":null,"docs":" Provides a method to test if a network address contains either\n another network address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57018,"byte_end":57026,"line_start":1166,"line_end":1166,"column_start":8,"column_end":16},"name":"contains","qualname":"::ipnet::Contains::contains","value":"fn (&self, other: T) -> bool","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":59942,"byte_end":59944,"line_start":1257,"line_end":1257,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipnet::IpSubnets::V4","value":"IpSubnets::V4(Ipv4Subnets)","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":59964,"byte_end":59966,"line_start":1258,"line_end":1258,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipnet::IpSubnets::V6","value":"IpSubnets::V6(Ipv6Subnets)","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":538},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":59925,"byte_end":59934,"line_start":1256,"line_end":1256,"column_start":10,"column_end":19},"name":"IpSubnets","qualname":"::ipnet::IpSubnets","value":"IpSubnets::{V4, V6}","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":542}],"decl_id":null,"docs":" An `Iterator` that generates IP network addresses, either IPv4 or\n IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":60954,"byte_end":60965,"line_start":1289,"line_end":1289,"column_start":12,"column_end":23},"name":"Ipv4Subnets","qualname":"::ipnet::Ipv4Subnets","value":"Ipv4Subnets {  }","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"decl_id":null,"docs":" An `Iterator` that generates IPv4 network addresses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62048,"byte_end":62059,"line_start":1323,"line_end":1323,"column_start":12,"column_end":23},"name":"Ipv6Subnets","qualname":"::ipnet::Ipv6Subnets","value":"Ipv6Subnets {  }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" An `Iterator` that generates IPv6 network addresses.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62186,"byte_end":62189,"line_start":1330,"line_end":1330,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Subnets>::new","value":"fn (start: Ipv4Addr, end: Ipv4Addr, min_prefix_len: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62425,"byte_end":62428,"line_start":1340,"line_end":1340,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Subnets>::new","value":"fn (start: Ipv6Addr, end: Ipv6Addr, min_prefix_len: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":84240,"byte_end":84254,"line_start":337,"line_end":337,"column_start":12,"column_end":26},"name":"AddrParseError","qualname":"::parser::AddrParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error which can be returned when parsing an IP network address.","sig":null,"attributes":[]}],"impls":[{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":11100,"byte_end":11108,"line_start":217,"line_end":217,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":11309,"byte_end":11317,"line_start":226,"line_end":226,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":13944,"byte_end":13955,"line_start":325,"line_end":325,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14076,"byte_end":14087,"line_start":331,"line_end":331,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14184,"byte_end":14197,"line_start":337,"line_end":337,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14362,"byte_end":14375,"line_start":346,"line_end":346,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14553,"byte_end":14564,"line_start":355,"line_end":355,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14845,"byte_end":14858,"line_start":366,"line_end":366,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":15377,"byte_end":15390,"line_start":384,"line_end":384,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23294,"byte_end":23308,"line_start":113,"line_end":113,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23444,"byte_end":23458,"line_start":119,"line_end":119,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23552,"byte_end":23557,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":35773,"byte_end":35778,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":35916,"byte_end":35921,"line_start":490,"line_end":490,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36146,"byte_end":36151,"line_start":499,"line_end":499,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36252,"byte_end":36257,"line_start":505,"line_end":505,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36340,"byte_end":36347,"line_start":511,"line_end":511,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":45926,"byte_end":45933,"line_start":815,"line_end":815,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":46071,"byte_end":46078,"line_start":821,"line_end":821,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":46219,"byte_end":46226,"line_start":827,"line_end":827,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":55498,"byte_end":55505,"line_start":1119,"line_end":1119,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":55643,"byte_end":55650,"line_start":1125,"line_end":1125,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57092,"byte_end":57097,"line_start":1169,"line_end":1169,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57401,"byte_end":57406,"line_start":1179,"line_end":1179,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57714,"byte_end":57721,"line_start":1189,"line_end":1189,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57911,"byte_end":57918,"line_start":1195,"line_end":1195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":58088,"byte_end":58095,"line_start":1201,"line_end":1201,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":58285,"byte_end":58292,"line_start":1207,"line_end":1207,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62160,"byte_end":62171,"line_start":1329,"line_end":1329,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62399,"byte_end":62410,"line_start":1339,"line_end":1339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62660,"byte_end":62669,"line_start":1349,"line_end":1349,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62782,"byte_end":62791,"line_start":1355,"line_end":1355,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62895,"byte_end":62904,"line_start":1361,"line_end":1361,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":64125,"byte_end":64136,"line_start":1390,"line_end":1390,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":65230,"byte_end":65241,"line_start":1419,"line_end":1419,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":73706,"byte_end":73712,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":82915,"byte_end":82920,"line_start":295,"line_end":295,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":83200,"byte_end":83207,"line_start":305,"line_end":305,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":83491,"byte_end":83498,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":84285,"byte_end":84299,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":84435,"byte_end":84449,"line_start":345,"line_end":345,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":11100,"byte_end":11108,"line_start":217,"line_end":217,"column_start":17,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6556},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":11309,"byte_end":11317,"line_start":226,"line_end":226,"column_start":17,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":6559},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":13944,"byte_end":13955,"line_start":325,"line_end":325,"column_start":30,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14076,"byte_end":14087,"line_start":331,"line_end":331,"column_start":30,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14184,"byte_end":14197,"line_start":337,"line_end":337,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14362,"byte_end":14375,"line_start":346,"line_end":346,"column_start":6,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14553,"byte_end":14564,"line_start":355,"line_end":355,"column_start":19,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":14845,"byte_end":14858,"line_start":366,"line_end":366,"column_start":19,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipext.rs","byte_start":15377,"byte_end":15390,"line_start":384,"line_end":384,"column_start":19,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23294,"byte_end":23308,"line_start":113,"line_end":113,"column_start":23,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23444,"byte_end":23458,"line_start":119,"line_end":119,"column_start":16,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":528},"to":{"krate":1,"index":1559}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":23552,"byte_end":23557,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":35773,"byte_end":35778,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":35916,"byte_end":35921,"line_start":490,"line_end":490,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36146,"byte_end":36151,"line_start":499,"line_end":499,"column_start":24,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36252,"byte_end":36257,"line_start":505,"line_end":505,"column_start":24,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":36340,"byte_end":36347,"line_start":511,"line_end":511,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":45926,"byte_end":45933,"line_start":815,"line_end":815,"column_start":21,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":46071,"byte_end":46078,"line_start":821,"line_end":821,"column_start":23,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":46219,"byte_end":46226,"line_start":827,"line_end":827,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":55498,"byte_end":55505,"line_start":1119,"line_end":1119,"column_start":21,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":55643,"byte_end":55650,"line_start":1125,"line_end":1125,"column_start":23,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57092,"byte_end":57097,"line_start":1169,"line_end":1169,"column_start":34,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57401,"byte_end":57406,"line_start":1179,"line_end":1179,"column_start":35,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57714,"byte_end":57721,"line_start":1189,"line_end":1189,"column_start":36,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":476},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":57911,"byte_end":57918,"line_start":1195,"line_end":1195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":476},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":58088,"byte_end":58095,"line_start":1201,"line_end":1201,"column_start":36,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":502},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":58285,"byte_end":58292,"line_start":1207,"line_end":1207,"column_start":37,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":502},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62160,"byte_end":62171,"line_start":1329,"line_end":1329,"column_start":6,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62399,"byte_end":62410,"line_start":1339,"line_end":1339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62660,"byte_end":62669,"line_start":1349,"line_end":1349,"column_start":28,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62782,"byte_end":62791,"line_start":1355,"line_end":1355,"column_start":28,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":62895,"byte_end":62904,"line_start":1361,"line_end":1361,"column_start":19,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":64125,"byte_end":64136,"line_start":1390,"line_end":1390,"column_start":19,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/ipnet.rs","byte_start":65230,"byte_end":65241,"line_start":1419,"line_end":1419,"column_start":19,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":73706,"byte_end":73712,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":82915,"byte_end":82920,"line_start":295,"line_end":295,"column_start":18,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6363}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":83200,"byte_end":83207,"line_start":305,"line_end":305,"column_start":18,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":476},"to":{"krate":2,"index":6363}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":83491,"byte_end":83498,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":6363}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":84285,"byte_end":84299,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ipnet-2.0.1/src/parser.rs","byte_start":84435,"byte_end":84449,"line_start":345,"line_end":345,"column_start":16,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":1559}}]}