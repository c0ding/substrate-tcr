{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stream_cipher","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=3286b056652e51a7","-C","extra-filename=-3286b056652e51a7","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","generic_array=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libgeneric_array-c1a70d0a5694ba82.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libstream_cipher-3286b056652e51a7.rmeta"},"prelude":{"crate_id":{"name":"stream_cipher","disambiguator":[5970425397614540164,15794039418270559060]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[14550314689580146068,6678877153218097606]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[12989350392175717619,11979469666288565117]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":0,"byte_end":3553,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":599,"byte_end":608,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"alias_span":null,"name":"LoopError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":610,"byte_end":631,"line_start":22,"line_end":22,"column_start":29,"column_end":50},"alias_span":null,"name":"InvalidKeyNonceLength","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":0,"byte_end":3553,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41}],"decl_id":null,"docs":" This crate defines a set of traits which define functionality of\n stream ciphers.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":207,"byte_end":217,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":3732,"byte_end":3741,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"LoopError","qualname":"::errors::LoopError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that stream cipher has reached the end of a keystream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":4184,"byte_end":4205,"line_start":25,"line_end":25,"column_start":12,"column_end":33},"name":"InvalidKeyNonceLength","qualname":"::errors::InvalidKeyNonceLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error which notifies that key or/and nonce used in stream cipher\n initialization had an invalid length.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":756,"byte_end":771,"line_start":27,"line_end":27,"column_start":11,"column_end":26},"name":"NewStreamCipher","qualname":"::NewStreamCipher","value":"NewStreamCipher: Sized","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":" Stream cipher creation trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":816,"byte_end":823,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::NewStreamCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Key size in bytes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":879,"byte_end":888,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::NewStreamCipher::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Nonce size in bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":993,"byte_end":996,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"new","qualname":"::NewStreamCipher::new","value":"fn (key: &GenericArray<u8, Self::KeySize>, nonce: &GenericArray<u8, Self::NonceSize>) -> Self","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":1211,"byte_end":1218,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"new_var","qualname":"::NewStreamCipher::new_var","value":"fn (key: &[u8], nonce: &[u8]) -> Result<Self, InvalidKeyNonceLength>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Create new stream cipher instance from variable length key and nonce.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":1194,"byte_end":1203,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":1701,"byte_end":1717,"line_start":55,"line_end":55,"column_start":11,"column_end":27},"name":"SyncStreamCipher","qualname":"::SyncStreamCipher","value":"SyncStreamCipher","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Synchronous stream cipher core trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2060,"byte_end":2075,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"apply_keystream","qualname":"::SyncStreamCipher::apply_keystream","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Apply keystream to the data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2043,"byte_end":2052,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2525,"byte_end":2544,"line_start":77,"line_end":77,"column_start":8,"column_end":27},"name":"try_apply_keystream","qualname":"::SyncStreamCipher::try_apply_keystream","value":"fn (&mut self, data: &mut [u8]) -> Result<(), LoopError>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Apply keystream to the data, but return an error if end of a keystream\n will be reached.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2657,"byte_end":2677,"line_start":81,"line_end":81,"column_start":11,"column_end":31},"name":"SyncStreamCipherSeek","qualname":"::SyncStreamCipherSeek","value":"SyncStreamCipherSeek","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" Synchronous stream cipher seeking trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2763,"byte_end":2774,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"current_pos","qualname":"::SyncStreamCipherSeek::current_pos","value":"fn (&self) -> u64","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Return current position of a keystream in bytes from the beginning.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":2850,"byte_end":2854,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"seek","qualname":"::SyncStreamCipherSeek::seek","value":"fn (&mut self, pos: u64) -> ()","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Seek keystream to the given `pos` in bytes.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":3079,"byte_end":3091,"line_start":94,"line_end":94,"column_start":11,"column_end":23},"name":"StreamCipher","qualname":"::StreamCipher","value":"StreamCipher","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" Stream cipher core trait which covers both synchronous and asynchronous\n ciphers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":3132,"byte_end":3139,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::StreamCipher::encrypt","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Encrypt data in place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":3208,"byte_end":3215,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::StreamCipher::decrypt","value":"fn (&mut self, data: &mut [u8]) -> ()","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decrypt data in place.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":3766,"byte_end":3775,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":4230,"byte_end":4251,"line_start":27,"line_end":27,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":3291,"byte_end":3292,"line_start":102,"line_end":102,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":3766,"byte_end":3775,"line_start":9,"line_end":9,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":1,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/errors.rs","byte_start":4230,"byte_end":4251,"line_start":27,"line_end":27,"column_start":23,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":52},"to":{"krate":1,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":773,"byte_end":778,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":1540},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cipher-0.3.2/src/lib.rs","byte_start":3291,"byte_end":3292,"line_start":102,"line_end":102,"column_start":44,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":42},"to":{"krate":0,"index":38}}]}