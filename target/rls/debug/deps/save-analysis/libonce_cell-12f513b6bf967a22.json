{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","once_cell","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"parking_lot\"","-C","metadata=12f513b6bf967a22","-C","extra-filename=-12f513b6bf967a22","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","parking_lot=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libparking_lot-d7318b6025240049.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libonce_cell-12f513b6bf967a22.rmeta"},"prelude":{"crate_id":{"name":"once_cell","disambiguator":[18204216307039092228,5219268602216354217]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":15,"id":{"name":"parking_lot","disambiguator":[18440674219176970933,11073261558433847143]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":16,"id":{"name":"lock_api","disambiguator":[1740120125000627487,2174128842184269936]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":17,"id":{"name":"scopeguard","disambiguator":[1180318096263749214,13826661014517695610]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":18,"id":{"name":"owning_ref","disambiguator":[6468824698281234938,7818308951348941850]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":19,"id":{"name":"stable_deref_trait","disambiguator":[12303249007577019054,1284522863338038304]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":20,"id":{"name":"parking_lot_core","disambiguator":[3588121143064899235,4160550875997733136]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":21,"id":{"name":"rand","disambiguator":[7431626035600045770,17290284716738379003]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":22,"id":{"name":"rand_jitter","disambiguator":[6451646135398449223,6501684162120109188]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":23,"id":{"name":"rand_core","disambiguator":[5522200777290017131,14411151888041535748]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":24,"id":{"name":"rand_os","disambiguator":[7912927106295799984,276851132822879996]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":25,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":26,"id":{"name":"rand_isaac","disambiguator":[4880938628404110112,2018659310470220914]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":27,"id":{"name":"rand_core","disambiguator":[9444740340015584135,12250349579860208745]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":28,"id":{"name":"rand_chacha","disambiguator":[8025723348719059612,15263650628092894135]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":29,"id":{"name":"rand_hc","disambiguator":[7425780177675667112,13584547259450403268]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":30,"id":{"name":"rand_pcg","disambiguator":[14465884768278281200,9331134813183132506]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":31,"id":{"name":"rand_xorshift","disambiguator":[15986133743910448269,9205213345226530241]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","num":32,"id":{"name":"smallvec","disambiguator":[11388778559221969371,8568870876383330853]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":0,"byte_end":15370,"line_start":1,"line_end":527,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":12537,"byte_end":12545,"line_start":424,"line_end":424,"column_start":18,"column_end":26},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":83}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":0,"byte_end":15370,"line_start":1,"line_end":527,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":43},{"krate":0,"index":83}],"decl_id":null,"docs":"# Overview","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16170,"byte_end":16178,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::imp::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16732,"byte_end":16736,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"INIT","qualname":"::imp::OnceCell::<T>::INIT","value":"OnceCell<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" An empty cell, for initialization in a `const` context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16879,"byte_end":16882,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"fn () -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":17117,"byte_end":17120,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value. Returns `None`\n if the cell is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":17950,"byte_end":17953,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"fn (&self, value: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`. Returns\n `Ok(())` if the cell was empty and `Err(value)` if it was\n full.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":18855,"byte_end":18866,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"fn <F> (&self, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f`\n if the cell was empty. May threads may call `get_or_init`\n concurrently with different initializing functions, but\n it is guaranteed that only one function will be executed.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":5196,"byte_end":5202,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"name":"unsync","qualname":"::unsync","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":71},{"krate":0,"index":77},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":5175,"byte_end":5187,"line_start":176,"line_end":176,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":5849,"byte_end":5857,"line_start":200,"line_end":200,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::unsync::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" A cell which can be written to only once. Not thread safe.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":60},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6841,"byte_end":6845,"line_start":238,"line_end":238,"column_start":19,"column_end":23},"name":"INIT","qualname":"::unsync::OnceCell::<T>::INIT","value":"OnceCell<T>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" An empty cell, for initialization in a `const` context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6958,"byte_end":6961,"line_start":241,"line_end":241,"column_start":16,"column_end":19},"name":"new","qualname":"<OnceCell<T>>::new","value":"fn () -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":7166,"byte_end":7169,"line_start":247,"line_end":247,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value. Returns `None`\n if the cell is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":7834,"byte_end":7837,"line_start":268,"line_end":268,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"fn (&self, value: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`. Returns\n `Ok(())` if the cell was empty and `Err(value)` if it was\n full.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":8796,"byte_end":8807,"line_start":294,"line_end":294,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"fn <F> (&self, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f`\n if the cell was empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":9694,"byte_end":9709,"line_start":319,"line_end":319,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"fn <F, E> (&self, f: F) -> Result<&T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10499,"byte_end":10503,"line_start":350,"line_end":350,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::unsync::Lazy","value":"Lazy { __cell, __init }","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":113},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10570,"byte_end":10576,"line_start":352,"line_end":352,"column_start":13,"column_end":19},"name":"__cell","qualname":"::unsync::Lazy::__cell","value":"unsync::OnceCell<T>","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":114},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10626,"byte_end":10632,"line_start":354,"line_end":354,"column_start":13,"column_end":19},"name":"__init","qualname":"::unsync::Lazy::__init","value":"F","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10785,"byte_end":10788,"line_start":360,"line_end":360,"column_start":16,"column_end":19},"name":"new","qualname":"<Lazy<T, F>>::new","value":"fn (init: F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing\n function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":11370,"byte_end":11375,"line_start":380,"line_end":380,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"fn (this: &Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and\n returns a reference to result. This is equivalent\n to the `Deref` impl, but is explicit.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":12410,"byte_end":12414,"line_start":421,"line_end":421,"column_start":9,"column_end":13},"name":"sync","qualname":"::sync","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":119},{"krate":0,"index":124},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":96}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":12389,"byte_end":12401,"line_start":420,"line_end":420,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13485,"byte_end":13489,"line_start":459,"line_end":459,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::sync::Lazy","value":"Lazy { __cell, __init }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":122},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13556,"byte_end":13562,"line_start":461,"line_end":461,"column_start":13,"column_end":19},"name":"__cell","qualname":"::sync::Lazy::__cell","value":"imp::OnceCell<T>","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":123},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13612,"byte_end":13618,"line_start":463,"line_end":463,"column_start":13,"column_end":19},"name":"__init","qualname":"::sync::Lazy::__init","value":"F","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13771,"byte_end":13774,"line_start":469,"line_end":469,"column_start":16,"column_end":19},"name":"new","qualname":"<Lazy<T, F>>::new","value":"fn (f: F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing\n function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":14349,"byte_end":14354,"line_start":489,"line_end":489,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"fn (this: &Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and\n returns a reference to result. This is equivalent\n to the `Deref` impl, but is explicit.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16257,"byte_end":16265,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16358,"byte_end":16366,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16527,"byte_end":16535,"line_start":49,"line_end":49,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16640,"byte_end":16648,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":19363,"byte_end":19371,"line_start":144,"line_end":144,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":19408,"byte_end":19416,"line_start":145,"line_end":145,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":5979,"byte_end":5987,"line_start":205,"line_end":205,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6094,"byte_end":6102,"line_start":211,"line_end":211,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6463,"byte_end":6471,"line_start":224,"line_end":224,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6601,"byte_end":6609,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6741,"byte_end":6749,"line_start":236,"line_end":236,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10670,"byte_end":10674,"line_start":357,"line_end":357,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":11512,"byte_end":11516,"line_start":385,"line_end":385,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13656,"byte_end":13660,"line_start":466,"line_end":466,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":14503,"byte_end":14507,"line_start":494,"line_end":494,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16257,"byte_end":16265,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16358,"byte_end":16366,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16527,"byte_end":16535,"line_start":49,"line_end":49,"column_start":34,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":16640,"byte_end":16648,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":19363,"byte_end":19371,"line_start":144,"line_end":144,"column_start":38,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/imp_pl.rs","byte_start":19408,"byte_end":19416,"line_start":145,"line_end":145,"column_start":31,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":5979,"byte_end":5987,"line_start":205,"line_end":205,"column_start":25,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6094,"byte_end":6102,"line_start":211,"line_end":211,"column_start":30,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6463,"byte_end":6471,"line_start":224,"line_end":224,"column_start":38,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6601,"byte_end":6609,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":6741,"byte_end":6749,"line_start":236,"line_end":236,"column_start":13,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":10670,"byte_end":10674,"line_start":357,"line_end":357,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":11512,"byte_end":11516,"line_start":385,"line_end":385,"column_start":37,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":13656,"byte_end":13660,"line_start":466,"line_end":466,"column_start":27,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-0.1.8/src/lib.rs","byte_start":14503,"byte_end":14507,"line_start":494,"line_end":494,"column_start":49,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":119},"to":{"krate":2,"index":1704}}]}