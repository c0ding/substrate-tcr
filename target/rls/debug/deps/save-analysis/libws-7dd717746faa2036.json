{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ws","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=7dd717746faa2036","-C","extra-filename=-7dd717746faa2036","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","byteorder=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libbyteorder-c067064d0ed94452.rmeta","--extern","bytes=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libbytes-b26f8098a835f780.rmeta","--extern","httparse=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libhttparse-cb6149d8fdf8840b.rmeta","--extern","log=/home/gautam/code/substrate-tcr/target/rls/debug/deps/liblog-0aa3bdb4fbc607a5.rmeta","--extern","mio=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libmio-f522866088375f7c.rmeta","--extern","mio_extras=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libmio_extras-868a1fe7639b8d57.rmeta","--extern","rand=/home/gautam/code/substrate-tcr/target/rls/debug/deps/librand-ea0c4a92548d9a67.rmeta","--extern","sha1=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libsha1-9ee251fb4da01fa9.rmeta","--extern","slab=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libslab-5e4a4669d402a924.rmeta","--extern","url=/home/gautam/code/substrate-tcr/target/rls/debug/deps/liburl-11ad720a9fe8bf7e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libws-7dd717746faa2036.rmeta"},"prelude":{"crate_id":{"name":"ws","disambiguator":[13030147930146812898,3014357735948866714]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[4550665113768483084,8114487136530570366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":16,"id":{"name":"bytes","disambiguator":[15547761506352541838,12516243730205202715]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":17,"id":{"name":"iovec","disambiguator":[7505103988290950057,8017685370079256314]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[13254792230667284302,3386195477332223755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":19,"id":{"name":"either","disambiguator":[5737097822644626294,15106441089645255112]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":20,"id":{"name":"httparse","disambiguator":[4624226067693304986,9179453858931805486]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":21,"id":{"name":"mio","disambiguator":[4112693478168816626,15410470558008841810]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":22,"id":{"name":"net2","disambiguator":[6323686307944947352,17689637276998605469]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[14028691320640889427,597678702170297599]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":24,"id":{"name":"slab","disambiguator":[12106897622916833894,15938669493737451729]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":25,"id":{"name":"log","disambiguator":[14999147071182027401,9725557539807553947]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":26,"id":{"name":"mio_extras","disambiguator":[9414108398195178737,1253795388388375908]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":27,"id":{"name":"lazycell","disambiguator":[7415408790127687878,13906788099799545011]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":28,"id":{"name":"rand","disambiguator":[5321216681244170538,12034829980849208753]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":29,"id":{"name":"rand_core","disambiguator":[16185224677224537348,16486699115635032729]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":30,"id":{"name":"getrandom","disambiguator":[6652657662669007877,15640928123018177165]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":31,"id":{"name":"rand_chacha","disambiguator":[5793130438050303798,6932423985884244310]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":32,"id":{"name":"c2_chacha","disambiguator":[13998866428842843861,998637257621533246]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":33,"id":{"name":"ppv_lite86","disambiguator":[7826443749834129798,10394635507841172544]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":34,"id":{"name":"sha1","disambiguator":[4521847502232486512,4841676362929648610]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":35,"id":{"name":"block_buffer","disambiguator":[8019630972046669350,11026957765241237542]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":36,"id":{"name":"block_padding","disambiguator":[17128047456134656798,7750736192512680458]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":37,"id":{"name":"byte_tools","disambiguator":[13284303416580267306,6672964497037622010]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":38,"id":{"name":"generic_array","disambiguator":[14550314689580146068,6678877153218097606]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":39,"id":{"name":"typenum","disambiguator":[12989350392175717619,11979469666288565117]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":40,"id":{"name":"opaque_debug","disambiguator":[4066210372712447704,12959402483192229152]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":41,"id":{"name":"digest","disambiguator":[10177543274840385639,2242018114672693210]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":42,"id":{"name":"fake_simd","disambiguator":[2803358426376781075,563183322539143633]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":43,"id":{"name":"url","disambiguator":[10595820428972174369,4634274038270283699]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":44,"id":{"name":"matches","disambiguator":[4263668774090672541,2907010221723980672]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":45,"id":{"name":"idna","disambiguator":[16581811072684574289,7494076676672183204]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":46,"id":{"name":"unicode_bidi","disambiguator":[7717416601780233222,841250884527325306]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":47,"id":{"name":"unicode_normalization","disambiguator":[17151322076212063695,4171474054071604603]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":48,"id":{"name":"smallvec","disambiguator":[11388778559221969371,8568870876383330853]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","num":49,"id":{"name":"percent_encoding","disambiguator":[5017555176187883837,15782749940140121967]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":0,"byte_end":13768,"line_start":1,"line_end":391,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":1937},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/util.rs","byte_start":197039,"byte_end":197044,"line_start":4,"line_end":4,"column_start":14,"column_end":19},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":26,"index":259},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/util.rs","byte_start":197109,"byte_end":197116,"line_start":6,"line_end":6,"column_start":28,"column_end":35},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":754,"byte_end":761,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":780,"byte_end":787,"line_start":40,"line_end":40,"column_start":18,"column_end":25},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":813,"byte_end":819,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":836,"byte_end":841,"line_start":43,"line_end":43,"column_start":16,"column_end":21},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":813},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":863,"byte_end":872,"line_start":44,"line_end":44,"column_start":21,"column_end":30},"alias_span":null,"name":"Handshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":874,"byte_end":881,"line_start":44,"line_end":44,"column_start":32,"column_end":39},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":883,"byte_end":891,"line_start":44,"line_end":44,"column_start":41,"column_end":49},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":911,"byte_end":918,"line_start":45,"line_end":45,"column_start":18,"column_end":25},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":886},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":939,"byte_end":948,"line_start":46,"line_end":46,"column_start":20,"column_end":29},"alias_span":null,"name":"CloseCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":950,"byte_end":956,"line_start":46,"line_end":46,"column_start":31,"column_end":37},"alias_span":null,"name":"OpCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":975,"byte_end":979,"line_start":47,"line_end":47,"column_start":17,"column_end":21},"alias_span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":983,"byte_end":992,"line_start":47,"line_end":47,"column_start":25,"column_end":34},"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":1011,"byte_end":1016,"line_start":48,"line_end":48,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":1018,"byte_end":1024,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":0,"byte_end":13768,"line_start":1,"line_end":391,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":69},{"krate":0,"index":167},{"krate":0,"index":200},{"krate":0,"index":262},{"krate":0,"index":310},{"krate":0,"index":415},{"krate":0,"index":510},{"krate":0,"index":548},{"krate":0,"index":569},{"krate":0,"index":609},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":680},{"krate":0,"index":954},{"krate":0,"index":983},{"krate":0,"index":981},{"krate":0,"index":980},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":985},{"krate":0,"index":992},{"krate":0,"index":990},{"krate":0,"index":988},{"krate":0,"index":987},{"krate":0,"index":703}],"decl_id":null,"docs":" Lightweight, event-driven WebSockets for Rust.\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":51,"byte_end":72,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"deny(missing_copy_implementations, trivial_casts, trivial_numeric_casts,\n       unstable_features, unused_import_braces)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":73,"byte_end":198,"line_start":3,"line_end":4,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14081,"byte_end":14088,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Message","qualname":"::communication::Signal::Message","value":"Signal::Message(message::Message)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14112,"byte_end":14117,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Close","qualname":"::communication::Signal::Close","value":"Signal::Close(CloseCode, Cow<'static, str>)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":716},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14153,"byte_end":14157,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Ping","qualname":"::communication::Signal::Ping","value":"Signal::Ping(Vec<u8>)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14172,"byte_end":14176,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Pong","qualname":"::communication::Signal::Pong","value":"Signal::Pong(Vec<u8>)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":722},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14191,"byte_end":14198,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Connect","qualname":"::communication::Signal::Connect","value":"Signal::Connect(url::Url)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":725},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14214,"byte_end":14222,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Shutdown","qualname":"::communication::Signal::Shutdown","value":"Signal::Shutdown","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":727},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14228,"byte_end":14235,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::communication::Signal::Timeout","value":"Signal::Timeout { delay, token }","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14270,"byte_end":14276,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::communication::Signal::Cancel","value":"Signal::Cancel(Timeout)","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":708},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14068,"byte_end":14074,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Signal","qualname":"::communication::Signal","value":"Signal::{Message, Close, Ping, Pong, Connect, Shutdown, Timeout, Cancel}","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":730}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":737},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14325,"byte_end":14332,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Command","qualname":"::communication::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14426,"byte_end":14431,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"token","qualname":"<Command>::token","value":"fn (&self) -> Token","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14487,"byte_end":14498,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"into_signal","qualname":"<Command>::into_signal","value":"fn (self) -> Signal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14555,"byte_end":14568,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"connection_id","qualname":"<Command>::connection_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14766,"byte_end":14772,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Sender","qualname":"::communication::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748}],"decl_id":null,"docs":" A representation of the output of the WebSocket connection. Use this to send messages to the\n other endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15525,"byte_end":15528,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Sender>::new","value":"fn (token: Token, channel: mio::channel::SyncSender<Command>, connection_id: u32) -> Sender","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15504,"byte_end":15513,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15838,"byte_end":15843,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"token","qualname":"<Sender>::token","value":"fn (&self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" A Token identifying this sender within the WebSocket.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15817,"byte_end":15826,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15983,"byte_end":15996,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"connection_id","qualname":"<Sender>::connection_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" A connection_id identifying this sender within the WebSocket.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15962,"byte_end":15971,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":16116,"byte_end":16120,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender>::send","value":"fn <M> (&self, msg: M) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message over the connection.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":16095,"byte_end":16104,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17036,"byte_end":17045,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender>::broadcast","value":"fn <M> (&self, msg: M) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the endpoints of all connections.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17015,"byte_end":17024,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17440,"byte_end":17445,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"close","qualname":"<Sender>::close","value":"fn (&self, code: CloseCode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a close code to the other endpoint.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17419,"byte_end":17428,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17830,"byte_end":17847,"line_start":160,"line_end":160,"column_start":12,"column_end":29},"name":"close_with_reason","qualname":"<Sender>::close_with_reason","value":"fn <S> (&self, code: CloseCode, reason: S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a close code and provide a descriptive reason for closing.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":17809,"byte_end":17818,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":18296,"byte_end":18300,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"ping","qualname":"<Sender>::ping","value":"fn (&self, data: Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a ping to the other endpoint with the given test data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":18275,"byte_end":18284,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":18678,"byte_end":18682,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"pong","qualname":"<Sender>::pong","value":"fn (&self, data: Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a pong to the other endpoint responding with the given test data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":18657,"byte_end":18666,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19052,"byte_end":19059,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"connect","qualname":"<Sender>::connect","value":"fn (&self, url: url::Url) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Queue a new connection on this WebSocket to the specified URL.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19031,"byte_end":19040,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19444,"byte_end":19452,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Sender>::shutdown","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Request that all connections terminate and that the WebSocket stop running.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19423,"byte_end":19432,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19851,"byte_end":19858,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Sender>::timeout","value":"fn (&self, ms: u64, token: Token) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Schedule a `token` to be sent to the WebSocket Handler's `on_timeout` method\n after `ms` milliseconds\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":19830,"byte_end":19839,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":20482,"byte_end":20488,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"cancel","qualname":"<Sender>::cancel","value":"fn (&self, timeout: Timeout) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Queue the cancellation of a previously scheduled timeout.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":20461,"byte_end":20470,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":69671,"byte_end":69678,"line_start":5,"line_end":5,"column_start":11,"column_end":18},"name":"Factory","qualname":"::factory::Factory","value":"Factory","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" A trait for creating new WebSocket handlers.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":69690,"byte_end":69697,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"Handler","qualname":"::factory::Factory::Handler","value":"type Handler: Handler;","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":69762,"byte_end":69777,"line_start":9,"line_end":9,"column_start":8,"column_end":23},"name":"connection_made","qualname":"::factory::Factory::connection_made","value":"fn (&mut self, _: Sender) -> Self::Handler","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Called when a TCP connection is made.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":69892,"byte_end":69903,"line_start":13,"line_end":13,"column_start":8,"column_end":19},"name":"on_shutdown","qualname":"::factory::Factory::on_shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Called when the WebSocket is shutting down.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":69875,"byte_end":69884,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":70958,"byte_end":70974,"line_start":52,"line_end":52,"column_start":8,"column_end":24},"name":"client_connected","qualname":"::factory::Factory::client_connected","value":"fn (&mut self, ws: Sender) -> Self::Handler","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Called when a new connection is established for a client endpoint.\n This method can be used to differentiate a client aspect for a handler.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":70941,"byte_end":70950,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":72015,"byte_end":72031,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"server_connected","qualname":"::factory::Factory::server_connected","value":"fn (&mut self, ws: Sender) -> Self::Handler","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Called when a new connection is established for a server endpoint.\n This method can be used to differentiate a server aspect for a handler.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":71998,"byte_end":72007,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":72464,"byte_end":72479,"line_start":101,"line_end":101,"column_start":8,"column_end":23},"name":"connection_lost","qualname":"::factory::Factory::connection_lost","value":"fn (&mut self, _: Self::Handler) -> ()","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Called when a TCP connection is lost with the handler that was\n setup for that connection.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":72447,"byte_end":72456,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":74956,"byte_end":74961,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Frame","qualname":"::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75251,"byte_end":75254,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75230,"byte_end":75239,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75774,"byte_end":75782,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `false`: a frame is never empty since it has a header.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75753,"byte_end":75762,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75895,"byte_end":75903,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_final","qualname":"<Frame>::is_final","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the frame is a final frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75874,"byte_end":75883,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76027,"byte_end":76035,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"has_rsv1","qualname":"<Frame>::has_rsv1","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the first reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76006,"byte_end":76015,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76156,"byte_end":76164,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"has_rsv2","qualname":"<Frame>::has_rsv2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the second reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76135,"byte_end":76144,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76284,"byte_end":76292,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"has_rsv3","qualname":"<Frame>::has_rsv3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the third reserved bit is set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76263,"byte_end":76272,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76397,"byte_end":76403,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"opcode","qualname":"<Frame>::opcode","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" Get the OpCode of the frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76376,"byte_end":76385,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76521,"byte_end":76531,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"is_control","qualname":"<Frame>::is_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether this is a control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76500,"byte_end":76509,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76662,"byte_end":76669,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"fn (&self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76641,"byte_end":76650,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76805,"byte_end":76814,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"is_masked","qualname":"<Frame>::is_masked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76784,"byte_end":76793,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76989,"byte_end":76993,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"mask","qualname":"<Frame>::mask","value":"fn (&self) -> Option<&[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76944,"byte_end":76963,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":76968,"byte_end":76977,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77145,"byte_end":77154,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"set_final","qualname":"<Frame>::set_final","value":"fn (&mut self, is_final: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Make this frame a final frame.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77100,"byte_end":77119,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77124,"byte_end":77133,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77313,"byte_end":77321,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"set_rsv1","qualname":"<Frame>::set_rsv1","value":"fn (&mut self, has_rsv1: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the first reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77292,"byte_end":77301,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77477,"byte_end":77485,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"set_rsv2","qualname":"<Frame>::set_rsv2","value":"fn (&mut self, has_rsv2: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the second reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77456,"byte_end":77465,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77640,"byte_end":77648,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"set_rsv3","qualname":"<Frame>::set_rsv3","value":"fn (&mut self, has_rsv3: bool) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the third reserved bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77619,"byte_end":77628,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77815,"byte_end":77825,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"set_opcode","qualname":"<Frame>::set_opcode","value":"fn (&mut self, opcode: OpCode) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Set the OpCode.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77770,"byte_end":77789,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77794,"byte_end":77803,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78002,"byte_end":78013,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"fn (&mut self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Edit the frame's payload.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77957,"byte_end":77976,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":77981,"byte_end":77990,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78389,"byte_end":78397,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"set_mask","qualname":"<Frame>::set_mask","value":"fn (&mut self) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78368,"byte_end":78377,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78721,"byte_end":78732,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"remove_mask","qualname":"<Frame>::remove_mask","value":"fn (&mut self) -> &mut Frame","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78700,"byte_end":78709,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":78936,"byte_end":78945,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79051,"byte_end":79058,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"fn (data: Vec<u8>, code: OpCode, finished: bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79030,"byte_end":79039,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79542,"byte_end":79546,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"fn (data: Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79521,"byte_end":79530,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79764,"byte_end":79768,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"fn (data: Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79743,"byte_end":79752,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79987,"byte_end":79992,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"fn (code: CloseCode, reason: &str) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":79966,"byte_end":79975,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":80417,"byte_end":80422,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"parse","qualname":"<Frame>::parse","value":"fn (cursor: &mut Cursor<Vec<u8>>, max_payload_length: u64) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the input stream into a frame.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":84612,"byte_end":84618,"line_start":384,"line_end":384,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"fn <W> (&mut self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":87787,"byte_end":87794,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" The core trait of this library.\n Implementing this trait provides the business logic of the WebSocket application.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":87911,"byte_end":87922,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"on_shutdown","qualname":"::handler::Handler::on_shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called when a request to shutdown all connections has been received.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":87894,"byte_end":87903,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":88168,"byte_end":88175,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"on_open","qualname":"::handler::Handler::on_open","value":"fn (&mut self, shake: Handshake) -> Result<()>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called when the WebSocket handshake is successful and the connection is open for sending\n and receiving messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":88405,"byte_end":88415,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"on_message","qualname":"::handler::Handler::on_message","value":"fn (&mut self, msg: Message) -> Result<()>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called on incoming messages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":88777,"byte_end":88785,"line_start":49,"line_end":49,"column_start":8,"column_end":16},"name":"on_close","qualname":"::handler::Handler::on_close","value":"fn (&mut self, code: CloseCode, reason: &str) -> ()","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called any time this endpoint receives a close control frame.\n This may be because the other endpoint is initiating a closing handshake,\n or it may be the other endpoint confirming the handshake initiated by this endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":88967,"byte_end":88975,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"on_error","qualname":"::handler::Handler::on_error","value":"fn (&mut self, err: Error) -> ()","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called when an error occurs on the WebSocket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":90623,"byte_end":90633,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handler::Handler::on_request","value":"fn (&mut self, req: &Request) -> Result<Response>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" A method for handling the low-level workings of the request portion of the WebSocket\n handshake.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":90606,"byte_end":90615,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":91228,"byte_end":91239,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"on_response","qualname":"::handler::Handler::on_response","value":"fn (&mut self, res: &Response) -> Result<()>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" A method for handling the low-level workings of the response portion of the WebSocket\n handshake.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":91211,"byte_end":91220,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":92382,"byte_end":92392,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"on_timeout","qualname":"::handler::Handler::on_timeout","value":"fn (&mut self, event: Token) -> Result<()>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called when a timeout is triggered.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":92365,"byte_end":92374,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":94235,"byte_end":94249,"line_start":199,"line_end":199,"column_start":8,"column_end":22},"name":"on_new_timeout","qualname":"::handler::Handler::on_new_timeout","value":"fn (&mut self, _: Token, _: Timeout) -> Result<()>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Called when a timeout has been scheduled on the eventloop.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":94218,"byte_end":94227,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":95073,"byte_end":95081,"line_start":218,"line_end":218,"column_start":8,"column_end":16},"name":"on_frame","qualname":"::handler::Handler::on_frame","value":"fn (&mut self, frame: Frame) -> Result<Option<Frame>>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" A method for handling incoming frames.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":95056,"byte_end":95065,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":96473,"byte_end":96486,"line_start":247,"line_end":247,"column_start":8,"column_end":21},"name":"on_send_frame","qualname":"::handler::Handler::on_send_frame","value":"fn (&mut self, frame: Frame) -> Result<Option<Frame>>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" A method for handling outgoing frames.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":96456,"byte_end":96465,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":97635,"byte_end":97648,"line_start":278,"line_end":278,"column_start":8,"column_end":21},"name":"build_request","qualname":"::handler::Handler::build_request","value":"fn (&mut self, url: &url::Url) -> Result<Request>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" A method for creating the initial handshake request for WebSocket clients.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":97618,"byte_end":97627,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":813},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104092,"byte_end":104101,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"Handshake","qualname":"::handshake::Handshake","value":"Handshake { request, response, peer_addr, local_addr }","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"decl_id":null,"docs":" A struct representing the two halves of the WebSocket handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":814},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104166,"byte_end":104173,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"request","qualname":"::handshake::Handshake::request","value":"handshake::Request","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" The HTTP request sent to begin the handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":815},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104260,"byte_end":104268,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"response","qualname":"::handshake::Handshake::response","value":"handshake::Response","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" The HTTP response from the server confirming the handshake.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":816},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104406,"byte_end":104415,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"name":"peer_addr","qualname":"::handshake::Handshake::peer_addr","value":"std::option::Option<std::net::SocketAddr>","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" The socket address of the other endpoint. This address may\n be an intermediary such as a proxy server.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":817},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104490,"byte_end":104500,"line_start":84,"line_end":84,"column_start":9,"column_end":19},"name":"local_addr","qualname":"::handshake::Handshake::local_addr","value":"std::option::Option<std::net::SocketAddr>","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" The socket address of this endpoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105147,"byte_end":105158,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<Handshake>::remote_addr","value":"fn (&self) -> Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Get the IP address of the remote connection.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105116,"byte_end":105135,"line_start":100,"line_end":100,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105489,"byte_end":105496,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"Request","qualname":"::handshake::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"decl_id":null,"docs":" The handshake request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105666,"byte_end":105672,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"header","qualname":"<Request>::header","value":"fn (&self, header: &str) -> Option<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105957,"byte_end":105967,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Request>::header_mut","value":"fn (&mut self, header: &str) -> Option<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Edit the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106286,"byte_end":106293,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"fn (&self) -> &Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106241,"byte_end":106260,"line_start":138,"line_end":138,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106265,"byte_end":106274,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106442,"byte_end":106453,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Request>::headers_mut","value":"fn (&mut self) -> &mut Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Edit the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106397,"byte_end":106416,"line_start":145,"line_end":145,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106421,"byte_end":106430,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106632,"byte_end":106638,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"origin","qualname":"<Request>::origin","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the origin of the request if it comes from a browser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106601,"byte_end":106620,"line_start":152,"line_end":152,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":106893,"byte_end":106896,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"key","qualname":"<Request>::key","value":"fn (&self) -> Result<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the unhashed WebSocket key sent in the request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107130,"byte_end":107140,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"hashed_key","qualname":"<Request>::hashed_key","value":"fn (&self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the hashed WebSocket key from this request.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107320,"byte_end":107327,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"version","qualname":"<Request>::version","value":"fn (&self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the WebSocket protocol version from the request (should be 13).\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107289,"byte_end":107308,"line_start":173,"line_end":173,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107705,"byte_end":107711,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the request method.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107684,"byte_end":107693,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107843,"byte_end":107851,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"resource","qualname":"<Request>::resource","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the path of the request.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107798,"byte_end":107817,"line_start":192,"line_end":192,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107822,"byte_end":107831,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107995,"byte_end":108004,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"protocols","qualname":"<Request>::protocols","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the possible protocols for the WebSocket connection.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":107964,"byte_end":107983,"line_start":199,"line_end":199,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":108438,"byte_end":108450,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"add_protocol","qualname":"<Request>::add_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a possible protocol to this request.\n This may result in duplicate protocols listed.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":108407,"byte_end":108426,"line_start":213,"line_end":213,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":108859,"byte_end":108874,"line_start":226,"line_end":226,"column_start":12,"column_end":27},"name":"remove_protocol","qualname":"<Request>::remove_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a possible protocol from this request.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":108828,"byte_end":108847,"line_start":225,"line_end":225,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":109572,"byte_end":109582,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Request>::extensions","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the possible extensions for the WebSocket connection.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":109541,"byte_end":109560,"line_start":245,"line_end":245,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":110120,"byte_end":110133,"line_start":259,"line_end":259,"column_start":12,"column_end":25},"name":"add_extension","qualname":"<Request>::add_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a possible extension to this request.\n This may result in duplicate extensions listed. Also, the order of extensions\n indicates preference, so if the preference matters, consider using the\n `Sec-WebSocket-Protocol` header directly.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":110089,"byte_end":110108,"line_start":258,"line_end":258,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":110588,"byte_end":110604,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"remove_extension","qualname":"<Request>::remove_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a possible extension from this request.\n This will remove all configurations of the extension.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":110557,"byte_end":110576,"line_start":271,"line_end":271,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":111809,"byte_end":111820,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"client_addr","qualname":"<Request>::client_addr","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the IP address of the client.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":111778,"byte_end":111797,"line_start":304,"line_end":304,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":112694,"byte_end":112699,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"parse","qualname":"<Request>::parse","value":"fn (buf: &[u8]) -> Result<Option<Request>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse an HTTP request from a buffer. If the buffer does not contain a complete\n request, this will return `Ok(None)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":113378,"byte_end":113386,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"from_url","qualname":"<Request>::from_url","value":"fn (url: &url::Url) -> Result<Request>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new WebSocket handshake HTTP request from a url.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":114787,"byte_end":114793,"line_start":389,"line_end":389,"column_start":12,"column_end":18},"name":"format","qualname":"<Request>::format","value":"fn <W> (&self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a request out to a buffer\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115672,"byte_end":115680,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"Response","qualname":"::handshake::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" The handshake response.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115908,"byte_end":115911,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn <R> (status: u16, reason: R, body: Vec<u8>) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic HTTP response with a body.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116257,"byte_end":116261,"line_start":449,"line_end":449,"column_start":12,"column_end":16},"name":"body","qualname":"<Response>::body","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the response body.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116236,"byte_end":116245,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116666,"byte_end":116676,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Response>::header_mut","value":"fn (&mut self, header: &str) -> Option<&mut Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Edit the value of the first instance of an HTTP header.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116995,"byte_end":117002,"line_start":471,"line_end":471,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn (&self) -> &Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116950,"byte_end":116969,"line_start":469,"line_end":469,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":116974,"byte_end":116983,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117151,"byte_end":117162,"line_start":478,"line_end":478,"column_start":12,"column_end":23},"name":"headers_mut","qualname":"<Response>::headers_mut","value":"fn (&mut self) -> &mut Vec<(String, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Edit the request headers.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117106,"byte_end":117125,"line_start":476,"line_end":476,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117130,"byte_end":117139,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117323,"byte_end":117329,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP status code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117278,"byte_end":117297,"line_start":483,"line_end":483,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117302,"byte_end":117311,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117456,"byte_end":117466,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response>::set_status","value":"fn (&mut self, status: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the HTTP status code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117411,"byte_end":117430,"line_start":490,"line_end":490,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117435,"byte_end":117444,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117614,"byte_end":117620,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"reason","qualname":"<Response>::reason","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the HTTP status reason.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117569,"byte_end":117588,"line_start":497,"line_end":497,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117593,"byte_end":117602,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117751,"byte_end":117761,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"set_reason","qualname":"<Response>::set_reason","value":"fn <R> (&mut self, reason: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the HTTP status reason.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117706,"byte_end":117725,"line_start":504,"line_end":504,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117730,"byte_end":117739,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":117920,"byte_end":117923,"line_start":514,"line_end":514,"column_start":12,"column_end":15},"name":"key","qualname":"<Response>::key","value":"fn (&self) -> Result<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get the hashed WebSocket key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118189,"byte_end":118197,"line_start":521,"line_end":521,"column_start":12,"column_end":20},"name":"protocol","qualname":"<Response>::protocol","value":"fn (&self) -> Result<Option<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the protocol that the server has decided to use.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118158,"byte_end":118177,"line_start":520,"line_end":520,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118491,"byte_end":118503,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"set_protocol","qualname":"<Response>::set_protocol","value":"fn (&mut self, protocol: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the protocol that the server has decided to use.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118460,"byte_end":118479,"line_start":530,"line_end":530,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118962,"byte_end":118972,"line_start":543,"line_end":543,"column_start":12,"column_end":22},"name":"extensions","qualname":"<Response>::extensions","value":"fn (&self) -> Result<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get the extensions that the server has decided to use. If these are unacceptable, it is\n appropriate to send an Extension close code.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":118931,"byte_end":118950,"line_start":542,"line_end":542,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":119408,"byte_end":119421,"line_start":557,"line_end":557,"column_start":12,"column_end":25},"name":"add_extension","qualname":"<Response>::add_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add an accepted extension to this response.\n This may result in duplicate extensions listed.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":119377,"byte_end":119396,"line_start":556,"line_end":556,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":119878,"byte_end":119894,"line_start":570,"line_end":570,"column_start":12,"column_end":28},"name":"remove_extension","qualname":"<Response>::remove_extension","value":"fn (&mut self, ext: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove an accepted extension from this response.\n This will remove all configurations of the extension.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":119847,"byte_end":119866,"line_start":569,"line_end":569,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":120620,"byte_end":120625,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"parse","qualname":"<Response>::parse","value":"fn (buf: &[u8]) -> Result<Option<Response>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse an HTTP response from a buffer. If the buffer does not contain a complete\n response, thiw will return `Ok(None)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":121494,"byte_end":121506,"line_start":613,"line_end":613,"column_start":12,"column_end":24},"name":"from_request","qualname":"<Response>::from_request","value":"fn (req: &Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new WebSocket handshake HTTP response from a request.\n This will create a response that ignores protocols and extensions. Edit this response to\n accept a protocol and extensions as necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":122052,"byte_end":122058,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"format","qualname":"<Response>::format","value":"fn <W> (&self, w: &mut W) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a response out to a buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165135,"byte_end":165139,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Text","qualname":"::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165188,"byte_end":165194,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Binary","qualname":"::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":846},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165088,"byte_end":165095,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"Message","qualname":"::message::Message","value":"Message::{Text, Binary}","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":850}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165297,"byte_end":165301,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"fn <S> (string: S) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165495,"byte_end":165501,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"fn <B> (bin: B) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165675,"byte_end":165682,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165868,"byte_end":165877,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":166055,"byte_end":166058,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":166358,"byte_end":166366,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":166553,"byte_end":166559,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"opcode","qualname":"<Message>::opcode","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":166767,"byte_end":166776,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167005,"byte_end":167014,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"fn (self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167332,"byte_end":167339,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"as_text","qualname":"<Message>::as_text","value":"fn (&self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":863},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169409,"byte_end":169417,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::OpCode::Continue","value":"OpCode::Continue","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a continuation frame of a fragmented message.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":865},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169460,"byte_end":169464,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::OpCode::Text","value":"OpCode::Text","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a text data frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":867},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169509,"byte_end":169515,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::OpCode::Binary","value":"OpCode::Binary","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a binary data frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169562,"byte_end":169567,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::OpCode::Close","value":"OpCode::Close","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a close control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":871},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169613,"byte_end":169617,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::OpCode::Ping","value":"OpCode::Ping","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a ping control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169663,"byte_end":169667,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::OpCode::Pong","value":"OpCode::Pong","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates a pong control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":875},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169723,"byte_end":169726,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::OpCode::Bad","value":"OpCode::Bad","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Indicates an invalid opcode was received.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":862},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169332,"byte_end":169338,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::OpCode","value":"OpCode::{Continue, Text, Binary, Close, Ping, Pong, Bad}","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":875}],"decl_id":null,"docs":" Operation codes as part of rfc6455.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169815,"byte_end":169825,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"is_control","qualname":"<OpCode>::is_control","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the opcode indicates a control frame.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":171471,"byte_end":171477,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":171619,"byte_end":171623,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":171727,"byte_end":171735,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":171985,"byte_end":171996,"line_start":99,"line_end":99,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":172213,"byte_end":172219,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":172561,"byte_end":172569,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":172819,"byte_end":172826,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 [RFC3629]\n data within a text message).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":173183,"byte_end":173189,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":173345,"byte_end":173349,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":173824,"byte_end":173833,"line_start":132,"line_end":132,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174011,"byte_end":174016,"line_start":136,"line_end":136,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174196,"byte_end":174203,"line_start":139,"line_end":139,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174424,"byte_end":174429,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174454,"byte_end":174457,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174482,"byte_end":174487,"line_start":147,"line_end":147,"column_start":5,"column_end":10},"name":"Empty","qualname":"::protocol::CloseCode::Empty","value":"CloseCode::Empty","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174512,"byte_end":174517,"line_start":149,"line_end":149,"column_start":5,"column_end":10},"name":"Other","qualname":"::protocol::CloseCode::Other","value":"CloseCode::Other(u16)","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":886},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":171325,"byte_end":171334,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::CloseCode","value":"CloseCode::{Normal, Away, Protocol, Unsupported, Status, Abnormal, Invalid, Policy, Size, Extension, Error, Restart, Again, Tls, Empty, Other}","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":176856,"byte_end":176862,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Result","qualname":"::result::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":177256,"byte_end":177264,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Internal","qualname":"::result::Kind::Internal","value":"Kind::Internal","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates an internal application error.\n If panic_on_internal is true, which is the default, then the application will panic.\n Otherwise the WebSocket will automatically attempt to send an Error (1011) close code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":177520,"byte_end":177528,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::result::Kind::Capacity","value":"Kind::Capacity","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates a state where some size limit has been exceeded, such as an inability to accept\n any more new connections.\n If a Connection is active, the WebSocket will automatically attempt to send\n a Size (1009) close code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":177770,"byte_end":177778,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::result::Kind::Protocol","value":"Kind::Protocol","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates a violation of the WebSocket protocol.\n The WebSocket will automatically attempt to send a Protocol (1002) close code, or if\n this error occurs during a handshake, an HTTP 400 response will be generated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":177989,"byte_end":177997,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::result::Kind::Encoding","value":"Kind::Encoding(Utf8Error)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates that the WebSocket received data that should be utf8 encoded but was not.\n The WebSocket will automatically attempt to send a Invalid Frame Payload Data (1007) close\n code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":178136,"byte_end":178138,"line_start":44,"line_end":44,"column_start":5,"column_end":7},"name":"Io","qualname":"::result::Kind::Io","value":"Kind::Io(io::Error)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates an underlying IO Error.\n This kind of error will result in a WebSocket Connection disconnecting.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":178335,"byte_end":178339,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Http","qualname":"::result::Kind::Http","value":"Kind::Http(httparse::Error)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates a failure to parse an HTTP message.\n This kind of error should only occur during a WebSocket Handshake, and a HTTP 500 response\n will be generated.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":178783,"byte_end":178788,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Queue","qualname":"::result::Kind::Queue","value":"Kind::Queue(mio::channel::SendError<Command>)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Indicates a failure to send a signal on the internal EventLoop channel. This means that\n the WebSocket is overloaded. In order to avoid this error, it is important to set\n `Settings::max_connections` and `Settings:queue_size` high enough to handle the load.\n If encountered, retuning from a handler method and waiting for the EventLoop to consume\n the queue may relieve the situation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179354,"byte_end":179360,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Custom","qualname":"::result::Kind::Custom","value":"Kind::Custom(Box<dyn StdError + Send + Sync>)","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" A custom error kind for use by applications. This error kind involves extra overhead\n because it will allocate the memory on the heap. The WebSocket ignores such errors by\n default, simply passing them to the Connection Handler.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":930},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":177008,"byte_end":177012,"line_start":24,"line_end":24,"column_start":10,"column_end":14},"name":"Kind","qualname":"::result::Kind","value":"Kind::{Internal, Capacity, Protocol, Encoding, Io, Http, Queue, Custom}","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949}],"decl_id":null,"docs":" The type of an error, which may indicate other kinds of errors as the underlying cause.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179508,"byte_end":179513,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Error","qualname":"::result::Error","value":"Error { kind, details }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":" A struct indicating the kind of error that has occurred and any precise details of that error.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":585},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179524,"byte_end":179528,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"kind","qualname":"::result::Error::kind","value":"result::Kind","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":586},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179544,"byte_end":179551,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"details","qualname":"::result::Error::details","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179599,"byte_end":179602,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn <I> (kind: Kind, details: I) -> Error","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179790,"byte_end":179798,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Error>::into_box","value":"fn (self) -> Box<dyn StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":650},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/util.rs","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"decl_id":null,"docs":" The util module rexports some tools from mio in order to facilitate handling timeouts.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":1549,"byte_end":1555,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"listen","qualname":"::listen","value":"fn <A, F, H> (addr: A, factory: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A utility function for setting up a WebSocket server.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":680},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":2397,"byte_end":2404,"line_start":110,"line_end":110,"column_start":8,"column_end":15},"name":"connect","qualname":"::connect","value":"fn <U, F, H> (url: U, factory: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A utility function for setting up a WebSocket client.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":2896,"byte_end":2904,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"Settings","qualname":"::Settings","value":"Settings { max_connections, queue_size, panic_on_new_connection, panic_on_shutdown, fragments_capacity, fragments_grow, fragment_size, max_fragment_size, in_buffer_capacity, in_buffer_grow, out_buffer_capacity, out_buffer_grow, panic_on_internal, panic_on_capacity, panic_on_protocol, panic_on_encoding, panic_on_queue, panic_on_io, panic_on_timeout, shutdown_on_interrupt, masking_strict, key_strict, method_strict, encrypt_server, tcp_nodelay }","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" WebSocket settings\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":955},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":3237,"byte_end":3252,"line_start":136,"line_end":136,"column_start":9,"column_end":24},"name":"max_connections","qualname":"::Settings::max_connections","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The maximum number of connections that this WebSocket will support.\n The default setting is low and should be increased when expecting more\n connections because this is a hard limit and no new connections beyond\n this limit can be made until an old connection is dropped.\n Default: 100\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":956},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":3816,"byte_end":3826,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"queue_size","qualname":"::Settings::queue_size","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The number of events anticipated per connection. The event loop queue size will\n be `queue_size` * `max_connections`. In order to avoid an overflow error,\n `queue_size` * `max_connections` must be less than or equal to `usize::max_value()`.\n The queue is shared between connections, which means that a connection may schedule\n more events than `queue_size` provided that another connection is using less than\n `queue_size`. However, if the queue is maxed out a Queue error will occur.\n Default: 5\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":957},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":3938,"byte_end":3961,"line_start":147,"line_end":147,"column_start":9,"column_end":32},"name":"panic_on_new_connection","qualname":"::Settings::panic_on_new_connection","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when unable to establish a new TCP connection.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":958},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4072,"byte_end":4089,"line_start":150,"line_end":150,"column_start":9,"column_end":26},"name":"panic_on_shutdown","qualname":"::Settings::panic_on_shutdown","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when a shutdown of the WebSocket is requested.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":959},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4213,"byte_end":4231,"line_start":153,"line_end":153,"column_start":9,"column_end":27},"name":"fragments_capacity","qualname":"::Settings::fragments_capacity","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The maximum number of fragments the connection can handle without reallocating.\n Default: 10\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":960},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4408,"byte_end":4422,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"fragments_grow","qualname":"::Settings::fragments_grow","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to reallocate when `fragments_capacity` is reached. If this is false,\n a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":961},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4555,"byte_end":4568,"line_start":160,"line_end":160,"column_start":9,"column_end":22},"name":"fragment_size","qualname":"::Settings::fragment_size","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The maximum length of outgoing frames. Messages longer than this will be fragmented.\n Default: 65,535\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":962},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4714,"byte_end":4731,"line_start":163,"line_end":163,"column_start":9,"column_end":26},"name":"max_fragment_size","qualname":"::Settings::max_fragment_size","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The maximum length of acceptable incoming frames. Messages longer than this will be rejected.\n Default: unlimited\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":963},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":4892,"byte_end":4910,"line_start":167,"line_end":167,"column_start":9,"column_end":27},"name":"in_buffer_capacity","qualname":"::Settings::in_buffer_capacity","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The size of the incoming buffer. A larger buffer uses more memory but will allow for fewer\n reallocations.\n Default: 2048\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":964},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":5107,"byte_end":5121,"line_start":171,"line_end":171,"column_start":9,"column_end":23},"name":"in_buffer_grow","qualname":"::Settings::in_buffer_grow","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to reallocate the incoming buffer when `in_buffer_capacity` is reached. If this is\n false, a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":965},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":5281,"byte_end":5300,"line_start":175,"line_end":175,"column_start":9,"column_end":28},"name":"out_buffer_capacity","qualname":"::Settings::out_buffer_capacity","value":"usize","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The size of the outgoing buffer. A larger buffer uses more memory but will allow for fewer\n reallocations.\n Default: 2048\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":966},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":5498,"byte_end":5513,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"name":"out_buffer_grow","qualname":"::Settings::out_buffer_grow","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to reallocate the incoming buffer when `out_buffer_capacity` is reached. If this is\n false, a Capacity error will be triggered instead.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":967},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":5797,"byte_end":5814,"line_start":184,"line_end":184,"column_start":9,"column_end":26},"name":"panic_on_internal","qualname":"::Settings::panic_on_internal","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when an Internal error is encountered. Internal errors should generally\n not occur, so this setting defaults to true as a debug measure, whereas production\n applications should consider setting it to false.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":968},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":5916,"byte_end":5933,"line_start":187,"line_end":187,"column_start":9,"column_end":26},"name":"panic_on_capacity","qualname":"::Settings::panic_on_capacity","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when a Capacity error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":969},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6035,"byte_end":6052,"line_start":190,"line_end":190,"column_start":9,"column_end":26},"name":"panic_on_protocol","qualname":"::Settings::panic_on_protocol","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when a Protocol error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":970},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6155,"byte_end":6172,"line_start":193,"line_end":193,"column_start":9,"column_end":26},"name":"panic_on_encoding","qualname":"::Settings::panic_on_encoding","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when an Encoding error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6271,"byte_end":6285,"line_start":196,"line_end":196,"column_start":9,"column_end":23},"name":"panic_on_queue","qualname":"::Settings::panic_on_queue","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when a Queue error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":972},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6382,"byte_end":6393,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"name":"panic_on_io","qualname":"::Settings::panic_on_io","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when an Io error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":973},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6492,"byte_end":6508,"line_start":202,"line_end":202,"column_start":9,"column_end":25},"name":"panic_on_timeout","qualname":"::Settings::panic_on_timeout","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to panic when a Timer error is encountered.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":974},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6619,"byte_end":6640,"line_start":205,"line_end":205,"column_start":9,"column_end":30},"name":"shutdown_on_interrupt","qualname":"::Settings::shutdown_on_interrupt","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Whether to shutdown the eventloop when an interrupt is received.\n Default: true\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":975},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":6961,"byte_end":6975,"line_start":210,"line_end":210,"column_start":9,"column_end":23},"name":"masking_strict","qualname":"::Settings::masking_strict","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires frames sent from client endpoints to be masked as a\n security and sanity precaution. Enforcing this requirement, which may be removed at some\n point may cause incompatibilities. If you need the extra security, set this to true.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":976},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":7487,"byte_end":7497,"line_start":217,"line_end":217,"column_start":9,"column_end":19},"name":"key_strict","qualname":"::Settings::key_strict","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires clients to verify the key returned by a server to ensure\n that the server and all intermediaries can perform the protocol. Verifying the key will\n consume processing time and other resources with the benefit that we can fail the\n connection early. The default in WS-RS is to accept any key from the server and instead\n fail late if a protocol error occurs. Change this setting to enable key verification.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":7901,"byte_end":7914,"line_start":223,"line_end":223,"column_start":9,"column_end":22},"name":"method_strict","qualname":"::Settings::method_strict","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The WebSocket protocol requires clients to perform an opening handshake using the HTTP\n GET method for the request. However, since only WebSockets are supported on the connection,\n verifying the method of handshake requests is not always necessary. To enforce the\n requirement that handshakes begin with a GET method, set this to true.\n Default: false\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":8457,"byte_end":8471,"line_start":232,"line_end":232,"column_start":9,"column_end":23},"name":"encrypt_server","qualname":"::Settings::encrypt_server","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Indicate whether server connections should use ssl encryption when accepting connections.\n Setting this to true means that clients should use the `wss` scheme to connect to this\n server. Note that using this flag will in general necessitate overriding the\n `Handler::upgrade_ssl_server` method in order to provide the details of the ssl context. It may be\n simpler for most users to use a reverse proxy such as nginx to provide server side\n encryption.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":8723,"byte_end":8734,"line_start":238,"line_end":238,"column_start":9,"column_end":20},"name":"tcp_nodelay","qualname":"::Settings::tcp_nodelay","value":"bool","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" Disables Nagle's algorithm.\n Usually tcp socket tries to accumulate packets to send them all together (every 200ms).\n When enabled socket will try to send packet as fast as possible.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":9874,"byte_end":9883,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" The WebSocket struct. A WebSocket can support multiple incoming and outgoing connections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":10090,"byte_end":10093,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocket<F>>::new","value":"fn (factory: F) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebSocket using the given Factory to create handlers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":10530,"byte_end":10534,"line_start":296,"line_end":296,"column_start":12,"column_end":16},"name":"bind","qualname":"<WebSocket<F>>::bind","value":"fn <A> (mut self, addr_spec: A) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and bind to the specified address.\n If the `addr_spec` yields multiple addresses this will return after the\n first successful bind. `local_addr` can be called to determine which\n address it ended up binding to.\n After the server is successfully bound you should start it using `run`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":11387,"byte_end":11393,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"listen","qualname":"<WebSocket<F>>::listen","value":"fn <A> (self, addr_spec: A) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and listen for new connections on the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":11742,"byte_end":11749,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"connect","qualname":"<WebSocket<F>>::connect","value":"fn (&mut self, url: url::Url) -> Result<&mut WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Queue an outgoing connection on this WebSocket. This method may be called multiple times,\n but the actual connections will not be established until `run` is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":12102,"byte_end":12105,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"run","qualname":"<WebSocket<F>>::run","value":"fn (mut self) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Run the WebSocket. This will run the encapsulated event loop blocking the calling thread until\n the WebSocket is shutdown.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":12509,"byte_end":12520,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"broadcaster","qualname":"<WebSocket<F>>::broadcaster","value":"fn (&self) -> Sender","parent":null,"children":[],"decl_id":null,"docs":" Get a Sender that can be used to send messages on all connections.\n Calling `send` on this Sender is equivalent to calling `broadcast`.\n Calling `shutdown` on this Sender will shutdown the WebSocket even if no connections have\n been established.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":12488,"byte_end":12497,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":12796,"byte_end":12806,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<WebSocket<F>>::local_addr","value":"fn (&self) -> ::std::io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local socket address this socket is bound to. Will return an error\n if the backend returns an error. Will return a `NotFound` error if\n this WebSocket is not a listening socket.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13006,"byte_end":13013,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":986}],"decl_id":null,"docs":" Utility for constructing a WebSocket from various settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13171,"byte_end":13174,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new Builder with default settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13373,"byte_end":13378,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn <F> (&self, factory: F) -> Result<WebSocket<F>>","parent":null,"children":[],"decl_id":null,"docs":" Build a WebSocket using this builder and a factory.\n It is possible to use the same builder to create multiple WebSockets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13651,"byte_end":13664,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"with_settings","qualname":"<Builder>::with_settings","value":"fn (&mut self, settings: Settings) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set the WebSocket settings to use.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14405,"byte_end":14412,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14888,"byte_end":14894,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15151,"byte_end":15157,"line_start":67,"line_end":67,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15303,"byte_end":15309,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15329,"byte_end":15335,"line_start":75,"line_end":75,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15472,"byte_end":15478,"line_start":83,"line_end":83,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/connection.rs","byte_start":21934,"byte_end":21939,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/connection.rs","byte_start":22814,"byte_end":22824,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":72538,"byte_end":72539,"line_start":104,"line_end":104,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":73072,"byte_end":73073,"line_start":130,"line_end":130,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75111,"byte_end":75116,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":85963,"byte_end":85968,"line_start":441,"line_end":441,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":86251,"byte_end":86256,"line_start":455,"line_end":455,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":99820,"byte_end":99821,"line_start":341,"line_end":341,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":100272,"byte_end":100273,"line_start":363,"line_end":363,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104530,"byte_end":104539,"line_start":87,"line_end":87,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105582,"byte_end":105589,"line_start":120,"line_end":120,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115164,"byte_end":115171,"line_start":404,"line_end":404,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115784,"byte_end":115792,"line_start":431,"line_end":431,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":122465,"byte_end":122473,"line_start":646,"line_end":646,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/io.rs","byte_start":127083,"byte_end":127088,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/io.rs","byte_start":127687,"byte_end":127694,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165213,"byte_end":165220,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167526,"byte_end":167533,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167643,"byte_end":167650,"line_start":110,"line_end":110,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167762,"byte_end":167769,"line_start":116,"line_end":116,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167875,"byte_end":167882,"line_start":122,"line_end":122,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167986,"byte_end":167993,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169736,"byte_end":169742,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169976,"byte_end":169982,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":170388,"byte_end":170394,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":170910,"byte_end":170916,"line_start":68,"line_end":68,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174546,"byte_end":174555,"line_start":152,"line_end":152,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":175098,"byte_end":175107,"line_start":175,"line_end":175,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179580,"byte_end":179585,"line_start":73,"line_end":73,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179964,"byte_end":179969,"line_start":92,"line_end":92,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":180247,"byte_end":180252,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":180518,"byte_end":180523,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":181829,"byte_end":181834,"line_start":144,"line_end":144,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":181954,"byte_end":181959,"line_start":150,"line_end":150,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":182738,"byte_end":182743,"line_start":168,"line_end":168,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":182989,"byte_end":182994,"line_start":177,"line_end":177,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":183475,"byte_end":183480,"line_start":197,"line_end":197,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185489,"byte_end":185490,"line_start":68,"line_end":68,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185529,"byte_end":185530,"line_start":69,"line_end":69,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185678,"byte_end":185684,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":187718,"byte_end":187724,"line_start":148,"line_end":148,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":190931,"byte_end":190937,"line_start":216,"line_end":216,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":8762,"byte_end":8770,"line_start":241,"line_end":241,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":9967,"byte_end":9976,"line_start":282,"line_end":282,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13098,"byte_end":13105,"line_start":368,"line_end":368,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":730,"byte_end":734,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":650}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14405,"byte_end":14412,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":14888,"byte_end":14894,"line_start":59,"line_end":59,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15151,"byte_end":15157,"line_start":67,"line_end":67,"column_start":20,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15303,"byte_end":15309,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15329,"byte_end":15335,"line_start":75,"line_end":75,"column_start":15,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":6827}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/communication.rs","byte_start":15472,"byte_end":15478,"line_start":83,"line_end":83,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/connection.rs","byte_start":21934,"byte_end":21939,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/connection.rs","byte_start":22814,"byte_end":22824,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":72538,"byte_end":72539,"line_start":104,"line_end":104,"column_start":24,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/factory.rs","byte_start":73072,"byte_end":73073,"line_start":130,"line_end":130,"column_start":22,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":783},"to":{"krate":0,"index":279}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":75111,"byte_end":75116,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":85963,"byte_end":85968,"line_start":441,"line_end":441,"column_start":18,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/frame.rs","byte_start":86251,"byte_end":86256,"line_start":455,"line_end":455,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":99820,"byte_end":99821,"line_start":341,"line_end":341,"column_start":21,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":293},"to":{"krate":0,"index":279}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handler.rs","byte_start":100272,"byte_end":100273,"line_start":363,"line_end":363,"column_start":22,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":279}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":104530,"byte_end":104539,"line_start":87,"line_end":87,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":105582,"byte_end":105589,"line_start":120,"line_end":120,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115164,"byte_end":115171,"line_start":404,"line_end":404,"column_start":23,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":115784,"byte_end":115792,"line_start":431,"line_end":431,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/handshake.rs","byte_start":122465,"byte_end":122473,"line_start":646,"line_end":646,"column_start":23,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/io.rs","byte_start":127083,"byte_end":127088,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/io.rs","byte_start":127687,"byte_end":127694,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":165213,"byte_end":165220,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167526,"byte_end":167533,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167643,"byte_end":167650,"line_start":110,"line_end":110,"column_start":28,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167762,"byte_end":167769,"line_start":116,"line_end":116,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167875,"byte_end":167882,"line_start":122,"line_end":122,"column_start":24,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/message.rs","byte_start":167986,"byte_end":167993,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169736,"byte_end":169742,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":169976,"byte_end":169982,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":170388,"byte_end":170394,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":170910,"byte_end":170916,"line_start":68,"line_end":68,"column_start":19,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":174546,"byte_end":174555,"line_start":152,"line_end":152,"column_start":20,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/protocol.rs","byte_start":175098,"byte_end":175107,"line_start":175,"line_end":175,"column_start":20,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179580,"byte_end":179585,"line_start":73,"line_end":73,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":179964,"byte_end":179969,"line_start":92,"line_end":92,"column_start":21,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":180247,"byte_end":180252,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":180518,"byte_end":180523,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":1559}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":181829,"byte_end":181834,"line_start":144,"line_end":144,"column_start":26,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":181954,"byte_end":181959,"line_start":150,"line_end":150,"column_start":32,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":182738,"byte_end":182743,"line_start":168,"line_end":168,"column_start":49,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":182989,"byte_end":182994,"line_start":177,"line_end":177,"column_start":26,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/result.rs","byte_start":183475,"byte_end":183480,"line_start":197,"line_end":197,"column_start":26,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":184438,"byte_end":184442,"line_start":31,"line_end":31,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2781},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185171,"byte_end":185176,"line_start":53,"line_end":53,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2835},"to":{"krate":0,"index":626}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185489,"byte_end":185490,"line_start":68,"line_end":68,"column_start":34,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":630},"to":{"krate":0,"index":623}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185529,"byte_end":185530,"line_start":69,"line_end":69,"column_start":36,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":632},"to":{"krate":0,"index":626}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":185678,"byte_end":185684,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":187718,"byte_end":187724,"line_start":148,"line_end":148,"column_start":19,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2781}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/stream.rs","byte_start":190931,"byte_end":190937,"line_start":216,"line_end":216,"column_start":20,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":634},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":8762,"byte_end":8770,"line_start":241,"line_end":241,"column_start":18,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":9967,"byte_end":9976,"line_start":282,"line_end":282,"column_start":9,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/ws-0.9.1/src/lib.rs","byte_start":13098,"byte_end":13105,"line_start":368,"line_end":368,"column_start":6,"column_end":13},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}}]}