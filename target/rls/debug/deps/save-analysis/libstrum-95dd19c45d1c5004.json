{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","strum","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=95dd19c45d1c5004","-C","extra-filename=-95dd19c45d1c5004","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libstrum-95dd19c45d1c5004.rmeta"},"prelude":{"crate_id":{"name":"strum","disambiguator":[14506632732152711620,18021624921748670000]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":0,"byte_end":7241,"line_start":1,"line_end":208,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":0,"byte_end":7241,"line_start":1,"line_end":208,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":32},{"krate":0,"index":45},{"krate":0,"index":43},{"krate":0,"index":42},{"krate":0,"index":40},{"krate":0,"index":38},{"krate":0,"index":35},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":23},{"krate":0,"index":27},{"krate":0,"index":30}],"decl_id":null,"docs":" # Strum","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2564,"byte_end":2579,"line_start":54,"line_end":54,"column_start":5,"column_end":20},"name":"VariantNotFound","qualname":"::ParseError::VariantNotFound","value":"ParseError::VariantNotFound","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":32},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2546,"byte_end":2556,"line_start":53,"line_end":53,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"ParseError::{VariantNotFound}","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" The ParseError enum is a collection of all the possible reasons\n an enum can fail to parse from a string.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":4377,"byte_end":4393,"line_start":113,"line_end":113,"column_start":11,"column_end":27},"name":"IntoEnumIterator","qualname":"::IntoEnumIterator","value":"IntoEnumIterator","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" This trait designates that an `Enum` can be iterated over. It can\n be auto generated using `strum_macros` on your behalf.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":4406,"byte_end":4414,"line_start":114,"line_end":114,"column_start":10,"column_end":18},"name":"Iterator","qualname":"::IntoEnumIterator::Iterator","value":"type Iterator;","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":4426,"byte_end":4430,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"iter","qualname":"::IntoEnumIterator::iter","value":"fn () -> Self::Iterator","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":5278,"byte_end":5289,"line_start":146,"line_end":146,"column_start":11,"column_end":22},"name":"EnumMessage","qualname":"::EnumMessage","value":"EnumMessage","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" Associates additional pieces of information with an Enum. This can be\n autoimplemented by deriving `EnumMessage` and annotating your variants with\n `#[strum(message=\"...\")].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":5300,"byte_end":5311,"line_start":147,"line_end":147,"column_start":8,"column_end":19},"name":"get_message","qualname":"::EnumMessage::get_message","value":"fn (&self) -> Option<&str>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":5344,"byte_end":5364,"line_start":148,"line_end":148,"column_start":8,"column_end":28},"name":"get_detailed_message","qualname":"::EnumMessage::get_detailed_message","value":"fn (&self) -> Option<&str>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":5397,"byte_end":5415,"line_start":149,"line_end":149,"column_start":8,"column_end":26},"name":"get_serializations","qualname":"::EnumMessage::get_serializations","value":"fn (&self) -> &[&str]","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":6518,"byte_end":6530,"line_start":183,"line_end":183,"column_start":11,"column_end":23},"name":"EnumProperty","qualname":"::EnumProperty","value":"EnumProperty","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" EnumProperty is a trait that makes it possible to store additional information\n with enum variants. This trait is designed to be used with the macro of the same\n name in the `strum_macros` crate. Currently, the only string literals are supported\n in attributes, the other methods will be implemented as additional attribute types\n become stabilized.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":6541,"byte_end":6548,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"get_str","qualname":"::EnumProperty::get_str","value":"fn (&self, &str) -> Option<&'static str>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":6595,"byte_end":6602,"line_start":185,"line_end":185,"column_start":8,"column_end":15},"name":"get_int","qualname":"::EnumProperty::get_int","value":"fn (&self, &str) -> Option<usize>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":6674,"byte_end":6682,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"get_bool","qualname":"::EnumProperty::get_bool","value":"fn (&self, &str) -> Option<bool>","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":6991,"byte_end":7002,"line_start":197,"line_end":197,"column_start":11,"column_end":22},"name":"AsStaticRef","qualname":"::AsStaticRef","value":"AsStaticRef<T>","parent":null,"children":[{"krate":0,"index":29}],"decl_id":null,"docs":" A cheap reference-to-reference conversion. Used to convert a value to a\n reference value with `'static` lifetime within generic code.\n #[deprecated(since=\"0.13.0\", note=\"please use `#[derive(IntoStaticStr)]` instead\")]\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":7040,"byte_end":7049,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"as_static","qualname":"::AsStaticRef::as_static","value":"fn (&self) -> &'static T","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":7201,"byte_end":7210,"line_start":206,"line_end":206,"column_start":11,"column_end":20},"name":"EnumCount","qualname":"::EnumCount","value":"EnumCount","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" A trait for capturing the number of variants in Enum. This trait can be autoderived by\n `strum_macros`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":7221,"byte_end":7226,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"count","qualname":"::EnumCount::count","value":"fn () -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2614,"byte_end":2624,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2981,"byte_end":2991,"line_start":67,"line_end":67,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2614,"byte_end":2624,"line_start":57,"line_end":57,"column_start":28,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":7190}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.15.0/src/lib.rs","byte_start":2981,"byte_end":2991,"line_start":67,"line_end":67,"column_start":28,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":1,"index":1559}}]}