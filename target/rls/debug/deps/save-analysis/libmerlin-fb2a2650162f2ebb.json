{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","merlin","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=fb2a2650162f2ebb","-C","extra-filename=-fb2a2650162f2ebb","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","byteorder=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libbyteorder-c067064d0ed94452.rmeta","--extern","clear_on_drop=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libclear_on_drop-92a3a4f14fa8992a.rmeta","--extern","keccak=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libkeccak-869eb9231c3dd135.rmeta","--extern","rand_core=/home/gautam/code/substrate-tcr/target/rls/debug/deps/librand_core-3e8e9d833d923e55.rmeta","--cap-lints","allow","-L","native=/home/gautam/code/substrate-tcr/target/rls/debug/build/clear_on_drop-68a64256f2cb24fa/out","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libmerlin-fb2a2650162f2ebb.rmeta"},"prelude":{"crate_id":{"name":"merlin","disambiguator":[903407956799701755,1761285421359346794]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","num":4,"id":{"name":"keccak","disambiguator":[562139797121597846,6932674490388539455]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","num":5,"id":{"name":"clear_on_drop","disambiguator":[12398394434860137889,15350176217158186041]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":6,"id":{"name":"rand_core","disambiguator":[5522200777290017131,14411151888041535748]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":7,"id":{"name":"std","disambiguator":[4418738106075590160,6298063093324017560]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":8,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":9,"id":{"name":"libc","disambiguator":[6161946279237914842,16521306710208745576]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":10,"id":{"name":"unwind","disambiguator":[6542909105960794691,9677219093962929367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":11,"id":{"name":"cfg_if","disambiguator":[5468829561226316808,7834745881253856659]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17700629721805382410,8884445337419759755]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5673318663856259921,7992701887106127366]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":14,"id":{"name":"backtrace","disambiguator":[14096840682646779984,4894716104918169263]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[17167590092810160364,15681868143498786567]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":16,"id":{"name":"backtrace_sys","disambiguator":[9809686796458150241,12960706147778414440]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14218938340851961837,11099897245983054425]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","num":18,"id":{"name":"byteorder","disambiguator":[4550665113768483084,8114487136530570366]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":0,"byte_end":818,"line_start":1,"line_end":24,"column_start":1,"column_end":49}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":716,"byte_end":726,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"alias_span":null,"name":"Transcript","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":755,"byte_end":768,"line_start":23,"line_end":23,"column_start":28,"column_end":41},"alias_span":null,"name":"TranscriptRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":797,"byte_end":817,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"alias_span":null,"name":"TranscriptRngBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":0,"byte_end":818,"line_start":1,"line_end":24,"column_start":1,"column_end":49},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":54},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" Note that docs will only build on nightly Rust until\n [RFC 1990 stabilizes](https://github.com/rust-lang/rust/issues/44732).\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/lib.rs","byte_start":34,"byte_end":40,"line_start":1,"line_end":1,"column_start":35,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":9001,"byte_end":9011,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"Transcript","qualname":"::transcript::Transcript","value":"Transcript {  }","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" A transcript of a public-coin argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":9527,"byte_end":9530,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Transcript>::new","value":"fn (label: &'static [u8]) -> Transcript","parent":null,"children":[],"decl_id":null,"docs":" Initialize a new transcript with the supplied `label`, which\n is used as a domain separator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":10446,"byte_end":10460,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"append_message","qualname":"<Transcript>::append_message","value":"fn (&mut self, label: &'static [u8], message: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append a prover's `message` to the transcript.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":12039,"byte_end":12051,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"commit_bytes","qualname":"<Transcript>::commit_bytes","value":"fn (&mut self, label: &'static [u8], message: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Deprecated.  This function was renamed to\n [`append_message`](Transcript::append_message).","sig":null,"attributes":[{"value":"deprecated(since = \"1.1.0\", note =\n             \"renamed to append_message for clarity.\")","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":11948,"byte_end":12027,"line_start":138,"line_end":138,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":12618,"byte_end":12628,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"append_u64","qualname":"<Transcript>::append_u64","value":"fn (&mut self, label: &'static [u8], x: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for appending a `u64` to the transcript.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":13063,"byte_end":13073,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"commit_u64","qualname":"<Transcript>::commit_u64","value":"fn (&mut self, label: &'static [u8], x: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Deprecated.  This function was renamed to\n [`append_u64`](Transcript::append_u64).","sig":null,"attributes":[{"value":"deprecated(since = \"1.1.0\", note = \"renamed to append_u64 for clarity.\")","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":12976,"byte_end":13051,"line_start":163,"line_end":163,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":13499,"byte_end":13514,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"challenge_bytes","qualname":"<Transcript>::challenge_bytes","value":"fn (&mut self, label: &'static [u8], dest: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fill the supplied buffer with the verifier's challenge bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":14631,"byte_end":14640,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"build_rng","qualname":"<Transcript>::build_rng","value":"fn (&self) -> TranscriptRngBuilder","parent":null,"children":[],"decl_id":null,"docs":" Fork the current [`Transcript`] to construct an RNG whose output is bound\n to the current transcript state as well as prover's secrets.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":17789,"byte_end":17809,"line_start":280,"line_end":280,"column_start":12,"column_end":32},"name":"TranscriptRngBuilder","qualname":"::transcript::TranscriptRngBuilder","value":"TranscriptRngBuilder {  }","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" Constructs a [`TranscriptRng`] by rekeying the [`Transcript`] with\n prover secrets and an external RNG.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":18006,"byte_end":18030,"line_start":288,"line_end":288,"column_start":12,"column_end":36},"name":"rekey_with_witness_bytes","qualname":"<TranscriptRngBuilder>::rekey_with_witness_bytes","value":"fn (mut self, label: &'static [u8], witness: &[u8]) -> TranscriptRngBuilder","parent":null,"children":[],"decl_id":null,"docs":" Rekey the transcript using the provided witness data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":18748,"byte_end":18768,"line_start":310,"line_end":310,"column_start":12,"column_end":32},"name":"commit_witness_bytes","qualname":"<TranscriptRngBuilder>::commit_witness_bytes","value":"fn (self, label: &'static [u8], witness: &[u8]) -> TranscriptRngBuilder","parent":null,"children":[],"decl_id":null,"docs":" Deprecated.  This function was renamed to\n [`rekey_with_witness_bytes`](Transcript::rekey_with_witness_bytes).","sig":null,"attributes":[{"value":"deprecated(since = \"1.1.0\", note =\n             \"renamed to rekey_with_witness_bytes for clarity.\")","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":18625,"byte_end":18736,"line_start":306,"line_end":309,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":19161,"byte_end":19169,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"finalize","qualname":"<TranscriptRngBuilder>::finalize","value":"fn <R> (mut self, rng: &mut R) -> TranscriptRng","parent":null,"children":[],"decl_id":null,"docs":" Use the supplied external `rng` to rekey the transcript, so\n that the finalized [`TranscriptRng`] is a PRF bound to\n randomness from the external RNG, as well as all other\n transcript data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":19987,"byte_end":20000,"line_start":350,"line_end":350,"column_start":12,"column_end":25},"name":"TranscriptRng","qualname":"::transcript::TranscriptRng","value":"TranscriptRng {  }","parent":null,"children":[{"krate":0,"index":87}],"decl_id":null,"docs":" An RNG providing synthetic randomness to the prover.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2211,"byte_end":2220,"line_start":38,"line_end":38,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2437,"byte_end":2446,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2617,"byte_end":2626,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":3752,"byte_end":3761,"line_start":97,"line_end":97,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":5777,"byte_end":5795,"line_start":171,"line_end":171,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":5910,"byte_end":5928,"line_start":179,"line_end":179,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":9045,"byte_end":9055,"line_start":57,"line_end":57,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":17843,"byte_end":17863,"line_start":284,"line_end":284,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":20057,"byte_end":20070,"line_start":354,"line_end":354,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":20624,"byte_end":20637,"line_start":375,"line_end":375,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2211,"byte_end":2220,"line_start":38,"line_end":38,"column_start":29,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2437,"byte_end":2446,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":2617,"byte_end":2626,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":3752,"byte_end":3761,"line_start":97,"line_end":97,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":5777,"byte_end":5795,"line_start":171,"line_end":171,"column_start":16,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/strobe.rs","byte_start":5910,"byte_end":5928,"line_start":179,"line_end":179,"column_start":19,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":1715}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":9045,"byte_end":9055,"line_start":57,"line_end":57,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":17843,"byte_end":17863,"line_start":284,"line_end":284,"column_start":6,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":20057,"byte_end":20070,"line_start":354,"line_end":354,"column_start":29,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":86},"to":{"krate":6,"index":132}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/merlin-1.2.1/src/transcript.rs","byte_start":20624,"byte_end":20637,"line_start":375,"line_end":375,"column_start":31,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":86},"to":{"krate":6,"index":137}}]}