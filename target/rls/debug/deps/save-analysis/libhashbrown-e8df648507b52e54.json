{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1","program":"/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","hashbrown","/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"default\"","-C","metadata=e8df648507b52e54","-C","extra-filename=-e8df648507b52e54","--out-dir","/home/gautam/code/substrate-tcr/target/rls/debug/deps","-L","dependency=/home/gautam/code/substrate-tcr/target/rls/debug/deps","--extern","ahash=/home/gautam/code/substrate-tcr/target/rls/debug/deps/libahash-ce2e07cf4d0a95aa.rmeta","--cap-lints","allow","--cfg","has_extern_crate_alloc","--error-format=json","--sysroot","/home/gautam/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gautam/code/substrate-tcr/target/rls/debug/deps/libhashbrown-e8df648507b52e54.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[12760399664937609907,5986446091373026845]},"crate_root":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src","external_crates":[{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9113878364975505769,4626460723841361367]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10636203250160794641,6979396832464280682]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7259142600435629501,12221323364939802703]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[245280942947536957,12219005383890086938]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","num":5,"id":{"name":"ahash","disambiguator":[5116366437342163417,6098651276418575353]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","num":6,"id":{"name":"const_random","disambiguator":[12929567993779966176,9803541339806629746]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","num":7,"id":{"name":"proc_macro_hack","disambiguator":[9091753521949025519,87820346226991434]}},{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","num":8,"id":{"name":"const_random_macro","disambiguator":[17080370671130127106,6374638043624601620]}}],"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":0,"byte_end":3289,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":1495,"byte_end":1496,"line_start":54,"line_end":54,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1239}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":1495,"byte_end":1496,"line_start":54,"line_end":54,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1241}},{"kind":"Use","ref_id":{"krate":0,"index":1290},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":2825,"byte_end":2832,"line_start":103,"line_end":103,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":2854,"byte_end":2861,"line_start":104,"line_end":104,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":0,"byte_end":3289,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":896},{"krate":0,"index":921},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1309},{"krate":0,"index":1321},{"krate":0,"index":1318},{"krate":0,"index":1316},{"krate":0,"index":1314}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":787,"byte_end":809,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"allow(clippy :: module_name_repetitions)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":810,"byte_end":852,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":853,"byte_end":879,"line_start":27,"line_end":27,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":57533,"byte_end":57551,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::ABuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":57498,"byte_end":57523,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1290},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":64019,"byte_end":64026,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":64754,"byte_end":64757,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":64733,"byte_end":64742,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":65212,"byte_end":65225,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":65191,"byte_end":65200,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":66116,"byte_end":66127,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":66095,"byte_end":66104,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":67118,"byte_end":67142,"line_start":292,"line_end":292,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":67097,"byte_end":67106,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":67800,"byte_end":67806,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":67779,"byte_end":67788,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":68315,"byte_end":68323,"line_start":331,"line_end":331,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":68294,"byte_end":68303,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":68812,"byte_end":68816,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":68791,"byte_end":68800,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":69324,"byte_end":69330,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn (&self) -> Values<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":69303,"byte_end":69312,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":69948,"byte_end":69958,"line_start":402,"line_end":402,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":69927,"byte_end":69936,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":70546,"byte_end":70550,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":70525,"byte_end":70534,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":71415,"byte_end":71423,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":71394,"byte_end":71403,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72070,"byte_end":72073,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72049,"byte_end":72058,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72429,"byte_end":72437,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72408,"byte_end":72417,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72995,"byte_end":73000,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"fn (&mut self) -> Drain<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":72974,"byte_end":72983,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":73537,"byte_end":73542,"line_start":553,"line_end":553,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":73516,"byte_end":73525,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":74229,"byte_end":74236,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":74208,"byte_end":74217,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":75014,"byte_end":75025,"line_start":604,"line_end":604,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":74993,"byte_end":75002,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":75812,"byte_end":75825,"line_start":627,"line_end":627,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":75791,"byte_end":75800,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":76798,"byte_end":76807,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":76777,"byte_end":76786,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":77567,"byte_end":77572,"line_start":682,"line_end":682,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":77546,"byte_end":77555,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":78697,"byte_end":78700,"line_start":719,"line_end":719,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":78676,"byte_end":78685,"line_start":718,"line_end":718,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":79543,"byte_end":79556,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn <Q> (&self, k: &Q) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":79522,"byte_end":79531,"line_start":746,"line_end":746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":80597,"byte_end":80609,"line_start":781,"line_end":781,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":80576,"byte_end":80585,"line_start":780,"line_end":780,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":81425,"byte_end":81432,"line_start":811,"line_end":811,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":81404,"byte_end":81413,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":82668,"byte_end":82674,"line_start":848,"line_end":848,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":82647,"byte_end":82656,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":83856,"byte_end":83862,"line_start":883,"line_end":883,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":83835,"byte_end":83844,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":84769,"byte_end":84781,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"fn <Q> (&mut self, k: &Q) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":84748,"byte_end":84757,"line_start":913,"line_end":913,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":85623,"byte_end":85629,"line_start":943,"line_end":943,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":88140,"byte_end":88153,"line_start":997,"line_end":997,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"fn (&mut self) -> RawEntryBuilderMut<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":88119,"byte_end":88128,"line_start":996,"line_end":996,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":88956,"byte_end":88965,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"fn (&self) -> RawEntryBuilder<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":88935,"byte_end":88944,"line_start":1016,"line_end":1016,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":90663,"byte_end":90667,"line_start":1094,"line_end":1094,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91452,"byte_end":91459,"line_start":1123,"line_end":1123,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":92434,"byte_end":92442,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":421}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93002,"byte_end":93006,"line_start":1174,"line_end":1174,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":430}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93695,"byte_end":93701,"line_start":1201,"line_end":1201,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":443}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":94402,"byte_end":94407,"line_start":1228,"line_end":1228,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":95000,"byte_end":95009,"line_start":1250,"line_end":1250,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":465}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":95296,"byte_end":95314,"line_start":1259,"line_end":1259,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":471}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":95919,"byte_end":95927,"line_start":1276,"line_end":1276,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut<'a, K, V>)","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":480},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":95988,"byte_end":95994,"line_start":1278,"line_end":1278,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":472},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":95861,"byte_end":95872,"line_start":1274,"line_end":1274,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"RawEntryMut::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":480}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96183,"byte_end":96202,"line_start":1285,"line_end":1285,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96617,"byte_end":96634,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96944,"byte_end":96959,"line_start":1317,"line_end":1317,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":507}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97208,"byte_end":97216,"line_start":1328,"line_end":1328,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"fn <Q> (self, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97143,"byte_end":97152,"line_start":1326,"line_end":1326,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97157,"byte_end":97196,"line_start":1327,"line_end":1327,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97619,"byte_end":97642,"line_start":1341,"line_end":1341,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97554,"byte_end":97563,"line_start":1339,"line_end":1339,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97568,"byte_end":97607,"line_start":1340,"line_end":1340,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98019,"byte_end":98028,"line_start":1357,"line_end":1357,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97954,"byte_end":97963,"line_start":1355,"line_end":1355,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97968,"byte_end":98007,"line_start":1356,"line_end":1356,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98925,"byte_end":98933,"line_start":1389,"line_end":1389,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"fn <Q> (self, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98860,"byte_end":98869,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98874,"byte_end":98913,"line_start":1388,"line_end":1388,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99316,"byte_end":99339,"line_start":1402,"line_end":1402,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99251,"byte_end":99260,"line_start":1400,"line_end":1400,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99265,"byte_end":99304,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99983,"byte_end":99992,"line_start":1427,"line_end":1427,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99918,"byte_end":99927,"line_start":1425,"line_end":1425,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":99932,"byte_end":99971,"line_start":1426,"line_end":1426,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":100601,"byte_end":100607,"line_start":1449,"line_end":1449,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"fn (self, key: K, value: V) -> RawOccupiedEntryMut<'a, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":100580,"byte_end":100589,"line_start":1448,"line_end":1448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":101549,"byte_end":101558,"line_start":1480,"line_end":1480,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"fn (self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":101528,"byte_end":101537,"line_start":1479,"line_end":1479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":102427,"byte_end":102441,"line_start":1508,"line_end":1508,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"fn <F> (self, default: F) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":102406,"byte_end":102415,"line_start":1507,"line_end":1507,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":103502,"byte_end":103512,"line_start":1546,"line_end":1546,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":103481,"byte_end":103490,"line_start":1545,"line_end":1545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104053,"byte_end":104056,"line_start":1566,"line_end":1566,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104032,"byte_end":104041,"line_start":1565,"line_end":1565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104203,"byte_end":104210,"line_start":1572,"line_end":1572,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"fn (&mut self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104182,"byte_end":104191,"line_start":1571,"line_end":1571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104436,"byte_end":104444,"line_start":1579,"line_end":1579,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"fn (self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104415,"byte_end":104424,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104595,"byte_end":104598,"line_start":1585,"line_end":1585,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104574,"byte_end":104583,"line_start":1584,"line_end":1584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104822,"byte_end":104830,"line_start":1592,"line_end":1592,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104801,"byte_end":104810,"line_start":1591,"line_end":1591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104989,"byte_end":104996,"line_start":1598,"line_end":1598,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":104968,"byte_end":104977,"line_start":1597,"line_end":1597,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105157,"byte_end":105170,"line_start":1604,"line_end":1604,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"fn (&mut self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105136,"byte_end":105145,"line_start":1603,"line_end":1603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105408,"byte_end":105425,"line_start":1613,"line_end":1613,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"fn (&mut self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105387,"byte_end":105396,"line_start":1612,"line_end":1612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105758,"byte_end":105772,"line_start":1623,"line_end":1623,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"fn (self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":105737,"byte_end":105746,"line_start":1622,"line_end":1622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106035,"byte_end":106041,"line_start":1632,"line_end":1632,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106014,"byte_end":106023,"line_start":1631,"line_end":1631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106218,"byte_end":106228,"line_start":1638,"line_end":1638,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"fn (&mut self, key: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106197,"byte_end":106206,"line_start":1637,"line_end":1637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106387,"byte_end":106393,"line_start":1644,"line_end":1644,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106366,"byte_end":106375,"line_start":1643,"line_end":1643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106531,"byte_end":106543,"line_start":1650,"line_end":1650,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106510,"byte_end":106519,"line_start":1649,"line_end":1649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106864,"byte_end":106870,"line_start":1662,"line_end":1662,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"fn (self, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106843,"byte_end":106852,"line_start":1661,"line_end":1661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":107314,"byte_end":107335,"line_start":1676,"line_end":1676,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"fn (self, hash: u64, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":107254,"byte_end":107263,"line_start":1674,"line_end":1674,"column_start":5,"column_end":14}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":107268,"byte_end":107302,"line_start":1675,"line_end":1675,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":107679,"byte_end":107697,"line_start":1687,"line_end":1687,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"fn <H> (self, hash: u64, key: K, value: V, hasher: H) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":107658,"byte_end":107667,"line_start":1686,"line_end":1686,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110070,"byte_end":110078,"line_start":1769,"line_end":1769,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110137,"byte_end":110143,"line_start":1772,"line_end":1772,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":611},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110018,"byte_end":110023,"line_start":1767,"line_end":1767,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":619}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110629,"byte_end":110642,"line_start":1788,"line_end":1788,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":111367,"byte_end":111378,"line_start":1822,"line_end":1822,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":117452,"byte_end":117458,"line_start":2080,"line_end":2080,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"fn (self, value: V) -> OccupiedEntry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":117431,"byte_end":117440,"line_start":2079,"line_end":2079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":118299,"byte_end":118308,"line_start":2111,"line_end":2111,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":118278,"byte_end":118287,"line_start":2110,"line_end":2110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":119063,"byte_end":119077,"line_start":2138,"line_end":2138,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":119042,"byte_end":119051,"line_start":2137,"line_end":2137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":119634,"byte_end":119637,"line_start":2160,"line_end":2160,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":119613,"byte_end":119622,"line_start":2159,"line_end":2159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":120391,"byte_end":120401,"line_start":2188,"line_end":2188,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":120370,"byte_end":120379,"line_start":2187,"line_end":2187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121216,"byte_end":121226,"line_start":2219,"line_end":2219,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121195,"byte_end":121204,"line_start":2218,"line_end":2218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121858,"byte_end":121861,"line_start":2244,"line_end":2244,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121837,"byte_end":121846,"line_start":2243,"line_end":2243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":122479,"byte_end":122491,"line_start":2267,"line_end":2267,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":122458,"byte_end":122467,"line_start":2266,"line_end":2266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":123066,"byte_end":123069,"line_start":2290,"line_end":2290,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":123045,"byte_end":123054,"line_start":2289,"line_end":2289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":123994,"byte_end":124001,"line_start":2322,"line_end":2322,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":123973,"byte_end":123982,"line_start":2321,"line_end":2321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":124818,"byte_end":124826,"line_start":2350,"line_end":2350,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":124797,"byte_end":124806,"line_start":2349,"line_end":2349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":125415,"byte_end":125421,"line_start":2372,"line_end":2372,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":125394,"byte_end":125403,"line_start":2371,"line_end":2371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":126068,"byte_end":126074,"line_start":2396,"line_end":2396,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":126047,"byte_end":126056,"line_start":2395,"line_end":2395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":126859,"byte_end":126872,"line_start":2421,"line_end":2421,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn (self, value: V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":126838,"byte_end":126847,"line_start":2420,"line_end":2420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":127998,"byte_end":128009,"line_start":2455,"line_end":2455,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":127977,"byte_end":127986,"line_start":2454,"line_end":2454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128541,"byte_end":128544,"line_start":2474,"line_end":2474,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128520,"byte_end":128529,"line_start":2473,"line_end":2473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128945,"byte_end":128953,"line_start":2493,"line_end":2493,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128924,"byte_end":128933,"line_start":2492,"line_end":2492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":129469,"byte_end":129475,"line_start":2514,"line_end":2514,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":129448,"byte_end":129457,"line_start":2513,"line_end":2513,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":166627,"byte_end":166634,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1304}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167121,"byte_end":167124,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167100,"byte_end":167109,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167642,"byte_end":167655,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167621,"byte_end":167630,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168090,"byte_end":168098,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168069,"byte_end":168078,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168588,"byte_end":168592,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168567,"byte_end":168576,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168980,"byte_end":168983,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":168959,"byte_end":168968,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":169332,"byte_end":169340,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":169311,"byte_end":169320,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":169853,"byte_end":169858,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"fn (&mut self) -> Drain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":169832,"byte_end":169841,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":170233,"byte_end":170238,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":170212,"byte_end":170221,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":171101,"byte_end":171112,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"fn (hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":171080,"byte_end":171089,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":172069,"byte_end":172093,"line_start":327,"line_end":327,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":172048,"byte_end":172057,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":172730,"byte_end":172736,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":172709,"byte_end":172718,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":173297,"byte_end":173304,"line_start":369,"line_end":369,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":173276,"byte_end":173285,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":173976,"byte_end":173987,"line_start":390,"line_end":390,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":173955,"byte_end":173964,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":174652,"byte_end":174665,"line_start":411,"line_end":411,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":174631,"byte_end":174640,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":175446,"byte_end":175455,"line_start":437,"line_end":437,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":175425,"byte_end":175434,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":176362,"byte_end":176372,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"fn <'a> (&'a self, other: &'a Self) -> Difference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":176341,"byte_end":176350,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":177286,"byte_end":177306,"line_start":494,"line_end":494,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a Self) -> SymmetricDifference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":177265,"byte_end":177274,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":178125,"byte_end":178137,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"fn <'a> (&'a self, other: &'a Self) -> Intersection<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":178104,"byte_end":178113,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":178906,"byte_end":178911,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"fn <'a> (&'a self, other: &'a Self) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":178885,"byte_end":178894,"line_start":544,"line_end":544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":179707,"byte_end":179715,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":179686,"byte_end":179695,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":180542,"byte_end":180545,"line_start":597,"line_end":597,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":180521,"byte_end":180530,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":181216,"byte_end":181229,"line_start":620,"line_end":620,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"fn (&mut self, value: T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":181195,"byte_end":181204,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":182240,"byte_end":182258,"line_start":649,"line_end":649,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"fn <Q, F> (&mut self, value: &Q, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":182219,"byte_end":182228,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":183264,"byte_end":183275,"line_start":681,"line_end":681,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":183897,"byte_end":183906,"line_start":702,"line_end":702,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":184674,"byte_end":184685,"line_start":731,"line_end":731,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":184653,"byte_end":184662,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":185231,"byte_end":185237,"line_start":753,"line_end":753,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":185210,"byte_end":185219,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":185837,"byte_end":185844,"line_start":773,"line_end":773,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":185816,"byte_end":185825,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":186817,"byte_end":186823,"line_start":805,"line_end":805,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":186796,"byte_end":186805,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":187658,"byte_end":187662,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":187637,"byte_end":187646,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188261,"byte_end":188267,"line_start":854,"line_end":854,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1051},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":193500,"byte_end":193504,"line_start":1077,"line_end":1077,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1054}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":193869,"byte_end":193877,"line_start":1088,"line_end":1088,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1057}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":194182,"byte_end":194187,"line_start":1099,"line_end":1099,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1061}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":194537,"byte_end":194549,"line_start":1110,"line_end":1110,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":194969,"byte_end":194979,"line_start":1124,"line_end":1124,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":195439,"byte_end":195458,"line_start":1138,"line_end":1138,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1078}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":195811,"byte_end":195816,"line_start":1149,"line_end":1149,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1083}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1239},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":1781,"byte_end":1789,"line_start":71,"line_end":71,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1240}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1241},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":2336,"byte_end":2344,"line_start":88,"line_end":88,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1242}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1310},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":3112,"byte_end":3128,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":1309},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1312},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":3170,"byte_end":3178,"line_start":113,"line_end":113,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr { layout }","parent":{"krate":0,"index":1309},"children":[],"decl_id":null,"docs":" Error due to the allocator.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1309},"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/lib.rs","byte_start":2971,"byte_end":2989,"line_start":108,"line_end":108,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"CollectionAllocErr::{CapacityOverflow, AllocErr}","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1312}],"decl_id":null,"docs":" Augments `AllocErr` with a `CapacityOverflow` variant.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/sse2.rs","byte_start":5354358,"byte_end":5354363,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":54437,"byte_end":54444,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":56557,"byte_end":56564,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":56852,"byte_end":56863,"line_start":99,"line_end":99,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":7052,"byte_end":7063,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":9738,"byte_end":9746,"line_start":154,"line_end":154,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13815,"byte_end":13821,"line_start":267,"line_end":267,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13847,"byte_end":13853,"line_start":269,"line_end":269,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13951,"byte_end":13957,"line_start":276,"line_end":276,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":15975,"byte_end":15983,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40616,"byte_end":40624,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40669,"byte_end":40677,"line_start":978,"line_end":978,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40724,"byte_end":40732,"line_start":980,"line_end":980,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":43195,"byte_end":43203,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":43571,"byte_end":43579,"line_start":1065,"line_end":1065,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":44513,"byte_end":44525,"line_start":1101,"line_end":1101,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47208,"byte_end":47220,"line_start":1167,"line_end":1167,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47251,"byte_end":47263,"line_start":1168,"line_end":1168,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47289,"byte_end":47301,"line_start":1170,"line_end":1170,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47556,"byte_end":47568,"line_start":1182,"line_end":1182,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":48959,"byte_end":48971,"line_start":1220,"line_end":1220,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49156,"byte_end":49163,"line_start":1228,"line_end":1228,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49336,"byte_end":49343,"line_start":1238,"line_end":1238,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49958,"byte_end":49965,"line_start":1261,"line_end":1261,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49998,"byte_end":50005,"line_start":1262,"line_end":1262,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50202,"byte_end":50213,"line_start":1271,"line_end":1271,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50331,"byte_end":50342,"line_start":1278,"line_end":1278,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50387,"byte_end":50398,"line_start":1279,"line_end":1279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50979,"byte_end":50990,"line_start":1301,"line_end":1301,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51444,"byte_end":51455,"line_start":1320,"line_end":1320,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51725,"byte_end":51736,"line_start":1334,"line_end":1334,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51769,"byte_end":51780,"line_start":1335,"line_end":1335,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52320,"byte_end":52328,"line_start":1352,"line_end":1352,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52450,"byte_end":52458,"line_start":1359,"line_end":1359,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52507,"byte_end":52515,"line_start":1360,"line_end":1360,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52558,"byte_end":52566,"line_start":1362,"line_end":1362,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53235,"byte_end":53243,"line_start":1385,"line_end":1385,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53566,"byte_end":53574,"line_start":1402,"line_end":1402,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53611,"byte_end":53619,"line_start":1403,"line_end":1403,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":64371,"byte_end":64378,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":65356,"byte_end":65363,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":73607,"byte_end":73614,"line_start":558,"line_end":558,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":86186,"byte_end":86193,"line_start":961,"line_end":961,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89082,"byte_end":89089,"line_start":1022,"line_end":1022,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89410,"byte_end":89417,"line_start":1038,"line_end":1038,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89511,"byte_end":89518,"line_start":1046,"line_end":1046,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89734,"byte_end":89741,"line_start":1057,"line_end":1057,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":90010,"byte_end":90017,"line_start":1068,"line_end":1068,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":90828,"byte_end":90832,"line_start":1100,"line_end":1100,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91035,"byte_end":91039,"line_start":1110,"line_end":1110,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91817,"byte_end":91824,"line_start":1132,"line_end":1132,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91850,"byte_end":91857,"line_start":1134,"line_end":1134,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":92497,"byte_end":92505,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93125,"byte_end":93129,"line_start":1179,"line_end":1179,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93292,"byte_end":93296,"line_start":1188,"line_end":1188,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93820,"byte_end":93826,"line_start":1206,"line_end":1206,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93991,"byte_end":93997,"line_start":1215,"line_end":1215,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":94467,"byte_end":94472,"line_start":1232,"line_end":1232,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96308,"byte_end":96327,"line_start":1290,"line_end":1290,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96401,"byte_end":96420,"line_start":1296,"line_end":1296,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97027,"byte_end":97045,"line_start":1321,"line_end":1321,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97837,"byte_end":97855,"line_start":1350,"line_end":1350,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98767,"byte_end":98782,"line_start":1382,"line_end":1382,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":100161,"byte_end":100172,"line_start":1435,"line_end":1435,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":103946,"byte_end":103965,"line_start":1563,"line_end":1563,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106695,"byte_end":106712,"line_start":1658,"line_end":1658,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":108615,"byte_end":108633,"line_start":1725,"line_end":1725,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":108810,"byte_end":108821,"line_start":1731,"line_end":1731,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109152,"byte_end":109171,"line_start":1740,"line_end":1740,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109426,"byte_end":109443,"line_start":1749,"line_end":1749,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109608,"byte_end":109623,"line_start":1755,"line_end":1755,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110212,"byte_end":110217,"line_start":1775,"line_end":1775,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110774,"byte_end":110787,"line_start":1794,"line_end":1794,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110880,"byte_end":110893,"line_start":1801,"line_end":1801,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110995,"byte_end":111008,"line_start":1809,"line_end":1809,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":111492,"byte_end":111503,"line_start":1828,"line_end":1828,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":112130,"byte_end":112137,"line_start":1854,"line_end":1854,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":112881,"byte_end":112885,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113251,"byte_end":113255,"line_start":1898,"line_end":1898,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113374,"byte_end":113378,"line_start":1905,"line_end":1905,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113421,"byte_end":113428,"line_start":1907,"line_end":1907,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113806,"byte_end":113813,"line_start":1922,"line_end":1922,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113931,"byte_end":113938,"line_start":1928,"line_end":1928,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113979,"byte_end":113986,"line_start":1930,"line_end":1930,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114192,"byte_end":114200,"line_start":1940,"line_end":1940,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114461,"byte_end":114469,"line_start":1952,"line_end":1952,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114583,"byte_end":114591,"line_start":1958,"line_end":1958,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114642,"byte_end":114650,"line_start":1960,"line_end":1960,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114812,"byte_end":114816,"line_start":1966,"line_end":1966,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115097,"byte_end":115101,"line_start":1978,"line_end":1978,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115219,"byte_end":115223,"line_start":1984,"line_end":1984,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115266,"byte_end":115272,"line_start":1986,"line_end":1986,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115553,"byte_end":115559,"line_start":1998,"line_end":1998,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115677,"byte_end":115683,"line_start":2004,"line_end":2004,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115726,"byte_end":115735,"line_start":2006,"line_end":2006,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116024,"byte_end":116033,"line_start":2018,"line_end":2018,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116151,"byte_end":116160,"line_start":2024,"line_end":2024,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116201,"byte_end":116210,"line_start":2026,"line_end":2026,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116426,"byte_end":116431,"line_start":2036,"line_end":2036,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116696,"byte_end":116701,"line_start":2048,"line_end":2048,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116819,"byte_end":116824,"line_start":2054,"line_end":2054,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116865,"byte_end":116870,"line_start":2056,"line_end":2056,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":117070,"byte_end":117075,"line_start":2066,"line_end":2066,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":120726,"byte_end":120731,"line_start":2202,"line_end":2202,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121487,"byte_end":121500,"line_start":2231,"line_end":2231,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128155,"byte_end":128166,"line_start":2461,"line_end":2461,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":130276,"byte_end":130283,"line_start":2544,"line_end":2544,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":130685,"byte_end":130692,"line_start":2560,"line_end":2560,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":131444,"byte_end":131451,"line_start":2584,"line_end":2584,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162249,"byte_end":162259,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162412,"byte_end":162422,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162566,"byte_end":162576,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":166751,"byte_end":166758,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167779,"byte_end":167786,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":170297,"byte_end":170304,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188410,"byte_end":188417,"line_start":862,"line_end":862,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188665,"byte_end":188672,"line_start":876,"line_end":876,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188754,"byte_end":188761,"line_start":883,"line_end":883,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188982,"byte_end":188989,"line_start":893,"line_end":893,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189262,"byte_end":189269,"line_start":906,"line_end":906,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189501,"byte_end":189508,"line_start":917,"line_end":917,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189734,"byte_end":189741,"line_start":928,"line_end":928,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":196104,"byte_end":196111,"line_start":1163,"line_end":1163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":196951,"byte_end":196955,"line_start":1195,"line_end":1195,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197104,"byte_end":197108,"line_start":1203,"line_end":1203,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197367,"byte_end":197371,"line_start":1215,"line_end":1215,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197482,"byte_end":197486,"line_start":1221,"line_end":1221,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197533,"byte_end":197537,"line_start":1223,"line_end":1223,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197694,"byte_end":197702,"line_start":1229,"line_end":1229,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197961,"byte_end":197969,"line_start":1241,"line_end":1241,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198076,"byte_end":198084,"line_start":1247,"line_end":1247,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198127,"byte_end":198135,"line_start":1249,"line_end":1249,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198349,"byte_end":198354,"line_start":1256,"line_end":1256,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198617,"byte_end":198622,"line_start":1268,"line_end":1268,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198733,"byte_end":198738,"line_start":1274,"line_end":1274,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198785,"byte_end":198790,"line_start":1276,"line_end":1276,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199008,"byte_end":199020,"line_start":1283,"line_end":1283,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199204,"byte_end":199216,"line_start":1293,"line_end":1293,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199684,"byte_end":199696,"line_start":1317,"line_end":1317,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199921,"byte_end":199933,"line_start":1327,"line_end":1327,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200014,"byte_end":200024,"line_start":1334,"line_end":1334,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200206,"byte_end":200216,"line_start":1344,"line_end":1344,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200688,"byte_end":200698,"line_start":1368,"line_end":1368,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200784,"byte_end":200794,"line_start":1375,"line_end":1375,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201011,"byte_end":201030,"line_start":1385,"line_end":1385,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201201,"byte_end":201220,"line_start":1394,"line_end":1394,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201522,"byte_end":201541,"line_start":1411,"line_end":1411,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201627,"byte_end":201646,"line_start":1418,"line_end":1418,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201863,"byte_end":201868,"line_start":1428,"line_end":1428,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202026,"byte_end":202031,"line_start":1437,"line_end":1437,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202117,"byte_end":202122,"line_start":1444,"line_end":1444,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202346,"byte_end":202351,"line_start":1454,"line_end":1454,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/sse2.rs","byte_start":5354358,"byte_end":5354363,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":54437,"byte_end":54444,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":56557,"byte_end":56564,"line_start":85,"line_end":85,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1276},"to":{"krate":1,"index":3703}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/bitmask.rs","byte_start":56852,"byte_end":56863,"line_start":99,"line_end":99,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":7052,"byte_end":7063,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":9738,"byte_end":9746,"line_start":154,"line_end":154,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":71},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13815,"byte_end":13821,"line_start":267,"line_end":267,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":82},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13847,"byte_end":13853,"line_start":269,"line_end":269,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":82},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":13951,"byte_end":13957,"line_start":276,"line_end":276,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":15975,"byte_end":15983,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40616,"byte_end":40624,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40669,"byte_end":40677,"line_start":978,"line_end":978,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":40724,"byte_end":40732,"line_start":980,"line_end":980,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":43195,"byte_end":43203,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":43571,"byte_end":43579,"line_start":1065,"line_end":1065,"column_start":26,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":3703}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":44513,"byte_end":44525,"line_start":1101,"line_end":1101,"column_start":9,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47208,"byte_end":47220,"line_start":1167,"line_end":1167,"column_start":25,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47251,"byte_end":47263,"line_start":1168,"line_end":1168,"column_start":25,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47289,"byte_end":47301,"line_start":1170,"line_end":1170,"column_start":19,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":47556,"byte_end":47568,"line_start":1182,"line_end":1182,"column_start":22,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":48959,"byte_end":48971,"line_start":1220,"line_end":1220,"column_start":27,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49156,"byte_end":49163,"line_start":1228,"line_end":1228,"column_start":19,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49336,"byte_end":49343,"line_start":1238,"line_end":1238,"column_start":22,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49958,"byte_end":49965,"line_start":1261,"line_end":1261,"column_start":31,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":49998,"byte_end":50005,"line_start":1262,"line_end":1262,"column_start":27,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50202,"byte_end":50213,"line_start":1271,"line_end":1271,"column_start":9,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50331,"byte_end":50342,"line_start":1278,"line_end":1278,"column_start":25,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50387,"byte_end":50398,"line_start":1279,"line_end":1279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":50979,"byte_end":50990,"line_start":1301,"line_end":1301,"column_start":18,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51444,"byte_end":51455,"line_start":1320,"line_end":1320,"column_start":22,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51725,"byte_end":51736,"line_start":1334,"line_end":1334,"column_start":31,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":51769,"byte_end":51780,"line_start":1335,"line_end":1335,"column_start":27,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52320,"byte_end":52328,"line_start":1352,"line_end":1352,"column_start":9,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52450,"byte_end":52458,"line_start":1359,"line_end":1359,"column_start":25,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52507,"byte_end":52515,"line_start":1360,"line_end":1360,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":52558,"byte_end":52566,"line_start":1362,"line_end":1362,"column_start":18,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53235,"byte_end":53243,"line_start":1385,"line_end":1385,"column_start":22,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53566,"byte_end":53574,"line_start":1402,"line_end":1402,"column_start":31,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/raw/mod.rs","byte_start":53611,"byte_end":53619,"line_start":1403,"line_end":1403,"column_start":27,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":64371,"byte_end":64378,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":65356,"byte_end":65363,"line_start":241,"line_end":241,"column_start":15,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":73607,"byte_end":73614,"line_start":558,"line_end":558,"column_start":15,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":86186,"byte_end":86193,"line_start":961,"line_end":961,"column_start":15,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89082,"byte_end":89089,"line_start":1022,"line_end":1022,"column_start":29,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89410,"byte_end":89417,"line_start":1038,"line_end":1038,"column_start":22,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89511,"byte_end":89518,"line_start":1046,"line_end":1046,"column_start":25,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":89734,"byte_end":89741,"line_start":1057,"line_end":1057,"column_start":27,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":90010,"byte_end":90017,"line_start":1068,"line_end":1068,"column_start":40,"column_end":47},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":1780}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":90828,"byte_end":90832,"line_start":1100,"line_end":1100,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91035,"byte_end":91039,"line_start":1110,"line_end":1110,"column_start":41,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91817,"byte_end":91824,"line_start":1132,"line_end":1132,"column_start":40,"column_end":47},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":405},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":91850,"byte_end":91857,"line_start":1134,"line_end":1134,"column_start":12,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":92497,"byte_end":92505,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93125,"byte_end":93129,"line_start":1179,"line_end":1179,"column_start":22,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93292,"byte_end":93296,"line_start":1188,"line_end":1188,"column_start":34,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93820,"byte_end":93826,"line_start":1206,"line_end":1206,"column_start":22,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":439},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":93991,"byte_end":93997,"line_start":1215,"line_end":1215,"column_start":34,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":439},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":94467,"byte_end":94472,"line_start":1232,"line_end":1232,"column_start":12,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96308,"byte_end":96327,"line_start":1290,"line_end":1290,"column_start":28,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":483},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":96401,"byte_end":96420,"line_start":1296,"line_end":1296,"column_start":28,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":483},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97027,"byte_end":97045,"line_start":1321,"line_end":1321,"column_start":19,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":97837,"byte_end":97855,"line_start":1350,"line_end":1350,"column_start":19,"column_end":37},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":98767,"byte_end":98782,"line_start":1382,"line_end":1382,"column_start":19,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":100161,"byte_end":100172,"line_start":1435,"line_end":1435,"column_start":19,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":103946,"byte_end":103965,"line_start":1563,"line_end":1563,"column_start":16,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":106695,"byte_end":106712,"line_start":1658,"line_end":1658,"column_start":19,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":108615,"byte_end":108633,"line_start":1725,"line_end":1725,"column_start":25,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":466},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":108810,"byte_end":108821,"line_start":1731,"line_end":1731,"column_start":39,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":472},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109152,"byte_end":109171,"line_start":1740,"line_end":1740,"column_start":36,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":483},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109426,"byte_end":109443,"line_start":1749,"line_end":1749,"column_start":25,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":495},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":109608,"byte_end":109623,"line_start":1755,"line_end":1755,"column_start":25,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":502},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110212,"byte_end":110217,"line_start":1775,"line_end":1775,"column_start":39,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":611},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110774,"byte_end":110787,"line_start":1794,"line_end":1794,"column_start":31,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":1535}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110880,"byte_end":110893,"line_start":1801,"line_end":1801,"column_start":31,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":110995,"byte_end":111008,"line_start":1809,"line_end":1809,"column_start":39,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":111492,"byte_end":111503,"line_start":1828,"line_end":1828,"column_start":32,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":112130,"byte_end":112137,"line_start":1854,"line_end":1854,"column_start":32,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":3703}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":112881,"byte_end":112885,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113251,"byte_end":113255,"line_start":1898,"line_end":1898,"column_start":34,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113374,"byte_end":113378,"line_start":1905,"line_end":1905,"column_start":30,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113421,"byte_end":113428,"line_start":1907,"line_end":1907,"column_start":29,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":405},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113806,"byte_end":113813,"line_start":1922,"line_end":1922,"column_start":34,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":405},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113931,"byte_end":113938,"line_start":1928,"line_end":1928,"column_start":30,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":405},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":113979,"byte_end":113986,"line_start":1930,"line_end":1930,"column_start":27,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":405},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114192,"byte_end":114200,"line_start":1940,"line_end":1940,"column_start":25,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114461,"byte_end":114469,"line_start":1952,"line_end":1952,"column_start":34,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114583,"byte_end":114591,"line_start":1958,"line_end":1958,"column_start":30,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114642,"byte_end":114650,"line_start":1960,"line_end":1960,"column_start":41,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":418},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":114812,"byte_end":114816,"line_start":1966,"line_end":1966,"column_start":29,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115097,"byte_end":115101,"line_start":1978,"line_end":1978,"column_start":34,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115219,"byte_end":115223,"line_start":1984,"line_end":1984,"column_start":30,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115266,"byte_end":115272,"line_start":1986,"line_end":1986,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":439},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115553,"byte_end":115559,"line_start":1998,"line_end":1998,"column_start":34,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":439},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115677,"byte_end":115683,"line_start":2004,"line_end":2004,"column_start":30,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":439},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":115726,"byte_end":115735,"line_start":2006,"line_end":2006,"column_start":29,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116024,"byte_end":116033,"line_start":2018,"line_end":2018,"column_start":34,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116151,"byte_end":116160,"line_start":2024,"line_end":2024,"column_start":30,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116201,"byte_end":116210,"line_start":2026,"line_end":2026,"column_start":27,"column_end":36},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":461},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116426,"byte_end":116431,"line_start":2036,"line_end":2036,"column_start":29,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116696,"byte_end":116701,"line_start":2048,"line_end":2048,"column_start":34,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116819,"byte_end":116824,"line_start":2054,"line_end":2054,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":116865,"byte_end":116870,"line_start":2056,"line_end":2056,"column_start":27,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":117070,"byte_end":117075,"line_start":2066,"line_end":2066,"column_start":19,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":120726,"byte_end":120731,"line_start":2202,"line_end":2202,"column_start":28,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":121487,"byte_end":121500,"line_start":2231,"line_end":2231,"column_start":19,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":128155,"byte_end":128166,"line_start":2461,"line_end":2461,"column_start":19,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":130276,"byte_end":130283,"line_start":2544,"line_end":2544,"column_start":40,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":3699}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":130685,"byte_end":130692,"line_start":2560,"line_end":2560,"column_start":34,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":3712}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/map.rs","byte_start":131444,"byte_end":131451,"line_start":2584,"line_end":2584,"column_start":46,"column_end":53},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1290},"to":{"krate":1,"index":3712}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162249,"byte_end":162259,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":1704}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162412,"byte_end":162422,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":1715}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/scopeguard.rs","byte_start":162566,"byte_end":162576,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":900},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":166751,"byte_end":166758,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":167779,"byte_end":167786,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":170297,"byte_end":170304,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188410,"byte_end":188417,"line_start":862,"line_end":862,"column_start":26,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188665,"byte_end":188672,"line_start":876,"line_end":876,"column_start":19,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188754,"byte_end":188761,"line_start":883,"line_end":883,"column_start":27,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":188982,"byte_end":188989,"line_start":893,"line_end":893,"column_start":32,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":3699}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189262,"byte_end":189269,"line_start":906,"line_end":906,"column_start":26,"column_end":33},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":3712}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189501,"byte_end":189508,"line_start":917,"line_end":917,"column_start":34,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":3712}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":189734,"byte_end":189741,"line_start":928,"line_end":928,"column_start":24,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":2189}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":196104,"byte_end":196111,"line_start":1163,"line_end":1163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":3703}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":196951,"byte_end":196955,"line_start":1195,"line_end":1195,"column_start":19,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197104,"byte_end":197108,"line_start":1203,"line_end":1203,"column_start":26,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197367,"byte_end":197371,"line_start":1215,"line_end":1215,"column_start":35,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197482,"byte_end":197486,"line_start":1221,"line_end":1221,"column_start":27,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197533,"byte_end":197537,"line_start":1223,"line_end":1223,"column_start":36,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197694,"byte_end":197702,"line_start":1229,"line_end":1229,"column_start":22,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1055},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":197961,"byte_end":197969,"line_start":1241,"line_end":1241,"column_start":31,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1055},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198076,"byte_end":198084,"line_start":1247,"line_end":1247,"column_start":27,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1055},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198127,"byte_end":198135,"line_start":1249,"line_end":1249,"column_start":36,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1055},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198349,"byte_end":198354,"line_start":1256,"line_end":1256,"column_start":22,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198617,"byte_end":198622,"line_start":1268,"line_end":1268,"column_start":31,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":3691}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198733,"byte_end":198738,"line_start":1274,"line_end":1274,"column_start":27,"column_end":32},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":198785,"byte_end":198790,"line_start":1276,"line_end":1276,"column_start":36,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199008,"byte_end":199020,"line_start":1283,"line_end":1283,"column_start":22,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199204,"byte_end":199216,"line_start":1293,"line_end":1293,"column_start":29,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199684,"byte_end":199696,"line_start":1317,"line_end":1317,"column_start":27,"column_end":39},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":199921,"byte_end":199933,"line_start":1327,"line_end":1327,"column_start":30,"column_end":42},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200014,"byte_end":200024,"line_start":1334,"line_end":1334,"column_start":22,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200206,"byte_end":200216,"line_start":1344,"line_end":1344,"column_start":29,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200688,"byte_end":200698,"line_start":1368,"line_end":1368,"column_start":30,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":200784,"byte_end":200794,"line_start":1375,"line_end":1375,"column_start":27,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201011,"byte_end":201030,"line_start":1385,"line_end":1385,"column_start":22,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201201,"byte_end":201220,"line_start":1394,"line_end":1394,"column_start":29,"column_end":48},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3496}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201522,"byte_end":201541,"line_start":1411,"line_end":1411,"column_start":30,"column_end":49},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201627,"byte_end":201646,"line_start":1418,"line_end":1418,"column_start":27,"column_end":46},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1074},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":201863,"byte_end":201868,"line_start":1428,"line_end":1428,"column_start":22,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":2164}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202026,"byte_end":202031,"line_start":1437,"line_end":1437,"column_start":30,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":3762}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202117,"byte_end":202122,"line_start":1444,"line_end":1444,"column_start":27,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":7185}},{"span":{"file_name":"/home/gautam/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.1/src/set.rs","byte_start":202346,"byte_end":202351,"line_start":1454,"line_end":1454,"column_start":29,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":3496}}]}